{"version":3,"sources":["history.js","img/LOGINBACK.svg","Pages/Login/Login.jsx","Component/Admin/Sidebar/Sidebar.jsx","Pages/AddEmployee/HappyBirthday.svg","Pages/config/config.js","Pages/AddEmployee/UpcomingBirthdays.jsx","Component/Admin/Dashboard/Chart/TaskChart.jsx","Pages/Chart/DepartmentChart.jsx","Pages/LeaveCalendar/HolidayList.jsx","Component/Admin/Dashboard/CountData/EmployeeCount.jsx","Component/Admin/Dashboard/CountData/LeavesCount.jsx","Context/AttendanceContext/AttendanceContext.js","img/NoticeBadge.svg","Component/Admin/Notification/NoticeBoard.jsx","Pages/Chart/DailyAttendChart.jsx","Component/Admin/Dashboard/AdminDash.jsx","Pages/Department/RoleTable.jsx","Pages/Department/RoleForm.jsx","Pages/Department/RoleFormEdit.jsx","Pages/Department/Role.jsx","Pages/Department/PositionTable.jsx","Pages/Department/PositionForm.jsx","Pages/Department/PositionFormEdit.jsx","Pages/Department/Position.jsx","Pages/Department/DepartmentTable.jsx","Pages/Department/DepartmentForm.jsx","Pages/Department/DepartmentFormEdit.jsx","Pages/Department/Department.jsx","Component/Admin/AdminPortalTable.jsx","Component/Admin/AdminPortalForm.jsx","Component/Admin/AdminPortalFormEdit.jsx","Component/Admin/AdminPortal.jsx","Component/Admin/AdminProjectBidTable.jsx","Component/Admin/AdminProjectBidForm.jsx","Component/Admin/AdminProjectBidFormEdit.jsx","Component/Admin/AdminProjectBid.jsx","Pages/Salary/SalaryTable.jsx","Pages/Salary/SalaryForm.jsx","Pages/Salary/SalaryFormEdit.jsx","Pages/Salary/Salary.jsx","Component/HrManager/LeaveStatus/LeaveApplicationHRTable.jsx","Component/HrManager/LeaveStatus/LeaveApplicationHRFormEdit.jsx","Component/HrManager/LeaveStatus/LeaveApplicationHR.jsx","Pages/AddEmployee/EmployeeTable.jsx","Pages/PageNot/NotFound404.jsx","Component/Admin/TaskManagement/AdminAsignTask.jsx","Component/Admin/TaskManagement/AdminTaskStatus.jsx","Component/Admin/TaskManagement/AdminCancleTask.jsx","Component/Admin/TaskManagement/AdminCompleteTask.jsx","Component/Admin/TaskManagement/RejectedTask.jsx","Component/Admin/TaskManagement/AdminAssignedTask.jsx","Component/Admin/attendance/SelfAttendance.jsx","Component/Admin/attendance/Attendance.jsx","Component/Admin/attendance/ViewAttendance.jsx","Pages/LeaveCalendar/Container.jsx","Pages/LeaveCalendar/LeaveCalendar.jsx","Pages/Location/CountryTable.jsx","Pages/Location/CountryForm.jsx","Pages/Location/CountryFormEdit.jsx","Pages/Location/Country.jsx","Pages/Location/StateTable.jsx","Pages/Location/StateForm.jsx","Pages/Location/StateFormEdit.jsx","Pages/Location/State.jsx","Pages/Location/CityTable.jsx","Pages/Location/CityForm.jsx","Pages/Location/CityFormEdit.jsx","Pages/Location/City.jsx","Pages/Company/CompanyTable.jsx","Pages/Company/CompanyForm.jsx","Pages/Company/CompanyFormEdit.jsx","Pages/Company/Company.jsx","Component/InnerDashContainer.jsx","Pages/ApplyLeave/LeaveApplicationTable.jsx","Pages/ApplyLeave/Leave.svg","Pages/ApplyLeave/LeaveApplicationForm.jsx","Pages/ApplyLeave/LeaveApplicationFormEdit.jsx","Pages/ApplyLeave/LeaveApplication.jsx","Component/HrManager/LeaveStatus/LeaveApplicationHRAccept.jsx","Component/HrManager/LeaveStatus/LeaveApplicationHRReject.jsx","Component/Admin/Notification/Notification.jsx","Component/Admin/Notification/NoticeManagement.jsx","Component/Admin/Routes.jsx","img/logo.png","Pages/Navbar/NavBar.jsx","Component/DashContainer.jsx","Component/Admin/DashboardAdmin.jsx","Component/HrManager/Sidebar.jsx","Pages/AddEmployee/EmployeeForm.jsx","Pages/AddEmployee/EmployeeFormEdit.jsx","Pages/AddEmployee/EmployeeInfo.jsx","Component/Employee/EmpPresonal/FloralAbstract.jpg","Component/Employee/EmpEducation/EducationTable.jsx","Component/Employee/EmpEducation/EducationForm.jsx","Component/Employee/EmpEducation/EducationFormEdit.jsx","Component/Employee/EmpEducation/Education.jsx","Component/Employee/EmpWorkExp/WorkExperienceTable.jsx","Component/Employee/EmpWorkExp/WorkExperienceForm.jsx","Component/Employee/EmpWorkExp/WorkExperienceFormEdit.jsx","Component/Employee/EmpWorkExp/WorkExperience.jsx","Component/Employee/EmpFamily/FamilyInfoTable.jsx","Component/Employee/EmpFamily/FamilyInfoForm.jsx","Component/Employee/EmpFamily/FamilyInfoFormEdit.jsx","Component/Employee/EmpFamily/FamilyInfo.jsx","Component/Employee/EmpPresonal/PersonalInfoTable.jsx","Component/Employee/EmpPresonal/Personalinfo.svg","Component/Employee/EmpPresonal/PersonalInfoFormEdit.jsx","Component/Employee/EmpPresonal/PersonalInfo.jsx","Pages/AddEmployee/Employee.jsx","Pages/Chart/TaskChart.jsx","Component/HrManager/Dashboard/CountData/LeavesCount.jsx","Component/HrManager/Dashboard/CountData/EmployeeCount.jsx","Component/HrManager/Notification/NoticeBoard.jsx","Component/HrManager/Dashboard/HRDash.jsx","img/AttendanceNotAvailable.svg","Component/HrManager/attendance/ViewAttendance.jsx","Component/HrManager/ManagerTaskManagement/ManagerNewTask.jsx","Component/HrManager/ManagerTaskManagement/ManagerCencelledTask.jsx","Component/HrManager/ManagerTaskManagement/ManagerCompletedTask.jsx","Component/HrManager/ManagerTaskManagement/ManagerRejectedTask.jsx","Component/HrManager/ManagerTaskManagement/ManagerActiveTask.jsx","Component/HrManager/attendance/SelfAttendance.jsx","Component/HrManager/attendance/Attendance.jsx","Pages/DailyAttendance/TodaysAttendance.jsx","Component/HrManager/attendance/ManualAttendance.jsx","Component/HrManager/attendance/AttendanceRegister.jsx","Component/HrManager/Notification/Notification.jsx","Component/HrManager/Router.jsx","Context/AttendanceContext/smallSidebarcontext.jsx","Component/HrManager/DashboardHR.jsx","Component/Employee/sidebar/Sidebar.jsx","Component/Employee/EmpLeave/LeaveApplicationEmpTable.jsx","Component/Employee/EmpLeave/Leave.svg","Component/Employee/EmpLeave/LeaveApplicationEmpForm.jsx","Component/Employee/EmpLeave/LeaveApplicationEmpFormEdit.jsx","Component/Employee/EmpLeave/LeaveApplicationEmp.jsx","Component/Employee/EmployeeTaskManagement/EmployeeNewTask.jsx","Component/Employee/EmployeeTaskManagement/EmployeeActiveTask.jsx","Component/Employee/EmployeeTaskManagement/EmployeeCompleteTask.jsx","Component/Employee/EmployeeTaskManagement/EmployeeRejectTask.jsx","Component/Employee/attendance/Attendance.jsx","Component/Employee/attendance/AttendanceList.jsx","Component/Employee/Dashboard/CountData/HappyBirthday.svg","Component/Employee/Dashboard/CountData/UpcomingBirthdays.jsx","Component/Employee/Dashboard/EmpChart.jsx/EmpTaskChart.jsx","Component/Employee/Dashboard/EmpChart.jsx/DepartmentChart.jsx","Component/Employee/Notification/NoticeBoard.jsx","Component/Employee/Dashboard/CountData/EmpProfile.jsx","Component/Employee/Dashboard/EmpDash.jsx","Component/Employee/attendance/SelfAttendance.jsx","Component/Employee/Notification/Notification.jsx","Component/Employee/router/Routes.jsx","Component/Employee/DashboardEmployee.jsx","Component/Manager/Sidebar.jsx","Component/Manager/LeaveApplicationHRTable.jsx","Component/Manager/LeaveApplicationHRFormEdit.jsx","Component/Manager/LeaveApplicationHR.jsx","Component/Manager/Dashboard/Chart/TaskChart.jsx","Component/Manager/Dashboard/CountData/LeavesCount.jsx","Component/Manager/Dashboard/CountData/EmployeeCount.jsx","Component/Manager/Notification/NoticeBoard.jsx","Component/Manager/Dashboard/ManagerDash.jsx","Component/Manager/ManagerTaskManagement/ManagerNewTask.jsx","Component/Manager/ManagerTaskManagement/ManagerCencelledTask.jsx","Component/Manager/ManagerTaskManagement/ManagerCompletedTask.jsx","Component/Manager/ManagerTaskManagement/ManagerRejectedTask.jsx","Component/Manager/ManagerTaskManagement/ManagerActiveTask.jsx","Component/Manager/attendance/SelfAttendance.jsx","Component/Manager/attendance/Attendance.jsx","Component/Manager/Notification/Notification.jsx","Component/Manager/Router.jsx","Component/Manager/ManagerDashboard.jsx","Pages/ForgotPass/ForgetPass.jsx","App.js","serviceWorker.js","Context/AttendanceContext/AttendanceContextProvider.jsx","index.js"],"names":["createBrowserHistory","Login","props","alertMsg","useState","seePass","setSeepass","setPassword","_jsx","style","height","width","overflow","className","children","_jsxs","onSubmit","color","FaUserCircle","for","name","placeholder","type","onChange","e","target","value","position","top","right","outline","border","onClick","preventDefault","GoEyeClosed","RxEyeOpen","pass","fontWeight","bottom","left","transform","whiteSpace","display","background","Link","to","backgroundColor","wordSpacing","letterSpacing","margin","src","LoginIMG","alt","buttonStyle","dropdownStyle","zIndex","borderLeft","Sidebar","activeCategory","setActiveCategory","extended","setExtended","allLinks","icon","MdDashboard","navLinks","label","FaUserTie","FaCalendarCheck","FcLeave","MdTaskAlt","TbDeviceIpadMinus","BsBuildingsFill","FaAddressBook","TfiBlackboard","MdHolidayVillage","AiOutlineFundProjectionScreen","minHeight","maxHeight","overflowY","borderBottom","ExtendClick","cursor","concat","MdMenuOpen","map","_ref","onMouseEnter","onMouseLeave","alignItems","transition","link","BASE_URL","UpcomingBirthdays","employeeData","setEmployeeData","loading","setLoading","rowData","setRowData","searchInput","setSearchInput","isIdFilterActive","setIsIdFilterActive","isIdSortAscending","setIsIdSortAscending","upcomingBirthdays","setUpcomingBirthdays","useEffect","axios","get","headers","authorization","localStorage","getItem","then","response","Array","isArray","data","forEach","temp","Email","Password","Account","RoleName","FirstName","MiddleName","LastName","DOB","slice","ContactNo","EmployeeCode","empID","DepartmentName","PositionName","DateOfJoining","prevData","console","error","catch","log","calculateUpcomingBirthdays","today","Date","upcomingBirthdaysData","filter","employee","dob","setFullYear","getFullYear","timeDiff","daysDiff","Math","ceil","GiPartyPopper","length","_employee$data","_employee$data$profil","_employee$data2","_employee$data2$profi","verticalAlign","borderRadius","objectFit","profile","image_url","fontSize","HappyBirthday","opacity","TaskChart","departmentData","setDepartmentData","tasks","setTasks","setError","_data$department$","async","message","loadTaskData","calculateRemainingTime","endDate","now","remainingTime","abs","delay","days","hours","minutes","floor","departmentCounts","department","taskStatusCounts","Total","Assigned","status","ActiveTask","task","canceled","Completed","overdue","onTime","taskStatusChartData","Object","values","keys","options","chart","id","fill","colors","xaxis","categories","title","text","yaxis","series","boxShadow","Chart","DepartmentChart","chartOption","setChartOption","labels","legend","plotOptions","pie","donut","show","total","updateChartOptions","_Fragment","HolidayList","holidaysData","setHolidaysData","filteredHolidays","setFilteredHolidays","isListVisible","setListVisibility","searchTerm","setSearchTerm","statusText","fetchHolidays","filterHolidays","filtered","holiday","holidayName","toLowerCase","includes","getHolidayIcons","holidayType","justifyContent","GiIndianPalace","PiBankBold","MdCreateNewFolder","index","holidayDate","holidayMonth","holidayYear","css","_templateObject","_taggedTemplateLiteral","AdminEmployeeTable","selectedFilter","setSelectedFilter","loadEmployeeData","filteredData","item","isMatchingId","isMatchingFirstName","sort","sortById","a","b","idA","idB","localeCompare","adminCount","hrCount","managerCount","employeeCount","IoIosArrowDroprightCircle","LeaveApplicationHRTable","leaveApplicationHRData","setLeaveApplicationHRData","searchData","setSearchData","totalLeaves","setTotalLeaves","sortColumn","setSortColumn","sortDirection","setSortDirection","leaveApplicationHRObj","rowDataT","loadLeaveApplicationHRData","Name","Leavetype","FromDate","ToDate","Reasonforleave","Status","push","updateTotalLeaves","s","pendingLeaves","approvedLeaves","rejectedLeaves","AttendanceContext","createContext","NoticeBoard","notice","setNotice","socket","useContext","Notice","on","prev","maxWidth","overflowX","val","i","ar","findIndex","noticeId","pdfHandler","path","attachments","window","open","textAlign","TiDeleteOutline","post","res","alert","err","deleteHandler","NoticeBadge","DailyAttendChart","attendanceData","setAttendanceData","statusCounts","setStatusCounts","Present","Late","Absent","fetchAttendanceData","counts","reduce","acc","user","getAttendanceMark","loginTime","attendance","loginHour","loginMinute","split","Number","seriesData","chartOptions","stroke","useSeriesColors","markers","strokeWidth","strokeColor","fillColors","undefined","radius","offsetX","offsetY","customHTML","toggleOnLegendClick","itemMargin","horizontal","vertical","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","responsive","breakpoint","ReactApexChart","AdminDash","EmployeeCount","LeaveCount","override","RoleTable","Component","constructor","arguments","state","roleData","updateTotalRole","getRowHeight","params","roleObj","loadRoleData","this","setState","CompanyName","onRoleDelete","confirm","delete","componentDidMount","renderButton","FontAwesomeIcon","faTrash","renderEditButton","faEdit","onEditRole","render","scrollbarWidth","Button","variant","onAddRole","faPlus","RingLoader","sizeUnit","size","React","Fragment","RoleForm","companyInfo","companyData","loadCompanyInfo","componentWillMount","Form","onRoleSubmit","Group","as","Row","Label","column","sm","Col","Control","required","disabled","selected","span","offset","onFormClose","RoleData","editData","onRoleEditUpdate","onFormEditClose","Role","table","editForm","handleRoleSubmit","event","body","CompanyID","handleAddRole","handleEditRole","handleFormClose","handleEditFormClose","handleRoleEditUpdate","info","formData1","formData2","put","RoleFormEdit","PositionTable","positionData","totalPositions","positionObj","loadPositionData","updateTotalPositions","onPositionDelete","onEditPosition","onAddPosition","Table","PositionForm","onPositionSubmit","PositionData","onPositionEditUpdate","Position","handlePositionSubmit","handleAddPosition","handleEditPosition","handlePositionEditUpdate","PositionFormEdit","DepartmentTable","onAddDepartment","onEditDepartment","loadDepartmentData","departmentObj","company","onDepartmentDelete","_id","DepartmentForm","onDepartmentSubmit","DepartmentData","onDepartmentEditUpdate","Department","setTable","setEditForm","setEditData","DepartmentFormEdit","handleDepartmentEditUpdate","newInfo","handleAddDepartment","AdminPortalTable","portalData","portalObj","loadPortalData","PortalName","onPortalDelete","onEditPortal","onAddPortal","items","AdminPortalForm","handleChange","onPortalSubmit","Check","inline","onStatusChange","PortalData","onPortalEditUpdate","checked","AdminPortal","addFormStatus","editFormStatus","handlePortalSubmit","handleAddPortal","handleEditPortal","handleAddFormStatusChange","currentTarget","handleEditFormStatusChange","handlePortalEditUpdate","ID","AdminPortalFormEdit","AdminProjectBidTable","projectBidData","loadProjectBidData","ProjectTitle","ProjectURL","EstimatedTime","EstimatedCost","Remark","onProjectBidDelete","renderSortIcon","field","sortData","columnName","newSortDirection","sortedData","valueA","String","valueB","comparison","onEditProjectBid","onAddProjectBid","portals","href","AdminProjectBidForm","portalsInfo","portalsData","loadPortalsInfo","onProjectBidSubmit","rows","AdminProjectBidFormEdit","ProjectTitleData","ProjectURLData","ProjectDescriptionData","EstimatedTimeData","RemarkData","onProjectTitleDataChange","onProjectURLDataChange","onProjectDescriptionDataChange","onPortalsDataChange","PortalsData","onEstimatedTimeDataChange","onEstimatedCostDataChange","EstimatedCostData","onResourceDataChange","ResourceData","onStatusDataChange","StatusData","onRemarkDataChange","onProjectBidEditUpdate","AdminProjectBid","handleProjectBidSubmit","ProjectDesc","Portal_ID","ResourceID","handleAddProjectBid","handleEditProjectBid","handleProjectBidEditUpdate","editInfo","AdminSalaryTable","salaryData","setSalaryData","sortField","setSortField","sortOrder","setSortOrder","searchQuery","setSearchQuery","currentPage","setCurrentPage","itemsPerPage","loadSalaryData","salaryObj","EmployeeName","BasicSalary","BankName","AccountNo","AccountHolderName","IFSCcode","TaxDeduction","handleSort","prevOrder","sortedAndFilteredData","aValue","bValue","indexOfLastItem","indexOfFirstItem","currentItems","pageNumbers","onAddSalary","paddingLeft","LuSearch","RxCaretSort","_item$data","_item$data$profile","_item$data2","_item$data2$profile","onSalaryDelete","onEditSalary","MdNearbyError","handlePaginationPrev","prevPage","GrFormPrevious","number","handlePaginationNext","rotate","SalaryForm","loadEmployeeInfo","onSalarySubmit","padding","SalaryFormEdit","BasicSalaryData","setBasicSalaryData","BankNameData","setBankNameData","AccountNoData","setAccountNoData","ReAccountNoData","setReAccountNoData","AccountHolderNameData","setAccountHolderNameData","IFSCcodeData","setIFSCcodeData","TaxDeductionData","setTaxDeductionData","onSalaryEditUpdate","Salary","handleSalaryEditUpdate","onGenderChange","handleEditFormGenderChange","SalaryTable","handleAddSalary","handleAddFormGenderChange","setFilteredData","_data$employee","_data$employee$","_data$employee2","_data$employee2$","_data$employee3","_data$employee3$","_data$FromDate","_data$ToDate","filterData","exportToPDF","pdfWidth","pdfHeight","doc","jsPDF","orientation","unit","format","setFontSize","row","autoTable","head","startY","save","BsFillFileEarmarkPdfFill","_data$data","_data$data$profile","_data$data2","_data$data2$profile","onEditLeaveApplicationHR","onLeaveApplicationHRDelete","e1","e2","LeaveApplicationHRForm","FromDateData","setFromDateData","ToDateData","setToDateData","ReasonforleaveData","setReasonforleaveData","onLeaveApplicationHREditUpdate","LeaveApplicationHR","LeaveApplicationHRFormEdit","handleLeaveApplicationHREditUpdate","onAddLeaveApplicationHR","handleAddLeaveApplicationHR","activeProfile","setActiveProfile","FaFilePdf","FaFilter","handleToggleIdSort","FcNumericalSorting21","FcNumericalSorting12","onAddEmployee","_items$data","_items$data$profile","_items$data2","_items$data2$profile","onEmpInfo","FaLocationArrow","onEditEmployee","TbUserEdit","textDecoration","MdOutlineEmail","LiaPhoneSolid","NotFound404","TaskAssign","endDateError","setEndDateError","managerData","setManagerData","email","taskId","uuidv4","newTask","setNewTask","Taskname","description","startDate","managerEmail","comment","fetchTasks","controlId","selectedEndDate","onBlur","ManagerDataHandler","mana","multiple","files","formData","FormData","append","taskNotificationData","taskName","senderMail","emit","trim","test","AdminTaskStatus","isCanceling","setIsCanceling","showUpdateModal","setShowUpdateModal","allImage","setAllImage","updatedTask","setUpdatedTask","duration","getPdf","result","fetchData","clearTimeout","handleCloseUpdateModal","totalActiveTask","scrollbarGutter","scrollMargin","toLocaleDateString","cancellationRemarks","prompt","cancelTask","MdCancel","taskToUpdate","find","updateTask","MdEdit","require","pdf","showPdf","BsFiletypeDoc","CompleteMassage","completeTask","FaCheck","Modal","fullscreen","onHide","Header","closeButton","Title","Body","AdminCancleTask","fetchDataWithTimeout","canceledTaskCount","role","textShadow","AdminCompleteTask","RejectedTask","AdminAssignedTask","isCompleting","setIsCompleting","totalAssignedTasks","setTotalAssignedTasks","assignedTasksCount","toast","success","SelfAttendance","employees","setEmployees","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","getMonth","isButtonClicked","setIsButtonClicked","hoveredDate","setHoveredDate","isInfoHovering","setIsInfoHovering","empMail","employeeId","handleInfoMouseEnter","handleInfoMouseLeave","singleUser","Authorization","employeeObjID","handleFetchAttendance","getMonthName","monthNumber","getYears","years","currentYear","year","millisecondsToTime","milliseconds","millisecond","seconds","formattedHours","padStart","formattedMinutes","formattedSeconds","formattedMillisecond","date","htmlFor","parseInt","from","_","month","months","dates","handleMouseEnter","logoutTime","scale","breakTime","totalBrake","FaCircleInfo","ResumeTime","BreakData","totalLogAfterBreak","flexDirection","gap","TfiReload","memo","SetLog","empName","setEmpName","selectedEmployee","setSelectedEmployee","attencenceID","setAttencenceID","setMessage","admin","loadPersonalInfoData","attendanceObjID","currentTime","Moment","getDate","currentTimeMs","round","getTime","breakTimeMs","resumeTimeMS","AttendanceDetails","setEmployeeId","fetchEmployees","setTimeout","MdOutlineRefresh","Container","LeaveCalendar","setDate","setHolidayName","setHolidayType","holidays","setHolidays","Calendar","tileContent","view","formattedDate","formattedDateString","toISOString","formatDate","newHoliday","responseData","prevHolidays","CountryTable","countryData","columnDefs","headerName","sortable","cellRendererFramework","bind","defaultColDef","resizable","countryObj","loadCountryData","CountryName","onCountryDelete","onEditCountry","onAddCountry","CountryForm","onCountrySubmit","CountryData","onCountryEditUpdate","Country","handleCountrySubmit","handleAddCountry","handleEditCountry","handleCountryEditUpdate","CountryFormEdit","StateTable","stateData","setStateData","loadStateData","stateObj","StateName","onAddState","country","StateForm","countryInfo","loadCountryInfo","onStateSubmit","StateData","onStateEditUpdate","State","handleStateSubmit","CountryID","handleAddState","handleEditState","handleStateEditUpdate","StateFormEdit","onEditState","CityTable","cityData","cityObj","loadCityData","CityName","onCityDelete","onEditCity","onAddCity","CityForm","filteredStateData","filteredCountryData","loadStateInfo","CityData","onCountryChange","currentCountry","filteredState","onCitySubmit","onSelectCountry","onCityEditUpdate","City","CityFormEdit","handleCityEditUpdate","StateID","handleAddCity","AdminCompanyTable","setCompanyData","loadCompanyData","onAddCompany","Address","city","PostalCode","Website","ContactPerson","FaxNo","PanNo","GSTNo","CINNo","onEditCompany","onCompanyDelete","CompanyForm","filteredCityData","loadCityInfo","onStateChange","currentState","filteredCity","onCompanySubmit","plassholder","CompanyFormEdit","CompanyNameData","AddressData","PostalCodeData","WebsiteData","EmailData","ContactPersonData","ContactNoData","FaxNoData","PanNoData","GSTNoData","CINNoData","onCompanyNameDataChange","onAddressDataChange","onPostalCodeDataChange","onWebsiteDataChange","onEmailDataChange","onContactPersonDataChange","onContactNoDataChange","onFaxNoDataChange","onPanNoDataChange","onGSTNoDataChange","onCINNoDataChange","onCompanyEditUpdate","Company","handleCompanySubmit","CityID","handleAddCompany","handleEditCompany","handleCompanyEditUpdate","CompanyTable","InnerDashContainer","LeaveApplicationEmpTable","leaveApplicationEmpData","setLeaveApplicationEmpData","loadLeaveApplicationEmpData","leaveApplicationEmpObj","newRowsData","leaveApplication","onAddLeaveApplicationEmp","LeaveApplicationEmpForm","empData","setEmpData","LeaveImg","onLeaveApplicationEmpSubmit","reportManager","reportHr","onLeaveApplicationEmpEditUpdate","onFromDateDataChange","onToDateDataChange","onReasonforleaveDataChange","LeaveApplicationEmp","leaveRequestDone","setLeaveRequestDone","LeaveApplicationEmpFormEdit","handleLeaveApplicationEmpEditUpdate","hrEmail","handleAddLeaveApplicationEmp","onEditLeaveApplicationEmp","uuid","Notification","selectAll","setSelectAll","selectedNotification","setSelectedNotification","notification","setNotification","toggleSelectAll","scope","isChecked","some","noti","prevNotification","addSelectedNotification","ImBin","notificationDeleteHandler","multiNotificationDeleteHandler","taskIDArray","employeeMail","NoticeManagement","AdminRoutes","Switch","Route","exact","component","AdminDasd","AdminAsignTask","AdminAttendance","AdminViewAttendance","LeaveApplication","LeaveApplicationHRAccept","LeaveApplicationHRReject","NavBar","history","useHistory","location","useLocation","pathname","notiToggle","setNotiToggle","pushNotification","addNotification","subtitle","Logo","native","requestPermission","permission","employeesEmail","adminMail","data1","employeeEmail","uniqueNotification","arr","Navbar","Brand","LuBell","notificationHandler","IoMdClose","stopPropagation","clearAllHandler","loginInfo","onLogout","faSignOutAlt","DashContainer","minWidth","DashboardAdmin","setChecked","Router","document","getElementById","setAttribute","EmployeeForm","setRoleData","setPositionData","filterManagerData","setFilterManagerData","filterHrData","setFilterHrData","loadRoleInfo","loadPositionInfo","loadDepartmentInfo","TbUsersPlus","onEmployeeSubmit","encType","hrData","managerFilterHandler","EmployeeFormEdit","genderData","setGenderData","emailData","setEmailData","firstNameData","setFirstNameData","lastNameData","setLastNameData","dobData","setDobData","contactNoData","setContactNoData","setProfile","employeeCodeData","setEmployeeCodeData","dateOfJoiningData","setDateOfJoiningData","onEmployeeEditUpdate","EmployeeInfo","EducationTable","educationData","setEducationData","educationObj","education","SchoolUniversity","Degree","Grade","PassingOfYear","onAddEducation","onEditEducation","FaRegEdit","EducationForm","onEducationSubmit","SchoolUniversityData","DegreeData","GradeData","PassingOfYearData","onEducationEditUpdate","onSchoolUniversityDataChange","onDegreeDataChange","onGradeDataChange","onPassingOfYearDataChange","Education","EducationFormEdit","handleEducationEditUpdate","handleAddEducation","back","WorkExperienceTable","workExperienceData","setWorkExperienceData","workExperienceObj","loadWorkExperienceData","workExperience","Designation","onAddWorkExperience","WorkExperienceForm","onWorkExperienceSubmit","DesignationData","onDesignationDataChange","onWorkExperienceEditUpdate","WorkExperience","WorkExperienceFormEdit","handleWorkExperienceEditUpdate","handleAddWorkExperience","onEditWorkExperience","FamilyInfoTable","familyInfoData","setFamilyInfoData","familyInfoObj","loadFamilyInfoData","tempRowData","familyInfo","Relationship","Occupation","onAddFamilyInfo","FamilyInfoForm","onFamilyInfoSubmit","FamilyInfoFormEdit","nameData","setNameData","relationshipData","setRelationshipData","setDOBData","occupationData","setOccupationData","onFamilyInfoEditUpdate","onNameDataChange","onRelationshipDataChange","onDOBDataChange","onOccupationDataChange","FamilyInfo","handleFamilyInfoEditUpdate","handleAddFamilyInfo","onEditFamilyInfo","PersonalInfoTable","personalInfoData","setPersonalInfoData","activeSection","setActiveSection","showDownloadbtn","setShowDownloadbtn","visibleDocs","setVisibleDocs","Gender","PANcardNo","BloodGroup","EmergencyContactNo","Hobbies","PresentAddress","PermanetAddress","onToggleSection","section","documentDATA","docTitle","docURL","docNumber","docSize","FloralAbstract","backgroundPosition","backgroundSize","marginTop","IoArrowBackCircle","FaCamera","GoDotFill","onEditPersonalInfo","reverse","IoEye","download","IoMdDownload","endsWith","FaRegFilePdf","FaFileImage","FaRegFileImage","FaFileAudio","PersonalInfoFormEdit","GenderData","FirstNameData","MiddleNameData","LastNameData","DOBData","EmergencyContactNoData","PANcardNoData","HobbiesData","PresentAddressData","PermanetAddressData","presonalEmail","personalinfoimage","onPersonalInfoEditUpdate","onEmergencyContactNoDataChange","onPANcardNoDataChange","onHobbiesDataChange","onPresentAddressDataChange","onPermanentAddressDataChange","PersonalInfo","editFormGender","setEditFormGender","handleEditPersonalInfo","handlePersonalInfoEditUpdate","onAddPersonalInfo","Employee","addFormGender","setAddFormGender","empInfo","setEmpInfo","empInfoBool","setEmpInfoBool","handleEmpInfo","handleBack","handleEmployeeSubmit","handleAddEmployee","handleEditEmployee","handleEmployeeEditUpdate","onBack","EmployeeTable","Rejected","Canceled","Active","Pending","Overdue","HRDash","newFolderLink","holidayIcons","convertMinutesToHoursAndMinutes","toUpperCase","HiOutlineLogin","HiOutlineLogout","RxCounterClockwiseClock","FaUserClock","day","IoMdInformationCircleOutline","LogData","AttendanceNotAvailable","ManagerNewTask","setIsAccepted","setIsRejected","RejectTask","RejectRemarks","taskID","AcceptTaskRemark","taskStatus","AcceptTask","IoCheckmarkDoneSharp","ManagerCencelledTask","ManagerCompletedTask","ManagerRejectedTask","ManagerActiveTask","modalShow","setModalShow","getEmployee","setGetEmployee","selectedEmployees","setSelectedEmployees","inputEmail","setInputEmail","originalEmployeeData","setOriginalEmployeeData","selectedTaskId","setSelectedTaskId","isForwardButtonDisabled","setIsForwardButtonDisabled","rowIndex","setRowIndex","moreInfo","setMoreInfo","taskDepartment","setTaskDepartment","employeeObj","calculateProgress","totalEmployees","emp","emptaskStatus","CircularProgressbar","toFixed","styles","buildStyles","pathColor","textColor","striped","bordered","hover","taskemp","empname","empemail","empdesignation","empTaskComment","dep","forwordTaskToEmployee","askStatus","CompleteRemarks","handleInputChange","searchValue","filteredEmployees","designation","handleSearch","class","prevEmployees","addSelectedEmployee","removeSelectedEmployee","MdDeleteForever","forwardTaskToEmployees","Attendance","hr","loginTimeMs","logoutTimeMs","URcurrentTimeMs","TodaysAttendance","yyyy","mm","dd","dayCurrent","getDay","isNaN","exportToExcel","dataToExport","Mark","worksheet","XLSX","json_to_sheet","sheet_add_aoa","origin","workbook","book_new","book_append_sheet","SiMicrosoftexcel","HiStatusOnline","IoCheckmarkDoneOutline","mark","AiOutlineMore","userId","colSpan","ManualAttendance","fetchUsers","getMessage","employeeID","lastEntry","handleUserChange","toLocaleTimeString","AttendanceRegister","currentDate","currentMonth","filterMonth","setFilterMonth","filterYear","setFilterYear","setAttendance","daysInMonth","markAttendance","uniqueYears","Set","flatMap","uniqueMonths","getUserStatusColor","calculateTotal","_employee$years$yearI","_employee$years$yearI2","_employee$years$yearI3","yearIndex","monthIndex","toString","_employee$years$yearI4","_employee$years$yearI5","_employee$years$yearI6","indexOf","loginTimeForDay","MainContent","Dashboard","ViewAttendance","SidebarContext","SidebarProvider","isOpen","setIsOpen","Provider","toggleSidebar","useSidebar","DashboardHR","navigation","_ref2","EmployeeNewTask","isHovered","setIsHovered","setEmail","totalTaskAssigned","empEmail","empRemarks","employeeNotificationArr","employeeTaskNotification","acceptTask","rejectTask","textOverflow","EmployeeActiveTask","isAccepted","isRejected","EmployeeRejectTask","EmpTaskChart","acceptedTasksCount","rejectedTasksCount","completedTasksCount","pendingTasksCount","acceptedTasksNotCompletedOnTimeCount","completedTasksOnTimeCount","lateCompletedAcceptedTasksCount","barChartData","dataLabels","enabled","bar","columnWidth","EmpDash","totalEmployeeLeave","setTotalEmployeeLeave","monthlyTotals","calculateMonthlyTotals","_attendanceData$years","monthlyData","yearData","totalWorkingHours","totalPresent","totalAbsent","totalHalfDays","RouterContent","AttendanceList","EmployeeCompleteTask","DashboardEmployee","Navigation","faUser","faUniversity","faMale","faBriefcase","leaveStatus","newTasks","Ontime","ManagerDash","EmplolyeeCount","TodatAttendance","setTaskName","ForgetPass","stage","setStage","setData","otp","confirm_pass","formError","setFormError","password","confirmPassword","passMatch","setPassMatch","countDown","setCountDown","timer","setInterval","clearInterval","SendOtp","secounds","getSeconds","time","logo","setItem","verfyEmail","removeItem","App","userData","setUserData","setPass","isLogin","setIsLogin","firstTimeAlert","setFirstTimeAlert","account","related","handleLogin","handleSubmit","login","reset","handleLogout","handleLogou","clear","bodyLogin","decodedData","jwt","decode","Redirect","ManagerDashboard","Boolean","hostname","match","AttendanceContextProvider","useMemo","io","emailInput","setEmailInput","ReactDOM","createRoot","StrictMode","Toaster","reverseOrder","gutter","containerClassName","containerStyle","toastOptions","theme","primary","secondary","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acb1edbc.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","export default __webpack_public_path__ + \"static/media/LOGINBACK.f8757d26.svg\";","import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport LoginIMG from \"../../img/LOGINBACK.svg\";\nimport { RxEyeOpen } from \"react-icons/rx\";\nimport { GoEyeClosed } from \"react-icons/go\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [alertMsg] = useState(\"\");\n  const [seePass, setSeepass] = useState(false);\n  const [setPassword] = useState(\"\");\n\n  return (\n    <div\n      style={{ height: \"100vh\", width: \"100%\", overflow: \"auto\" }}\n      className=\"  m-0 p-0 bg-light\"\n    >\n      <div\n        style={{ height: \"100%\", width: \"100%\" }}\n        className=\"row mx-auto bg-white\"\n      >\n        <div\n          style={{ height: \"100%\" }}\n          className=\"col-12 col-md-6 position-relative  px-0 p-md-5 d-flex bg-white flex-column justify-content-center aline-center\"\n        >\n          <form\n            style={{ height: \"100%\" }}\n            onSubmit={props.onSubmit}\n            className=\"form  my-auto  w-75  p-0 p-md-3 pb-4 rounded text-black fw-bold d-flex flex-column justify-content-center\"\n          >\n            <h2\n              style={{\n                color: \"var(--primaryDashColorDark)\"\n              }}\n              className=\"fw-bolder mb-4 text-center text-md-start gap-2\"\n            >\n              <FaUserCircle /> Log in\n            </h2>\n            <div className=\"d-flex flex-column my-3\">\n              <label for=\"email\" className=\"ps-2 fw-normal\">\n                Enter uour email address{\" \"}\n              </label>\n              <input\n                name=\"email\"\n                placeholder=\"abcd@xyz.com\"\n                className=\"form-control rounded-5 bg-white border-3 border-muted\"\n                type=\"email\"\n              />\n            </div>\n\n            <div className=\"d-flex position-relative flex-column my-3 mb-4 mb-md-3\">\n              <label for=\"password\" className=\"ps-2  fw-normal\">\n                Enter your password\n              </label>\n              <div className=\"position-relative\">\n                <input\n                  name=\"password\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"**********\"\n                  className=\"form-control rounded-5 bg-white border-3 border-muted\"\n                  type={!seePass ? \"password\" : \"text\"}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: \"5%\",\n                    right: \"3%\",\n                    outline: \"none\",\n                    border: \"none\"\n                  }}\n                  className=\"fs-5 text-muted my-0\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setSeepass(seePass ? false : true);\n                  }}\n                >\n                  {!seePass ? <RxEyeOpen /> : <GoEyeClosed />}\n                </span>\n              </div>\n              {!props.pass ? (\n                <p\n                  style={{\n                    position: \"absolute\",\n                    fontWeight: \"normal\",\n                    bottom: \"-80%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%)\",\n                    whiteSpace: \"pre\"\n                  }}\n                  className=\"alert   text-danger\"\n                >\n                  Invalid User Name or Password\n                </p>\n              ) : (\n                \"\"\n              )}\n            </div>\n\n            <p\n              style={{\n                display: alertMsg ? \"block\" : \"none\",\n                fontWeight: \"normal\"\n              }}\n              className=\"text-danger text-center\"\n            >\n              {alertMsg}\n            </p>\n\n            <div className=\"row mx-auto w-100 justify-content-between my-3 row-gap-4\">\n              <input\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n                type=\"submit\"\n                className=\"btn col-12 col-md-5  shadow rounded-5 fw-bolder shadow-sm\"\n                value=\" Login\"\n              />\n              <Link\n                to=\"/forgetPassword\"\n                className=\"fw-semibold btn  col-12 col-md-5 shadow rounded-5 mt-0\"\n              >\n                Forgot password\n              </Link>\n            </div>\n\n            <p\n              style={{\n                position: \"absolute\",\n                bottom: \"0\",\n                left: \"50%\",\n                transform: \"translate(-50%)\",\n                fontWeight: \"normal\",\n                whiteSpace: \"pre\"\n              }}\n              className=\"d-blocktext-center text-muted\"\n            >\n              Made with <span className=\"heart beat\">❤️</span> by Medlay International Pvt. Ltd. \n      \n            </p>\n          </form>\n        </div>\n        <div\n          style={{\n            height: \"100%\",\n            backgroundColor: \"var(--primaryDashColorDark)\"\n          }}\n          className=\"col-12 col-md-6 p-5 d-flex flex-column justify-content-center gap-4 \"\n        >\n          <div className=\"pt-5\">\n            <h5\n              style={{ wordSpacing: \"5px\" }}\n              className=\"text-white text-center\"\n            >\n              👋 Nice to se you again\n            </h5>\n            <h1\n              style={{ letterSpacing: \"5px\" }}\n              className=\"fw-bolder text-white text-center\"\n            >\n              Welcome Back\n            </h1>\n          </div>\n          <img\n            style={{ width: \"80%\", margin: \"0 auto\" }}\n            src={LoginIMG}\n            alt=\"\"\n          />\n          <p className=\"text-center pt-5 text-white\">www.medlayinternational.com</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { BsBuildingsFill } from \"react-icons/bs\";\nimport { FaAddressBook } from \"react-icons/fa\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { FaCalendarCheck } from \"react-icons/fa6\";\nimport { MdDashboard, MdMenuOpen, MdTaskAlt } from \"react-icons/md\";\nimport { TbDeviceIpadMinus } from \"react-icons/tb\";\nimport { MdHolidayVillage } from \"react-icons/md\";\nimport { AiOutlineFundProjectionScreen } from \"react-icons/ai\";\nimport { FcLeave } from \"react-icons/fc\";\nimport { TfiBlackboard } from \"react-icons/tfi\";\n\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Link } from \"react-router-dom\";\nimport { FaUserTie } from \"react-icons/fa\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = () => {\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [extended, setExtended] = useState(true);\n\n  const allLinks = [\n    {\n      icon: <MdDashboard />,\n      name: \"Dashboard\",\n      navLinks: [{ to: \"/admin/dashboard\", label: \"Dashboard\" }]\n    },\n    {\n      icon: <FaUserTie />,\n      name: \"Employee\",\n      navLinks: [\n        { to: \"/admin/user\", label: \"Employee List\" },\n        { to: \"/admin/salary\", label: \"Salary\" }\n      ]\n    },\n    {\n      icon: <FaCalendarCheck />,\n      name: \"Attendance\",\n      navLinks: [\n        { to: \"/admin/adminAttendance\", label: \"Create Attendance\" },\n        { to: \"/admin/adminviewAttenDance\", label: \"View Attendance\" }\n      ]\n    },\n    {\n      icon: <FcLeave />,\n      name: \"Leave\",\n      navLinks: [\n        { to: \"/admin/applyLeave\", label: \"Apply Leave\" },\n        { to: \"/admin/pendingLeave\", label: \"Pending \" },\n        { to: \"/admin/leaveAccepted\", label: \"Accepted \" },\n        { to: \"/admin/leaveRejected\", label: \"Rejected \" }\n      ]\n    },\n    {\n      icon: <MdTaskAlt />,\n      name: \"Task\",\n      navLinks: [\n        { to: \"/admin/task\", label: \"Create New Task\" },\n        { to: \"/admin/taskassign\", label: \"Assigned\" },\n        { to: \"/admin/taskstatus\", label: \"Active Taask\" },\n        { to: \"/admin/taskcancle\", label: \"Cancelled Task\" },\n        { to: \"/admin/taskcomplete\", label: \"Completed Task\" },\n        { to: \"/admin/taskreject\", label: \"Rejected Task\" }\n      ]\n    },\n    {\n      icon: <TbDeviceIpadMinus />,\n      name: \"Access\",\n      navLinks: [\n        { to: \"/admin/role\", label: \"Role\" },\n        { to: \"/admin/position\", label: \"Position\" },\n        { to: \"/admin/department\", label: \"Department\" }\n      ]\n    },\n    {\n      icon: <BsBuildingsFill />,\n      name: \"Company\",\n      navLinks: [\n        { to: \"/admin/company\", label: \"Company List\" }\n        // { to: \"/hr/employee\", label: \"Create Employee\" },\n      ]\n    },\n    {\n      icon: <FaAddressBook />,\n      name: \"Address\",\n      navLinks: [\n        { to: \"/admin/country\", label: \"Country\" },\n        { to: \"/admin/state\", label: \"State\" },\n        { to: \"/admin/city\", label: \"City\" }\n      ]\n    },\n    {\n      icon: <TfiBlackboard />,\n      name: \"Noice\",\n      navLinks: [{ to: \"/admin/notice\", label: \"Create Notic\" }]\n    },\n    {\n      icon: <MdHolidayVillage />,\n      name: \"Holiday\",\n      navLinks: [{ to: \"/admin/leaveCal\", label: \"Leave Calendar\" }]\n    },\n    {\n      icon: <AiOutlineFundProjectionScreen />,\n      name: \"Project\",\n      navLinks: [\n        { to: \"/admin/project-bid\", label: \"Project Bidding\" },\n        { to: \"/admin/portal-master\", label: \"Portal Master\" }\n      ]\n    }\n  ];\n\n  const ExtendClick = () => {\n    setExtended(extended ? false : true);\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        maxHeight: \"100%\",\n        overflowY: \"auto\",\n        overflow: \"inherit\",\n        width: \"fit-content\",\n        background: \"#1D267D\"\n      }}\n      className=\"d-flex  flex-column gap-2 p-3\"\n    >\n      <h3\n        style={{ borderBottom: \"3px solid green\" }}\n        className=\"fw-bolder  text-success justify-content-between py-2 d-flex gap-2\"\n      >\n        <p\n          style={{ display: !extended ? \"none\" : \"block\" }}\n          className=\"my-auto\"\n        >\n          ADMIN\n        </p>{\" \"}\n        <span\n          onClick={ExtendClick}\n          style={{\n            border: \"none\",\n            outline: \"none\",\n            cursor: \"pointer\",\n            transform: `rotate(${!extended ? \"180deg\" : \"0deg\"})`\n          }}\n          className=\"my-auto p-0 fs-2 text-white\"\n        >\n          <MdMenuOpen />\n        </span>\n      </h3>\n\n      {allLinks.map(({ icon, name, navLinks }) => (\n        <div\n          key={name}\n          onMouseEnter={() => setActiveCategory(name)}\n          onMouseLeave={() => setActiveCategory(null)}\n          className=\"position-relative\"\n        >\n          <button\n            style={buttonStyle}\n            className=\"btn p-0 text-white text-start fw-bold gap-2 justify-between w-100 d-flex justify-content-between\"\n          >\n            <div\n              style={{ width: \"fit-content\" }}\n              className=\"d-flex gap-2 my-auto\"\n            >\n              <p\n                style={{\n                  height: \"30px\",\n                  width: \"30px\",\n                  alignItems: \"center\",\n                  color: activeCategory === name ? \"#FF9209\" : \"white\"\n                }}\n                className=\"m-auto d-flex rounded-5  justify-content-center fs-3\"\n              >\n                {icon}\n              </p>\n              <p\n                style={{ display: !extended ? \"none\" : \"block\" }}\n                className=\"my-auto\"\n              >\n                {name}\n              </p>\n            </div>\n            <span\n              style={{\n                transform: `rotate(${\n                  activeCategory === name ? \"135deg\" : \"0deg\"\n                })`,\n                transition: \"1s ease\",\n                display: !extended ? \"none\" : \"block\"\n              }}\n              className=\"my-auto fs-4\"\n            >\n              +\n            </span>\n          </button>\n\n          <div\n            style={{\n              ...dropdownStyle,\n              display: activeCategory === name ? \"flex\" : \"none\",\n              background:\n                \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\",\n              width: \"fit-content\"\n            }}\n            className=\"flex-column position-absolute top-0 start-100 py-2 px-2 gap-2 mt-2  \"\n          >\n            {navLinks.map((link) => (\n              <Link className=\"text-decoration-none\" key={link.to} to={link.to}>\n                <div className=\"text-decoration-none flex-nowrap text-start fw-bolder gap-3 text-white d-flex justify-content-between \">\n                  <div\n                    style={{ borderBottom: \"1px solid white\" }}\n                    className=\"d-flex gap-1 flex-nowrap\"\n                  >\n                    <p className=\"m-0\">{link.icon}</p>\n                    <p style={{ whiteSpace: \"pre\" }} className=\"m-auto\">\n                      {link.label}\n                    </p>\n                  </div>\n                  <span style={{}} className=\"my-auto \">\n                    ›\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst buttonStyle = {\n  outline: \"none\",\n  border: \"none\",\n  height: \"3rem\"\n};\n\nconst dropdownStyle = {\n  width: \"250px\",\n  zIndex: \"5\",\n  borderLeft: \"5px solid white\"\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/HappyBirthday.181e9653.svg\";","// config.js\r\n// const BASE_URL = `http://localhost:4000`;\r\nconst BASE_URL = `https://medlaycrm.onrender.com`;\r\n// const BASE_URL = `https://kaspecrm.onrender.com`;\r\nexport default BASE_URL;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { GiPartyPopper } from \"react-icons/gi\";\r\nimport HappyBirthday from \"./HappyBirthday.svg\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst UpcomingBirthdays = () => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : \"\",\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  return (\r\n    <div className=\"div\">\r\n      <div className=\"birthday shadow position-relative\">\r\n        <h5\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center\"\r\n        >\r\n          <GiPartyPopper /> Upcoming Birthdays{\" \"}\r\n          <span className=\"text-primary\">({upcomingBirthdays.length})</span>\r\n        </h5>\r\n        <div>\r\n          {upcomingBirthdays.length > 0 ? (\r\n            <div className=\"d-flex flex-column gap-3 py-3 px-3\">\r\n              {upcomingBirthdays.map((employee) => (\r\n                <div\r\n                  style={{ borderBottom: \"1px solid #E3F4F4\" }}\r\n                  className=\"\"\r\n                  key={employee.empID}\r\n                >\r\n                  <div className=\"row\" style={{ verticalAlign: \"middle\" }}>\r\n                    <div className=\"d-flex justify-content-between \">\r\n                      <div className=\"d-flex gap-2\">\r\n                        <div style={{ height: \"45px\", width: \"45px\" }}>\r\n                          <img\r\n                            style={{\r\n                              height: \"100%\",\r\n                              width: \"100%\",\r\n                              border: \"3px solid gray\",\r\n                              borderRadius: \"50%\",\r\n                              overflow: \"hidden\",\r\n                              objectFit: \"cover\"\r\n                            }}\r\n                            src={\r\n                              employee?.data?.profile?.image_url\r\n                                ? employee?.data?.profile?.image_url\r\n                                : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\r\n                            }\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex flex-column my-auto\">\r\n                          <span\r\n                            style={{ fontSize: \"12px\", fontWeight: \"bold\" }}\r\n                          >\r\n                            {employee.empID}\r\n                          </span>\r\n                          <span\r\n                            style={{ fontSize: \"13px\", fontWeight: \"bold\" }}\r\n                            className=\"text-uppercase fw-bold\"\r\n                          >{`${employee.FirstName} ${employee.LastName}`}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        style={{ fontSize: \"13px\" }}\r\n                        className=\"my-auto fw-bolder text-muted\"\r\n                      >\r\n                        Date <br />\r\n                        {employee.DOB}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center aline-items-center gap-3\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ height: \"60%\", width: \"60%\" }}\r\n                className=\"mx-auto\"\r\n                src={HappyBirthday}\r\n                alt=\"Happy Birthday\"\r\n              />\r\n              <p\r\n                style={{ opacity: \"60%\", fontSize: \"13px\" }}\r\n                className=\"text-center w-75 mx-auto  fw-bold text-muted \"\r\n              >\r\n                No upcoming birthdays in the next 7 days.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcomingBirthdays;\r\n","// EmployeeChart.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport { FaChartLine } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst TaskChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadTaskData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n    loadTaskData();\r\n  }, []);\r\n\r\n  const calculateRemainingTime = (endDate) => {\r\n    const now = new Date();\r\n    const endDateTime = new Date(endDate);\r\n    let remainingTime = endDateTime - now;\r\n\r\n    if (remainingTime < 0) {\r\n      // If remaining time is negative, consider it as delay\r\n      remainingTime = Math.abs(remainingTime);\r\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\r\n    } else {\r\n      // Calculate remaining days, hours, minutes, and seconds\r\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\r\n      );\r\n      return { delay: false, days, hours, minutes };\r\n    }\r\n  };\r\n\r\n  const countLateAndOnTimeTasks = () => {\r\n    const lateTasksCount = tasks.filter(\r\n      (task) =>\r\n        task.status === \"Pending\" && calculateRemainingTime(task.endDate).delay\r\n    ).length;\r\n\r\n    const onTimeTasksCount = tasks.filter(\r\n      (task) =>\r\n        task.status === \"Pending\" && !calculateRemainingTime(task.endDate).delay\r\n    ).length;\r\n\r\n    return { lateTasksCount, onTimeTasksCount };\r\n  };\r\n\r\n  const departmentCounts = {};\r\n  departmentData.forEach((department) => {\r\n    departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n  });\r\n\r\n  const taskStatusCounts = {\r\n    Total: tasks.length,\r\n    Assigned: tasks.filter((tasks) => tasks.status === \"Assigned\").length,\r\n    ActiveTask: tasks.filter((task) => task.status === \"Assigned\").length,\r\n    canceled: tasks.filter((task) => task.status === \"Cancelled\").length,\r\n    Completed: tasks.filter((task) => task.status === \"Completed\").length,\r\n    overdue: tasks.filter(\r\n      (task) =>\r\n        task.status === \"Assigned\" && calculateRemainingTime(task.endDate).delay\r\n    ).length,\r\n\r\n    onTime: tasks.filter(\r\n      (task) =>\r\n        task.status === \"Assigned\" &&\r\n        !calculateRemainingTime(task.endDate).delay\r\n    ).length\r\n\r\n    // Rejected: tasks.filter((task) => task.status === \"Rejected\").length,\r\n    // Active: tasks.filter((task) => task.status === \"Pending\").length,\r\n    // Overdue: tasks.filter(\r\n    //   (task) =>\r\n    //     task.status === \"Pending\" && calculateRemainingTime(task.endDate).delay\r\n    // ).length,\r\n    // Ontime: tasks.filter(\r\n    //   (task) =>\r\n    //     task.status === \"Pending\" && !calculateRemainingTime(task.endDate).delay\r\n    // ).length\r\n  };\r\n\r\n  const chartData = {\r\n    series: [\r\n      {\r\n        name: \"Total Employee\",\r\n        data: Object.values(departmentCounts)\r\n      }\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"40%\",\r\n          endingShape: \"rounded\"\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(departmentCounts),\r\n        title: {\r\n          text: \"Department Wise Employee\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Employee\"\r\n        }\r\n      },\r\n\r\n      fill: {\r\n        opacity: 1,\r\n        colors: [\"rgb(100, 150, 200)\"] // Change bar colors\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \" \" + val + \"\";\r\n          }\r\n        },\r\n        markers: {\r\n          colors: \"yellow\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const taskStatusChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"task-status-chart\",\r\n        type: \"bar\"\r\n      },\r\n      fill: {\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(taskStatusCounts),\r\n        title: {\r\n          text: \"Task Status\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Tasks\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Task Status\",\r\n        data: Object.values(taskStatusCounts)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={taskStatusChartData.options}\r\n          series={taskStatusChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst DepartmentChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [chartOption, setChartOption] = useState({\r\n    options: {\r\n      labels: [],\r\n      legend: {\r\n        position: \"bottom\"\r\n      },\r\n      fill: {\r\n        colors: [\r\n          \"#008DDA\",\r\n          \"#4CCD99\",\r\n          \"#FFC700\",\r\n          \"#FF407D\",\r\n          \"#9F70FD\",\r\n          \"#FE7A36\"\r\n        ]\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    series: []\r\n  });\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const updateChartOptions = () => {\r\n    const departmentCounts = {};\r\n    departmentData.forEach((department) => {\r\n      departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n    });\r\n\r\n    const labels = Object.keys(departmentCounts);\r\n    const series = labels.map((label) => departmentCounts[label]);\r\n\r\n    setChartOption({\r\n      options: {\r\n        labels: labels,\r\n        fill: {\r\n          colors: [\r\n            \"#008DDA\",\r\n            \"#4CCD99\",\r\n            \"#FFC700\",\r\n            \"#FF407D\",\r\n            \"#9F70FD\",\r\n            \"#FE7A36\"\r\n          ]\r\n        },\r\n        legend: {\r\n          position: \"bottom\",\r\n          labels: {\r\n            colors: [\r\n              \"#008DDA\",\r\n              \"#4CCD99\",\r\n              \"#FFC700\",\r\n              \"#FF407D\",\r\n              \"#9F70FD\",\r\n              \"#FE7A36\"\r\n            ]\r\n          }\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                colors: [\r\n                  \"#008DDA\",\r\n                  \"#4CCD99\",\r\n                  \"#FFC700\",\r\n                  \"#FF407D\",\r\n                  \"#9F70FD\",\r\n                  \"#FE7A36\"\r\n                ],\r\n                show: true,\r\n                total: {\r\n                  show: true,\r\n                  colors: [\r\n                    \"#008DDA\",\r\n                    \"#4CCD99\",\r\n                    \"#FFC700\",\r\n                    \"#FF407D\",\r\n                    \"#9F70FD\",\r\n                    \"#FE7A36\"\r\n                  ]\r\n                }\r\n              },\r\n              colors: [\r\n                \"#008DDA\",\r\n                \"#4CCD99\",\r\n                \"#FFC700\",\r\n                \"#FF407D\",\r\n                \"#9F70FD\",\r\n                \"#FE7A36\"\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: series\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChartOptions();\r\n  }, [departmentData]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2\">\r\n        <div className=\"ChartHeader\">\r\n          <h6\r\n            style={{\r\n              width: \"fit-content\",\r\n              boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n              color: \"var(--primaryDashColorDark)\"\r\n            }}\r\n            className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n          >\r\n            Employee By Department\r\n          </h6>\r\n        </div>\r\n        <Chart\r\n          options={chartOption.options}\r\n          series={chartOption.series}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n          height=\"380\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GiIndianPalace, GiPartyPopper } from \"react-icons/gi\"; // Importing necessary icons\r\nimport { PiBankBold } from \"react-icons/pi\";\r\nimport { MdCreateNewFolder } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nfunction HolidayList() {\r\n  const [holidaysData, setHolidaysData] = useState([]);\r\n  const [filteredHolidays, setFilteredHolidays] = useState([]);\r\n  const [isListVisible, setListVisibility] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const toggleListVisibility = () => {\r\n    setListVisibility(!isListVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchHolidays = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/api/holidays`);\r\n\r\n        if (response.status === 200) {\r\n          const data = response.data;\r\n          setHolidaysData(data);\r\n          setFilteredHolidays(data);\r\n        } else {\r\n          console.error(\"Failed to fetch holiday data:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching holiday data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchHolidays();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filterHolidays();\r\n  }, [searchTerm]);\r\n\r\n  const filterHolidays = () => {\r\n    let filtered = [...holidaysData];\r\n\r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      filtered = filtered.filter((holiday) =>\r\n        holiday.holidayName.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    setFilteredHolidays(filtered);\r\n  };\r\n\r\n  const getHolidayIcons = (holidayType) => {\r\n    switch (holidayType) {\r\n      case \"National Holiday\":\r\n        return (\r\n          <span\r\n            style={{\r\n              height: \"40px\",\r\n              width: \"40px\",\r\n              display: \"flex\",\r\n              margin: \"auto\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              fontSize: \"30px\"\r\n            }}\r\n            className=\"rounded-5 bg-danger text-white\"\r\n          >\r\n            <GiIndianPalace />\r\n          </span>\r\n        );\r\n      case \"Restricted Holiday\":\r\n        return (\r\n          <span\r\n            style={{\r\n              height: \"40px\",\r\n              width: \"40px\",\r\n              display: \"flex\",\r\n              margin: \"auto\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              fontSize: \"30px\"\r\n            }}\r\n            className=\"rounded-5 bg-primary text-white\"\r\n          >\r\n            <GiPartyPopper />\r\n          </span>\r\n        );\r\n      case \"Gazetted Holiday\":\r\n        return (\r\n          <span\r\n            style={{\r\n              height: \"40px\",\r\n              width: \"40px\",\r\n              display: \"flex\",\r\n              margin: \"auto\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              fontSize: \"30px\"\r\n            }}\r\n            className=\"rounded-5 bg-warning text-white\"\r\n          >\r\n            <PiBankBold />\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span\r\n            style={{\r\n              height: \"40px\",\r\n              width: \"40px\",\r\n              display: \"flex\",\r\n              margin: \"auto\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              fontSize: \"30px\"\r\n            }}\r\n            className=\"rounded-5 bg-danger text-white\"\r\n          >\r\n            <GiIndianPalace />\r\n          </span>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{ overflow: \"hidden\" }}\r\n        className=\"shadow bg-white p-0 rounded-4 \"\r\n      >\r\n        <h5\r\n          style={{\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center align-items-center\"\r\n        >\r\n          Holiday List{\" \"}\r\n          <Link to=\"/hr/holiday\">\r\n            <span className=\"fs-4 d-flex\">\r\n              <MdCreateNewFolder />\r\n            </span>\r\n          </Link>\r\n        </h5>\r\n\r\n        <div className=\"row mx-auto shadow-sm p-0 pb-1\">\r\n          <div className=\"col-12 p-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control rounded-0\"\r\n              placeholder=\"Search holiday...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ height: \"18.3rem\", overflow: \"auto\" }}>\r\n          {filteredHolidays.map((holiday, index) => (\r\n            <div className=\"row p-2 mx-auto\" key={index}>\r\n              <span className=\"col-3 border-0 text-center\">\r\n                {getHolidayIcons(holiday.holidayType)}\r\n              </span>\r\n              <span className=\"col-5 border-0 fw-bold text-muted\">\r\n                {holiday.holidayName}\r\n              </span>\r\n              <span\r\n                style={{ whiteSpace: \"pre\" }}\r\n                className=\"col-3 border-0 fw-bold text-primary\"\r\n              >{`${holiday.holidayDate}-${holiday.holidayMonth}-${holiday.holidayYear}`}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HolidayList;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"./EmployeeTable.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faEdit,\r\n  faInfoCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst AdminEmployeeTable = (props) => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : data[\"Account\"] === 4\r\n                  ? \"Manager\"\r\n                  : \"\",\r\n\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              // EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onEmployeeDelete = (e) => {\r\n    if (window.confirm(\"Are you sure to delete this record? \")) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/employee/${e}`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(() => {\r\n          loadEmployeeData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    window.confirm(\"Are you sure to download Employee record? \");\r\n    const doc = new jsPDF({\r\n      orientation: \"landscape\",\r\n      unit: \"mm\",\r\n      format: [297, 210]\r\n    });\r\n\r\n    doc.setFontSize(18);\r\n    doc.text(\"Employee Details\", 297 / 2, 15, \"center\");\r\n    const headers = [\r\n      \"Emp Id\",\r\n      \"Email\",\r\n      \"Account Access\",\r\n      \"First Name\",\r\n      \"Last Name\",\r\n      \"DOB\",\r\n      \"ContactNo\",\r\n      \"Role\",\r\n      \"Position\",\r\n      \"Department\",\r\n      \"D.O.J\"\r\n    ];\r\n    const data = rowData.map((row) => [\r\n      row.empID,\r\n      row.Email,\r\n      row.Account,\r\n      row.FirstName,\r\n      row.LastName,\r\n      row.DOB,\r\n      row.ContactNo,\r\n      row.RoleName,\r\n      row.PositionName,\r\n      row.DepartmentName,\r\n      row.DateOfJoining,\r\n      \"\"\r\n    ]);\r\n    doc.setFontSize(12);\r\n    doc.autoTable({\r\n      head: [headers],\r\n      body: data,\r\n      startY: 25\r\n    });\r\n\r\n    doc.save(\"employee_data.pdf \");\r\n  };\r\n\r\n  const renderInfoButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            onClick={() => props.onEmpInfo(params.data.data)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderButton = (params) => {\r\n    if (params.data && params.data.data && params.data.data[\"_id\"]) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faTrash}\r\n          onClick={() => onEmployeeDelete(params.data.data[\"_id\"])}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          onClick={() => props.onEditEmployee(params.data.data)}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getBackgroundColor = (accountType) => {\r\n    switch (accountType) {\r\n      case \"Admin\":\r\n        return \"#8EAC50\";\r\n      case \"HR\":\r\n        return \"#0079FF\";\r\n      case \"Employee\":\r\n        return \"purple\";\r\n      case \"Manager\":\r\n        return \"red\";\r\n      default:\r\n        return \"#FF9B50\";\r\n    }\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  const handleToggleIdSort = () => {\r\n    setIsIdSortAscending(!isIdSortAscending);\r\n  };\r\n\r\n  const sortById = (a, b) => {\r\n    const idA = a.empID.toLowerCase();\r\n    const idB = b.empID.toLowerCase();\r\n\r\n    if (isIdSortAscending) {\r\n      return idA.localeCompare(idB);\r\n    } else {\r\n      return idB.localeCompare(idA);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  let filteredData = rowData.filter((item) => {\r\n    const isMatchingId = isIdFilterActive\r\n      ? item.empID.toLowerCase() === searchInput.toLowerCase()\r\n      : true;\r\n\r\n    const isMatchingFirstName = item.FirstName.toLowerCase().includes(\r\n      searchInput.toLowerCase()\r\n    );\r\n\r\n    return isMatchingId && isMatchingFirstName;\r\n  });\r\n\r\n  filteredData = filteredData.sort(sortById);\r\n\r\n  // Calculate the total length for each status\r\n  const adminCount = filteredData.filter(\r\n    (data) => data.Account === \"Admin\"\r\n  ).length;\r\n  const hrCount = filteredData.filter((data) => data.Account === \"HR\").length;\r\n  const managerCount = filteredData.filter(\r\n    (data) => data.Account === \"Manager\"\r\n  ).length;\r\n  const employeeCount = filteredData.filter(\r\n    (data) => data.Account === \"Employee\"\r\n  ).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Admins\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {adminCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total HR{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {hrCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Manager\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {managerCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Employee\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {employeeCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/user\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-9\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEmployeeTable;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"./LeaveApplicationHRTable.css\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\nimport { css } from \"@emotion/core\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Dropdown,\r\n  DropdownButton\r\n} from \"react-bootstrap\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst LeaveApplicationHRTable = (props) => {\r\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [totalLeaves, setTotalLeaves] = useState(0);\r\n  const [sortColumn, setSortColumn] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState(\"asc\");\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // ...\r\n\r\n  let leaveApplicationHRObj = [];\r\n  let rowDataT = [];\r\n\r\n  const loadLeaveApplicationHRData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        leaveApplicationHRObj = response.data;\r\n        console.log(\"response\", response.data);\r\n        setLeaveApplicationHRData(response.data);\r\n        setLoading(false);\r\n\r\n        rowDataT = [];\r\n\r\n        leaveApplicationHRObj.map((data) => {\r\n          let temp = {\r\n            data,\r\n            empID:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"empID\"],\r\n            Name:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"FirstName\"] +\r\n                \" \" +\r\n                data[\"employee\"][0][\"LastName\"],\r\n            Leavetype: data[\"Leavetype\"],\r\n            FromDate: data[\"FromDate\"].slice(0, 10),\r\n            ToDate: data[\"ToDate\"].slice(0, 10),\r\n            Reasonforleave: data[\"Reasonforleave\"],\r\n            Status: status(data[\"Status\"])\r\n          };\r\n\r\n          rowDataT.push(temp);\r\n        });\r\n\r\n        setRowData(rowDataT);\r\n\r\n        setTotalLeaves(response.data.length);\r\n        props.updateTotalLeaves(response.data.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // ...\r\n\r\n  const onLeaveApplicationHRDelete = (e1, e2) => {\r\n    console.log(e1, e2);\r\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\r\n      axios\r\n        .delete(\"${BASE_URL}/api/leave-application-hr/\" + e1 + \"/\" + e2, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((res) => {\r\n          loadLeaveApplicationHRData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\r\n      // Set A4 landscape dimensions\r\n      const pdfWidth = 297; // A4 width in mm\r\n      const pdfHeight = 210; // A4 height in mm\r\n      const doc = new jsPDF({\r\n        orientation: \"landscape\",\r\n        unit: \"mm\",\r\n        format: [pdfWidth, pdfHeight]\r\n      });\r\n\r\n      doc.setFontSize(18);\r\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\r\n      const headers = [\r\n        \"Emp Id\",\r\n        \"Leave Type\",\r\n        \"Start Date\",\r\n        \"End Date\",\r\n        \"Remarks\",\r\n        \"Status\"\r\n      ];\r\n      const data = rowData.map((row) => [\r\n        row.empID,\r\n        row.Leavetype,\r\n        row.FromDate,\r\n        row.ToDate,\r\n        row.Reasonforleave,\r\n        row.Status,\r\n\r\n        \"\" // Action column - you can customize this based on your requirements\r\n      ]);\r\n      doc.setFontSize(12);\r\n      doc.autoTable({\r\n        head: [headers],\r\n        body: data,\r\n        startY: 25\r\n      });\r\n\r\n      doc.save(\"leaveApplication_data.pdf\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLeaveApplicationHRData();\r\n  }, []);\r\n\r\n  const renderButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faTrash}\r\n        onClick={() =>\r\n          onLeaveApplicationHRDelete(\r\n            params.data.data[\"employee\"][0][\"_id\"],\r\n            params.data.data[\"_id\"]\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => props.onEditLeaveApplicationHR(params.data.data)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const status = (s) => {\r\n    if (s == 1) {\r\n      return \"Pending\";\r\n    }\r\n    if (s == 2) {\r\n      return \"Approved\";\r\n    }\r\n    if (s == 3) {\r\n      return \"Rejected\";\r\n    }\r\n    // Add a default case or return a meaningful value for unknown status\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const renderSortIcon = (field) => {\r\n    if (sortColumn === field) {\r\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sortData = (columnName) => {\r\n    const newSortDirection =\r\n      sortColumn === columnName && sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n    const sortedData = [...rowData];\r\n\r\n    sortedData.sort((a, b) => {\r\n      const valueA = a[columnName];\r\n      const valueB = b[columnName];\r\n\r\n      let comparison = 0;\r\n\r\n      if (valueA > valueB) {\r\n        comparison = 1;\r\n      } else if (valueA < valueB) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return newSortDirection === \"desc\" ? comparison * -1 : comparison;\r\n    });\r\n\r\n    setRowData(sortedData);\r\n    setSortColumn(columnName);\r\n    setSortDirection(newSortDirection);\r\n  };\r\n\r\n  // Calculate the total length for each status\r\n  const pendingLeaves = rowData.filter(\r\n    (data) => data.Status === \"Pending\"\r\n  ).length;\r\n  const approvedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Approved\"\r\n  ).length;\r\n  const rejectedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Rejected\"\r\n  ).length;\r\n\r\n  return (\r\n    // <div className=\"p-4\">\r\n    //   <div className=\"d-flex justify-between\">\r\n    //     <h3 className=\"fw-bold text-muted\">Leave Request ({totalLeaves})</h3>\r\n\r\n    //     <button\r\n    //       className=\"btn px-3 d-flex justify-center aline-center gap-2\"\r\n    //       onClick={exportToPDF}\r\n    //     >\r\n    //       <BsFillFileEarmarkPdfFill className=\"text-danger fs-4\" />\r\n    //       <p className=\"my-auto fs-5 fw-bold\">PDF</p>\r\n    //     </button>\r\n    //   </div>\r\n\r\n    //   <div id=\"clear-both\" />\r\n\r\n    //   <div className=\"mt-3\">\r\n    //     {/* Display the total length for each status */}\r\n    //     <p>Total Pending Leaves: {pendingLeaves}</p>\r\n    //     <p>Total Approved Leaves: {approvedLeaves}</p>\r\n    //     <p>Total Rejected Leaves: {rejectedLeaves}</p>\r\n\r\n    //     {/* Display the table */}\r\n    //     {!loading ? (\r\n    //       <div\r\n    //         style={{\r\n    //           overflow: \"auto\",\r\n    //           height: \"85vh\",\r\n    //           width: \"100%\",\r\n    //           scrollbarWidth: \"thin\"\r\n    //         }}\r\n    //       >\r\n    //         <table className=\"table table-striped\">\r\n    //           <thead>{/* ... (existing code) */}</thead>\r\n    //           <tbody>\r\n    //             {rowData\r\n    //               .filter((e) => e.Status == \"Pending\")\r\n    //               .map((data, index) => (\r\n    //                 <tr key={index}>{/* ... (existing code) */}</tr>\r\n    //               ))}\r\n    //           </tbody>\r\n    //         </table>\r\n    //       </div>\r\n    //     ) : (\r\n    //       <div id=\"loading-bar\">\r\n    //         <RingLoader\r\n    //           css={override}\r\n    //           sizeUnit={\"px\"}\r\n    //           size={50}\r\n    //           color={\"#0000ff\"}\r\n    //           loading={true}\r\n    //         />\r\n    //       </div>\r\n    //     )}\r\n    //   </div>\r\n    // </div>\r\n    <div>\r\n      <div className=\"container-fluid  mt-4\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Pending Leaves\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {pendingLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/pendingLeave\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Approved Leaves{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {approvedLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/leaveAccepted\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Rejected Leaves\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {rejectedLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/admin/leaveRejected\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Role\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/role\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveApplicationHRTable;\r\n","import React, { createContext } from 'react'\r\n\r\nexport const AttendanceContext = createContext();","export default __webpack_public_path__ + \"static/media/NoticeBadge.fa1402bd.svg\";","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { TiDeleteOutline } from \"react-icons/ti\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nimport NoticeBadge from \"../../../img/NoticeBadge.svg\";\r\n\r\nimport axios from \"axios\";\r\nconst NoticeBoard = () => {\r\n  const [notice, setNotice] = useState([]);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setNotice(response.data.Notice);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"Socket:\", socket?.id);\r\n    if (socket) {\r\n      socket.on(\"notice\", (data) => {\r\n        setNotice((prev) => [data, ...prev]);\r\n      });\r\n      socket.on(\"noticeDelete\", (data) => {\r\n        if (data) {\r\n          loadEmployeeData();\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n  const pdfHandler = (path) => {\r\n    window.open(`${BASE_URL}/${path}`, \"_blank\", \"noreferrer\");\r\n    // window.open(path, \"_blank\")\r\n  };\r\n  const deleteHandler = (id) => {\r\n    axios\r\n      .post(`${BASE_URL}/api/noticeDelete`, { noticeId: id })\r\n      .then((res) => {\r\n        alert(\"Notice delete\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"container box-shadow: 0 4px 10px 0 rgb(137 137 137 / 25%); p-0 h-100 \">\r\n      <div className=\"birthday\">\r\n        <h5\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center\"\r\n        >\r\n          Notice Board{\" \"}\r\n          {notice && <span className=\"text-primary\">({notice.length})</span>}\r\n        </h5>\r\n        <div\r\n          className=\"mainbirth\"\r\n          style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n        >\r\n          {notice && notice.length > 0 ? (\r\n            <table className=\"table table-striped mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"cursor-pointer\" style={{ width: \"80%\" }}>\r\n                    Notice\r\n                  </th>\r\n                  <th style={{ width: \"80%\" }}>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {notice\r\n                  .filter(\r\n                    (val, i, ar) =>\r\n                      ar.findIndex((item) => item.noticeId === val.noticeId) ===\r\n                      i\r\n                  )\r\n                  .map((val) => (\r\n                    <tr key={val.noticeId} style={{ cursor: \"pointer\" }}>\r\n                      <td\r\n                        onClick={() => pdfHandler(val.attachments)}\r\n                      >{`${val.notice}`}</td>\r\n                      <td\r\n                        style={{\r\n                          fontSize: \"22px\",\r\n                          color: \"red\",\r\n                          textAlign: \"center\"\r\n                        }}\r\n                      >\r\n                        <TiDeleteOutline\r\n                          onClick={() => deleteHandler(val.noticeId)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center aline-items-center gap-3\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ height: \"70%\", width: \"60%\" }}\r\n                className=\"mx-auto\"\r\n                src={NoticeBadge}\r\n                alt=\"Happy Birthday\"\r\n              />\r\n              <p\r\n                style={{ opacity: \"60%\", fontSize: \"13px\" }}\r\n                className=\"text-center w-75 mx-auto  fw-bold text-muted \"\r\n              >\r\n                Notice Not Assigned\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // <div className=\"container box-shadow: 0 4px 10px 0 rgb(137 137 137 / 25%); mt-4 \">\r\n    //   <div className=\"birthday\">\r\n    //     <h4 className=\"fw-bolder d-flex text-muted gap-0 text-center\">\r\n    //       Notice Board{\" \"}\r\n    //       <span className=\"text-primary mx-2\">({notice.length})</span>\r\n    //     </h4>\r\n    //     <div\r\n    //       className=\"mainbirth\"\r\n    //       style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n    //     >\r\n    //       {notice.length > 0 ? (\r\n    //         <table className=\"table table-striped mt-3\">\r\n    //           <thead>\r\n    //             <tr>\r\n    //               <th className=\"cursor-pointer\" style={{ width: \"80%\" }}>\r\n    //                 Notice\r\n    //               </th>\r\n    //               <th style={{ width: \"80%\" }}>Action</th>\r\n    //             </tr>\r\n    //           </thead>\r\n    //           <tbody>\r\n    //             {notice\r\n    //               .filter(\r\n    //                 (val, i, ar) =>\r\n    //                   ar.findIndex((item) => item.noticeId === val.noticeId) ===\r\n    //                   i\r\n    //               )\r\n    //               .map((val) => (\r\n    //                 <tr key={val.noticeId} style={{ cursor: \"pointer\" }}>\r\n    //                   <td\r\n    //                     onClick={() => pdfHandler(val.attachments)}\r\n    //                   >{`${val.notice}`}</td>\r\n    //                   <td\r\n    //                     style={{\r\n    //                       fontSize: \"22px\",\r\n    //                       color: \"red\",\r\n    //                       textAlign: \"center\"\r\n    //                     }}\r\n    //                   >\r\n    //                     <TiDeleteOutline\r\n    //                       onClick={() => deleteHandler(val.noticeId)}\r\n    //                     />\r\n    //                   </td>\r\n    //                 </tr>\r\n    //               ))}\r\n    //           </tbody>\r\n    //         </table>\r\n    //       ) : (\r\n    //         <p>No Notice</p>\r\n    //       )}\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default NoticeBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst DailyAttendChart = () => {\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [statusCounts, setStatusCounts] = useState({\r\n    Present: 0,\r\n    Late: 0,\r\n    \"Half Day\": 0,\r\n    Absent: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchAttendanceData = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/api/todays-attendance`);\r\n        setAttendanceData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching today's attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAttendanceData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const counts = attendanceData.reduce(\r\n      (acc, user) => {\r\n        const mark = getAttendanceMark(user);\r\n        acc[mark]++;\r\n        return acc;\r\n      },\r\n      { Late: 0, Present: 0, \"Half Day\": 0, Absent: 0 }\r\n    );\r\n\r\n    setStatusCounts(counts);\r\n  }, [attendanceData]);\r\n\r\n  const getAttendanceMark = (user) => {\r\n    const loginTime = user.attendance && user.attendance.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute >= 45)) {\r\n        return \"Half Day\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"Late\";\r\n      }\r\n    }\r\n    return loginTime ? \"Present\" : \"Absent\";\r\n  };\r\n\r\n  const seriesData = [\r\n    statusCounts.Late,\r\n    statusCounts.Present,\r\n    statusCounts[\"Half Day\"],\r\n    statusCounts.Absent\r\n  ];\r\n\r\n  const chartOptions = {\r\n    chart: {\r\n      type: \"polarArea\"\r\n    },\r\n    stroke: {\r\n      colors: [\"#fff\"]\r\n    },\r\n    fill: {\r\n      opacity: 0.8\r\n    },\r\n    labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"], // Labels for each segment\r\n    legend: {\r\n      position: \"bottom\",\r\n      labels: {\r\n        useSeriesColors: true // Apply series colors to legend labels\r\n      },\r\n      markers: {\r\n        width: 12,\r\n        height: 12,\r\n        strokeWidth: 0,\r\n        strokeColor: \"#fff\",\r\n        fillColors: undefined,\r\n        radius: 12,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        onClick: undefined,\r\n        customHTML: undefined,\r\n        onClick: undefined,\r\n        toggleOnLegendClick: true,\r\n        itemMargin: {\r\n          horizontal: 5,\r\n          vertical: 5\r\n        },\r\n        onItemClick: {\r\n          toggleDataSeries: true\r\n        },\r\n        onItemHover: {\r\n          highlightDataSeries: true\r\n        }\r\n      }\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: \"bottom\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Today's Attendance\r\n        </h6>\r\n      </div>\r\n      <ReactApexChart\r\n        options={chartOptions}\r\n        series={seriesData}\r\n        type=\"polarArea\"\r\n      />\r\n    </div>\r\n    // <div>\r\n    //   <div className=\"ChartCard shadow-sm \">\r\n    //     <div className=\"ChartHeader\">\r\n    //       <div className=\"d-flex justify-content-between \">\r\n    //         <h4 className=\"fw-bolder my-auto text-white \">\r\n    //           Today's Attendance\r\n    //         </h4>\r\n    //       </div>\r\n    //     </div>\r\n    //     <div id=\"chart\">\r\n    //       <ReactApexChart\r\n    //         options={chartOptions}\r\n    //         series={seriesData}\r\n    //         type=\"polarArea\"\r\n    //       />\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default DailyAttendChart;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import Chart from \"react-apexcharts\";\r\n// import ReactApexChart from \"react-apexcharts\";\r\n\r\n// const DailyAttendChart = () => {\r\n//   const [attendanceData, setAttendanceData] = useState([]);\r\n//   const [statusCounts, setStatusCounts] = useState({\r\n//     Present: 0,\r\n//     Late: 0,\r\n//     \"Half Day\": 0,\r\n//     Absent: 0\r\n//   });\r\n\r\n//   const [chartOption, setChartOption] = useState({\r\n//     options: {\r\n//       labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"],\r\n//       colors: [\"#FFC764\", \"#00FFAB\", \"#FF884B\", \"#F65A83\"],\r\n//       plotOptions: {\r\n//         pie: {\r\n//           donut: {\r\n//             labels: {\r\n//               show: true,\r\n//               total: {\r\n//                 show: true\r\n//               }\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     },\r\n//     series: [\r\n//       statusCounts.Late,\r\n//       statusCounts.Present,\r\n//       statusCounts[\"Half Day\"],\r\n//       statusCounts.Absent\r\n//     ]\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchAttendanceData = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           \"${BASE_URL}/api/todays-attendance\"\r\n//         );\r\n//         setAttendanceData(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching today's attendance data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchAttendanceData();\r\n//   }, []);\r\n\r\n//   const Today = () => {\r\n//     const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\r\n//     return new Date()\r\n//       .toLocaleDateString(undefined, options)\r\n//       .split(\"/\")\r\n//       .reverse()\r\n//       .join(\"-\");\r\n//   };\r\n\r\n//   const today = new Date();\r\n//   const yyyy = today.getFullYear();\r\n//   let mm = today.getMonth() + 1;\r\n//   let dd = today.getDate();\r\n//   if (dd < 10) dd = \"0\" + dd;\r\n//   if (mm < 10) mm = \"0\" + mm;\r\n//   let dayCurrent = today.getDay();\r\n\r\n//   console.log(\"Today's Date:\", `${dd}-${mm}-${yyyy}`);\r\n//   console.log(\"Day of the Week:\", dayCurrent);\r\n\r\n//   useEffect(() => {\r\n//     const counts = attendanceData.reduce(\r\n//       (acc, user) => {\r\n//         const mark = getAttendanceMark(user);\r\n//         acc[mark]++;\r\n//         return acc;\r\n//       },\r\n//       { Late: 0, Present: 0, \"Half Day\": 0, Absent: 0 }\r\n//     );\r\n\r\n//     setStatusCounts(counts);\r\n//   }, [attendanceData]);\r\n\r\n//   useEffect(() => {\r\n//     setChartOption({\r\n//       options: {\r\n//         labels: [\"Late\", \"Present\", \"Half Day\", \"Absent\"],\r\n//         colors: [\"#FFC764\", \"#00FFAB\", \"#FF884B\", \"#F65A83\"],\r\n//         plotOptions: {\r\n//           pie: {\r\n//             donut: {\r\n//               labels: {\r\n//                 show: true,\r\n//                 total: {\r\n//                   show: true\r\n//                 }\r\n//               }\r\n//             }\r\n//           }\r\n//         }\r\n//       },\r\n//       series: [\r\n//         statusCounts.Late,\r\n//         statusCounts.Present,\r\n//         statusCounts[\"Half Day\"],\r\n//         statusCounts.Absent\r\n//       ]\r\n//     });\r\n//   }, [statusCounts]);\r\n\r\n//   const getAttendanceMark = (user) => {\r\n//     const loginTime = user.attendance && user.attendance.loginTime[0];\r\n//     if (loginTime) {\r\n//       const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n//       if (loginHour > 9 || (loginHour === 9 && loginMinute >= 45)) {\r\n//         return \"Half Day\";\r\n//       } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//         return \"Late\";\r\n//       }\r\n//     }\r\n//     return loginTime ? \"Present\" : \"Absent\";\r\n//   };\r\n//   const status = (s) => {\r\n//     if (s == 0) {\r\n//       return \"Sunday\";\r\n//     }\r\n//     if (s == 1) {\r\n//       return \"Monday\";\r\n//     }\r\n//     if (s == 2) {\r\n//       return \"Tuesday\";\r\n//     }\r\n//     if (s == 3) {\r\n//       return \"Wednedsy\";\r\n//     }\r\n//     if (s == 4) {\r\n//       return \"Thrusday\";\r\n//     }\r\n//     if (s == 5) {\r\n//       return \"Friday\";\r\n//     }\r\n//     if (s == 6) {\r\n//       return \"Saturday\";\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2\">\r\n//       <div className=\"ChartHeader\">\r\n//         <h6\r\n//           style={{\r\n//             width: \"fit-content\",\r\n//             boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n//             color: \"var(--primaryDashColorDark)\"\r\n//           }}\r\n//           className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n//         >\r\n//           Today's Attendance\r\n//         </h6>\r\n//       </div>\r\n//       <Chart\r\n//         options={chartOption.options}\r\n//         series={chartOption.series}\r\n//         type=\"donut\"\r\n//         width=\"100%\"\r\n//         height=\"300px\"\r\n//       />\r\n//     </div>\r\n\r\n//   );\r\n// };\r\n\r\n// export default DailyAttendChart;\r\n","import React from \"react\";\nimport \"../AdminDash.css\";\nimport UpcomingBirthdays from \"../../../Pages/AddEmployee/UpcomingBirthdays\";\nimport TaskChart from \"../Dashboard/Chart/TaskChart\";\nimport DepartmentChart from \"../../../Pages/Chart/DepartmentChart\";\nimport HolidayList from \"../../../Pages/LeaveCalendar/HolidayList\";\nimport EmployeeCount from \"./CountData/EmployeeCount\";\nimport LeaveCount from \"./CountData/LeavesCount\";\nimport NoticeBoard from \"../Notification/NoticeBoard\";\nimport DailyAttendChart from \"../../../Pages/Chart/DailyAttendChart\";\nconst AdminDash = () => {\n  return (\n    <div className=\"main-container\">\n      <div className=\"row gap-0 mx-0\">\n        <div className=\"col-lg-9\">\n          <EmployeeCount />\n          <LeaveCount />\n\n          <div className=\"row row_flex mt-5\">\n            <div className=\"col-lg-6\">\n              <DailyAttendChart />\n            </div>\n            <div className=\"col-lg-6\">\n              <DepartmentChart />\n            </div>\n          </div>\n          <div className=\"row row_flex mt-5\">\n            <div className=\"col-lg-9\">\n              <TaskChart />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3\">\n          <UpcomingBirthdays />\n          <NoticeBoard />\n          <div className=\"holiday mt-3\">\n            <HolidayList />\n          </div>\n          <div className=\"col-md-9\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDash;\n","import React, { Component } from \"react\";\nimport \"./RoleTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass RoleTable extends Component {\n  state = {\n    roleData: [],\n    loading: true,\n    updateTotalRole: \"\",\n\n    rowData: [],\n\n    getRowHeight: function (params) {\n      return 35;\n    }\n  };\n  roleObj = [];\n  rowDataT = [];\n\n  loadRoleData = () => {\n    axios\n      .get(`${BASE_URL}/api/role`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.roleObj = response.data;\n\n        console.log(\"response\", response.data);\n        this.setState({ roleData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.roleObj.map((data) => {\n          let temp = {\n            data,\n            CompanyName: data[\"company\"][0][\"CompanyName\"],\n            RoleName: data[\"RoleName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n\n        this.props.updateTotalRole(response.data.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onRoleDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(`${BASE_URL}/api/role/` + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  componentDidMount() {\n    this.loadRoleData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onRoleDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditRole(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{ height: \"100vh\", width: \"100%\", scrollbarWidth: \"thin\" }}\n        className=\"p-4\"\n      >\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">Role Details</h3>\n          </div>\n\n          <Button\n            variant=\"primary\"\n            className=\"my-auto shadow-sm\"\n            onClick={this.props.onAddRole}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Create Role\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n        {!this.state.loading ? (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Company\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Role\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    textAlign: \"center\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Action\n                </th>\n              </tr>\n            </thead>\n\n            {!this.state.loading ? (\n              <React.Fragment>\n                {this.roleObj.map((data, index) => (\n                  <tbody key={index}>\n                    <tr>\n                      <td className=\"fw-bold text-capitalize\">\n                        {data[\"company\"][0][\"CompanyName\"]}\n                      </td>\n                      <td className=\"fw-bold text-capitalize\">\n                        {data[\"RoleName\"]}\n                      </td>\n\n                      <td>\n                        <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n                          <span\n                            onClick={() => this.props.onEditRole(data)}\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Update\"\n                            className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                          >\n                            <FontAwesomeIcon icon={faEdit} />\n                            <span>Edit</span>\n                          </span>\n                          <span\n                            onClick={() => this.onRoleDelete(data[\"_id\"])}\n                            style={{ cursor: \"pointer\" }}\n                            title=\"Delete\"\n                            className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                          >\n                            <FontAwesomeIcon icon={faTrash} />\n                            <span>Delete</span>\n                          </span>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </React.Fragment>\n            ) : (\n              <tbody>\n                <tr>\n                  <td />\n                  <td>\n                    <div id=\"loading-bar\">\n                      <RingLoader\n                        css={override}\n                        sizeUnit={\"px\"}\n                        size={150}\n                        color={\"#0000ff\"}\n                        loading={true}\n                      />\n                    </div>\n                  </td>\n                  <td />\n                  <td />\n                </tr>\n              </tbody>\n            )}\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default RoleTable;\n","import React, { Component } from \"react\";\nimport \"./RoleForm.css\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass RoleForm extends Component {\n  state = {\n    companyInfo: []\n  };\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.companyData = response.data;\n\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add Role Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onRoleSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CompanyName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Role\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Role\"\n                  name=\"Role\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoleForm;\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass RoleForm extends Component {\n  state = {\n    RoleData: this.props.editData[\"RoleName\"],\n    companyInfo: []\n  };\n  onChange(e) {\n    this.setState({ RoleData: e.target.value });\n  }\n\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.companyData = response.data;\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Role Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onRoleEditUpdate(\n                this.props.editData,\n                e.target[0].value,\n                e.target[1].value\n              )\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"company\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CompanyName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Role\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Role\"\n                  name=\"RoleName\"\n                  required\n                  value={this.state.RoleData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoleForm;\n","import React, { Component } from \"react\";\nimport \"./Role.css\";\nimport axios from \"axios\";\nimport RoleTable from \"./RoleTable.jsx\";\nimport RoleForm from \"./RoleForm.jsx\";\nimport RoleFormEdit from \"./RoleFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n// function RoleTableF() {\n//   return <RoleTable/>;\n// }\n// function RoleFormF() {\n//   return  <RoleForm onRoleSubmit={handleRoleSubmit}/>;\n// }\n\n// function handleRoleSubmit(e) {\n//   e.preventDefault();\n//   console.log(e);\n\n// }\n\nclass Role extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {}\n  };\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      //  <Router>\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <RoleFormEdit\n              onRoleEditUpdate={this.handleRoleEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n            />\n          ) : (\n            <RoleTable\n              onAddRole={this.handleAddRole}\n              onEditRole={this.handleEditRole}\n            />\n          )\n        ) : (\n          <RoleForm\n            onRoleSubmit={this.handleRoleSubmit}\n            onFormClose={this.handleFormClose}\n          />\n        )}\n\n        {/* <div>debru</div> */}\n        {/* <Route path=\"/admin/role/table\" exact component={RoleTable} /> */}\n        {/* <Route path=\"/admin/role/form\" exact component={() => <RoleForm onRoleSubmit={this.handleRoleSubmit} />} /> */}\n\n        {/* <RoleTable/> */}\n      </React.Fragment>\n\n      //  </Router>\n    );\n  }\n  handleRoleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    this.setState({ table: true });\n\n    let body = {\n      CompanyID: event.target[0].value,\n      RoleName: event.target[1].value\n    };\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&Role=\" + event.target[1].value;\n    //  let body= \"debru\";\n    axios\n      .post(`${BASE_URL}/api/role`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // this.setState({ loading: true });\n    // this.login(event.target[0].value, event.target[1].value);\n    // event.target.reset();\n  };\n  handleAddRole = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditRole = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleRoleEditUpdate = (info, formData1, formData2) => {\n    // this.setState({ table: true });\n    let body = {\n      // ...info,CompanyID:formData1,Role:formData2\n\n      CompanyID: formData1,\n      RoleName: formData2\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/role/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default Role;\n","import React, { Component } from \"react\";\nimport \"./PositionTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\n// import { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\nimport {\n  Form,\n  Button,\n  Col,\n  Row,\n  Table,\n  Dropdown,\n  DropdownButton\n} from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass PositionTable extends Component {\n  state = {\n    positionData: [],\n    loading: true,\n    totalPositions: 0,\n    rowData: [],\n\n    getRowHeight: function (params) {\n      return 35;\n    }\n  };\n  positionObj = [];\n  rowDataT = [];\n\n  loadPositionData = () => {\n    axios\n      .get(`${BASE_URL}/api/position`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.positionObj = response.data;\n        console.log(\"response\", response.data);\n        this.setState({ positionData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.positionObj.map((data) => {\n          let temp = {\n            data,\n            CompanyName: data[\"company\"][0][\"CompanyName\"],\n            PositionName: data[\"PositionName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n        // this.setState({ totalPositions: response.data.length });\n        this.props.updateTotalPositions(response.data.length); // Update this line\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onPositionDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(`${BASE_URL}/api/position/` + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadPositionData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onPositionDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditPosition(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{ height: \"100vh\", width: \"100%\", scrollbarWidth: \"thin\" }}\n        className=\"p-4\"\n      >\n        <div className=\"d-flex justify-between mb-3\">\n          <div>\n            <h2 className=\"fw-bold text-muted my-auto\">Position Details</h2>\n          </div>\n          <Button\n            className=\"my-auto shadow-sm\"\n            variant=\"primary\"\n            onClick={this.props.onAddPosition}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Create Position\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n        <Table className=\"table\">\n          <thead>\n            <tr>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n                className=\"py-1\"\n              >\n                Company\n              </th>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n                className=\"py-1\"\n              >\n                Position\n              </th>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\",\n                  textAlign: \"center\"\n                }}\n                className=\"py-1\"\n              >\n                {\" \"}\n                Action\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.positionObj.map((data, index) => (\n              <tr key={index}>\n                <td className=\"text-capitalize fw-bold\">\n                  {data[\"company\"][0][\"CompanyName\"]}\n                </td>\n                <td className=\"text-capitalize fw-bold\">\n                  {data[\"PositionName\"]}\n                </td>\n\n                <td>\n                  <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n                    <span\n                      onClick={() => this.props.onEditPosition(data)}\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Update\"\n                      className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                    >\n                      <FontAwesomeIcon icon={faEdit} />\n                      <span>Edit</span>\n                    </span>\n                    <span\n                      onClick={() => this.onPositionDelete(data[\"_id\"])}\n                      style={{ cursor: \"pointer\" }}\n                      title=\"Delete\"\n                      className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                      <span>Delete</span>\n                    </span>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default PositionTable;\n","import React, { Component } from \"react\";\nimport \"./PositionForm.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass PositionForm extends Component {\n  state = {\n    companyInfo: []\n  };\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.companyData = response.data;\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n  render() {\n    return (\n      <div>\n        <h2 className=\"p-3 fw-bold text-muted text-center mt-3\">\n          Add Position 🪑\n        </h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onPositionSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                <h5>Company :</h5>\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CompanyName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                <h5>Position :</h5>\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Position\"\n                  name=\"Position\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <div className=\"row mt- \">\n              <div className=\"col-2\"></div>\n\n              <div className=\"col-10 d-flex justify-between \">\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Submit\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  type=\"reset\"\n                  onClick={this.props.onFormClose}\n                >\n                  cancel\n                </button>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PositionForm;\n","import React, { Component } from \"react\";\n// import \"./PositionForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass PositionForm extends Component {\n  state = {\n    PositionData: this.props.editData[\"PositionName\"],\n    companyInfo: []\n  };\n  onChange(e) {\n    this.setState({ PositionData: e.target.value });\n  }\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.roleObj=[\"temp\"];}\n        // else{\n\n        // }\n        this.companyData = response.data;\n\n        // this.portalsData=this.portalsData.filter((data)=>data[\"Status\"]==1);\n\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Position Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onPositionEditUpdate(\n                this.props.editData,\n                e.target[0].value,\n                e.target[1].value\n              )\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"company\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CompanyName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Position\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Position\"\n                  name=\"PositionName\"\n                  required\n                  value={this.state.PositionData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PositionForm;\n","import React, { Component } from \"react\";\nimport \"./Position.css\";\nimport axios from \"axios\";\nimport PositionTable from \"./PositionTable.jsx\";\nimport PositionForm from \"./PositionForm.jsx\";\nimport PositionFormEdit from \"./PositionFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n// function PositionTableF() {\n//   return <PositionTable/>;\n// }\n// function PositionFormF() {\n//   return  <PositionForm onPositionSubmit={handlePositionSubmit}/>;\n// }\n\n// function handlePositionSubmit(e) {\n//   e.preventDefault();\n//   console.log(e);\n\n// }\n\nclass Position extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {}\n  };\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      //  <Router>\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <PositionFormEdit\n              onPositionEditUpdate={this.handlePositionEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n            />\n          ) : (\n            <PositionTable\n              onAddPosition={this.handleAddPosition}\n              onEditPosition={this.handleEditPosition}\n            />\n          )\n        ) : (\n          <PositionForm\n            onPositionSubmit={this.handlePositionSubmit}\n            onFormClose={this.handleFormClose}\n          />\n        )}\n\n        {/* <div>debru</div> */}\n        {/* <Route path=\"/admin/Position/table\" exact component={PositionTable} /> */}\n        {/* <Route path=\"/admin/Position/form\" exact component={() => <PositionForm onPositionSubmit={this.handlePositionSubmit} />} /> */}\n\n        {/* <PositionTable/> */}\n      </React.Fragment>\n\n      //  </Router>\n    );\n  }\n  handlePositionSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    this.setState({ table: true });\n\n    let body = {\n      CompanyID: event.target[0].value,\n      PositionName: event.target[1].value\n    };\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&Position=\" + event.target[1].value;\n    //  let body= \"debru\";\n    axios\n      .post(`${BASE_URL}/api/position`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // this.setState({ loading: true });\n    // this.login(event.target[0].value, event.target[1].value);\n    // event.target.reset();\n  };\n  handleAddPosition = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditPosition = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handlePositionEditUpdate = (info, formData1, formData2) => {\n    // this.setState({ table: true });\n    let body = {\n      CompanyID: formData1,\n      PositionName: formData2\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/position/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default Position;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst DepartmentTable = ({ onAddDepartment, onEditDepartment }) => {\n  const [departmentData, setDepartmentData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDepartmentData();\n  }, []);\n\n  const loadDepartmentData = () => {\n    axios\n      .get(`${BASE_URL}/api/department`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const departmentObj = response.data;\n        console.log(\"response\", response.data);\n        setDepartmentData(departmentObj);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onDepartmentDelete = (id) => {\n    if (window.confirm(\"Are you sure to delete this record ?\")) {\n      axios\n        .delete(`${BASE_URL}/api/department/${id}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadDepartmentData();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status === 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-between aline-items-start mb-3\">\n        <div className=\"my-auto\">\n          <h3 className=\"fw-bold text-muted\">Department Details</h3>\n        </div>\n        <Button\n          className=\"my-auto\"\n          variant=\"primary shadow-sm\"\n          onClick={onAddDepartment}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Create Department\n        </Button>\n      </div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th>Department</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {departmentData.map((item, index) => (\n            <tr key={index}>\n              <td className=\"text-capitalize fw-bold\">\n                {item.company[0].CompanyName}\n              </td>\n              <td className=\"text-capitalize fw-bold\">{item.DepartmentName}</td>\n              <td>\n                <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n                  <span\n                    onClick={() => onEditDepartment(item)}\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Update\"\n                    className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                  >\n                    <FontAwesomeIcon icon={faEdit} />\n                    <span>Edit</span>\n                  </span>\n                  <span\n                    onClick={() => onDepartmentDelete(item._id)}\n                    style={{ cursor: \"pointer\" }}\n                    title=\"Delete\"\n                    className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                    <span>Delete</span>\n                  </span>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DepartmentTable;\n\n// import React, { Component } from \"react\";\n// import \"./DepartmentTable.css\";\n// import axios from \"axios\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\n// import { Button } from \"react-bootstrap\";\n// import BASE_URL from \"../config/config\";\n\n// class DepartmentTable extends Component {\n//   state = {\n//     departmentData: [],\n//     loading: true\n//   };\n//   departmentObj = [];\n//   rowDataT = [];\n\n//   loadDepartmentData = () => {\n//     axios\n//       .get(`${BASE_URL}/api/department`, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then((response) => {\n//         this.departmentObj = response.data;\n//         console.log(\"response\", response.data);\n//         this.setState({ departmentData: response.data });\n//         this.setState({ loading: false });\n//         this.rowDataT = [];\n\n//         this.departmentObj.map((data) => {\n//           let temp = {\n//             data,\n//             CompanyName: data[\"company\"][0][\"CompanyName\"],\n//             DepartmentName: data[\"DepartmentName\"]\n//           };\n\n//           this.rowDataT.push(temp);\n//         });\n//         this.setState({ rowData: this.rowDataT });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n\n//   onDepartmentDelete = (e) => {\n//     console.log(e);\n//     if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n//       axios\n//         .delete(`${BASE_URL}/api/department/` + e, {\n//           headers: {\n//             authorization: localStorage.getItem(\"token\") || \"\"\n//           }\n//         })\n//         .then((res) => {\n//           this.componentDidMount();\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//           console.log(err.response);\n//           if (err.response.status == 403) {\n//             window.alert(err.response.data);\n//           }\n//         });\n//     }\n//   };\n//   componentDidMount() {\n//     this.loadDepartmentData();\n//   }\n\n//   renderButton(params) {\n//     console.log(params);\n//     return (\n//       <FontAwesomeIcon\n//         icon={faTrash}\n//         onClick={() => this.onDepartmentDelete(params.data.data[\"_id\"])}\n//       />\n//     );\n//   }\n//   renderEditButton(params) {\n//     console.log(params);\n//     return (\n//       <FontAwesomeIcon\n//         icon={faEdit}\n//         onClick={() => this.props.onEditDepartment(params.data.data)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"p-4\">\n//         <div className=\"d-flex justify-between aline-items-start mb-3\">\n//           <div className=\" my-auto\">\n//             <h3 className=\"fw-bold text-muted\">Department Details</h3>\n//           </div>\n\n//           <Button\n//             className=\"my-auto\"\n//             variant=\"primary shadow-sm\"\n//             onClick={this.props.onAddDepartment}\n//           >\n//             <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n//             Create Department\n//           </Button>\n//         </div>\n//         <table className=\"table\">\n//           <thead>\n//             <th\n//               style={{\n//                 background: \"var(--primaryDashColorDark)\",\n//                 color: \"var(--primaryDashMenuColor)\"\n//               }}\n//               className=\"py-1\"\n//             >\n//               Company\n//             </th>\n//             <th\n//               style={{\n//                 background: \"var(--primaryDashColorDark)\",\n//                 color: \"var(--primaryDashMenuColor)\"\n//               }}\n//               className=\"py-1\"\n//             >\n//               Department\n//             </th>\n//             <th\n//               style={{\n//                 background: \"var(--primaryDashColorDark)\",\n//                 color: \"var(--primaryDashMenuColor)\"\n//               }}\n//               className=\"py-1\"\n//             >\n//               Action\n//             </th>\n//           </thead>\n\n//           <tbody>\n//             {this.state.departmentData.map((items, index) => (\n//               <tr key={index}>\n//                 <td className=\"text-capitalize fw-bold\">\n//                   {items[\"company\"][0][\"CompanyName\"]}\n//                 </td>\n//                 <td className=\"text-capitalize fw-bold\">\n//                   {items.DepartmentName}\n//                 </td>\n//                 <td>\n//                   <div className=\"d-flex wrap-nowrap justify-content-end gap-3\">\n//                     <span\n//                       onClick={() => this.props.onEditDepartment(items)}\n//                       style={{ cursor: \"pointer\" }}\n//                       title=\"Update\"\n//                       className=\"text-primary d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n//                     >\n//                       <FontAwesomeIcon icon={faEdit} />\n//                       <span>Edit</span>\n//                     </span>\n//                     <span\n//                       onClick={() => this.onDepartmentDelete(items[\"_id\"])}\n//                       style={{ cursor: \"pointer\" }}\n//                       title=\"Delete\"\n//                       className=\"text-danger d-flex align-items-center gap-2 px-4 shadow-sm rounded-5\"\n//                     >\n//                       <FontAwesomeIcon icon={faTrash} />\n//                       <span>Delete</span>\n//                     </span>\n//                   </div>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//       // <div id=\"table-outer-div-scroll\">\n//       //   <h2 id=\"role-title\">Department Details</h2>\n//       //   <Button\n//       //     variant=\"primary\"\n//       //     id=\"add-button\"\n//       //     onClick={this.props.onAddDepartment}\n//       //   >\n//       //     <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n//       //     Add\n//       //   </Button>\n\n//       //   <div id=\"clear-both\" />\n//       //   {!this.state.loading ? (\n//       //     <div\n//       //       id=\"table-div\"\n//       //       className=\"ag-theme-balham\"\n//       //       //   style={\n//       //       //     {\n//       //       //     height: \"500px\",\n//       //       //     width: \"100%\"\n//       //       //   }\n//       //       // }\n//       //     >\n//       //       <AgGridReact\n//       //         columnDefs={this.state.columnDefs}\n//       //         defaultColDef={this.state.defaultColDef}\n//       //         columnTypes={this.state.columnTypes}\n//       //         rowData={this.state.rowData}\n//       //         // floatingFilter={true}\n//       //         // onGridReady={this.onGridReady}\n//       //         pagination={true}\n//       //         paginationPageSize={10}\n//       //         getRowHeight={this.state.getRowHeight}\n//       //       />\n//       //     </div>\n//       //   ) : (\n//       //     <div id=\"loading-bar\">\n//       //       <RingLoader\n//       //         css={override}\n//       //         sizeUnit={\"px\"}\n//       //         size={50}\n//       //         color={\"#0000ff\"}\n//       //         loading={true}\n//       //       />\n//       //     </div>\n//       //   )}\n//       //\n//       // </div>\n//     );\n//   }\n// }\n\n// export default DepartmentTable;\n","import React, { Component } from \"react\";\nimport \"./DepartmentForm.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass DepartmentForm extends Component {\n  state = {\n    companyInfo: []\n  };\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.roleObj=[\"temp\"];}\n        // else{\n\n        // }\n        this.companyData = response.data;\n\n        // this.portalsData=this.portalsData.filter((data)=>data[\"Status\"]==1);\n\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add Department Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onDepartmentSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CompanyName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Department\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Department\"\n                  name=\"Department\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DepartmentForm;\n","import React, { Component } from \"react\";\n// import \"./DepartmentFormEdit.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass DepartmentForm extends Component {\n  state = {\n    DepartmentData: this.props.editData[\"DepartmentName\"],\n    companyInfo: []\n  };\n  onChange(e) {\n    this.setState({ DepartmentData: e.target.value });\n  }\n  companyData = [];\n  loadCompanyInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.roleObj=[\"temp\"];}\n        // else{\n\n        // }\n        this.companyData = response.data;\n\n        // this.portalsData=this.portalsData.filter((data)=>data[\"Status\"]==1);\n\n        this.setState({ companyInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCompanyInfo();\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Department Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onDepartmentEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.companyData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"company\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CompanyName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Department\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Department\"\n                  name=\"DepartmentName\"\n                  required\n                  value={this.state.DepartmentData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DepartmentForm;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DepartmentTable from \"./DepartmentTable.jsx\";\nimport DepartmentForm from \"./DepartmentForm.jsx\";\nimport DepartmentFormEdit from \"./DepartmentFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nconst Department = () => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleDepartmentSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      CompanyID: event.target[0].value,\n      DepartmentName: event.target[1].value\n    };\n\n    axios\n      .post(`${BASE_URL}/api/department`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddDepartment = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditDepartment = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleDepartmentEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    let body = {\n      CompanyID: newInfo.target[0].value,\n      DepartmentName: newInfo.target[1].value\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/department/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <DepartmentFormEdit\n            onDepartmentEditUpdate={handleDepartmentEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <DepartmentTable\n            onAddDepartment={handleAddDepartment}\n            onEditDepartment={handleEditDepartment}\n          />\n        )\n      ) : (\n        <DepartmentForm\n          onDepartmentSubmit={handleDepartmentSubmit}\n          onFormClose={handleFormClose}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Department;\n\n// import React, { Component } from \"react\";\n// import \"./Department.css\";\n// import axios from \"axios\";\n// import DepartmentTable from \"./DepartmentTable.jsx\";\n// import DepartmentForm from \"./DepartmentForm.jsx\";\n// import DepartmentFormEdit from \"./DepartmentFormEdit.jsx\";\n// import BASE_URL from \"../config/config.js\";\n\n// class Department extends Component {\n//   state = {\n//     table: true,\n//     editForm: false,\n//     editData: {}\n//   };\n\n//   render() {\n//     // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n//     return (\n//       //  <Router>\n//       <React.Fragment>\n//         {this.state.table ? (\n//           this.state.editForm ? (\n//             <DepartmentFormEdit\n//               onDepartmentEditUpdate={this.handleDepartmentEditUpdate}\n//               onFormEditClose={this.handleEditFormClose}\n//               editData={this.state.editData}\n//             />\n//           ) : (\n//             <DepartmentTable\n//               onAddDepartment={this.handleAddDepartment}\n//               onEditDepartment={this.handleEditDepartment}\n//             />\n//           )\n//         ) : (\n//           <DepartmentForm\n//             onDepartmentSubmit={this.handleDepartmentSubmit}\n//             onFormClose={this.handleFormClose}\n//           />\n//         )}\n\n//         {/* <div>debru</div> */}\n//         {/* <Route path=\"/admin/Department/table\" exact component={DepartmentTable} /> */}\n//         {/* <Route path=\"/admin/Department/form\" exact component={() => <DepartmentForm onDepartmentSubmit={this.handleDepartmentSubmit} />} /> */}\n\n//         {/* <DepartmentTable/> */}\n//       </React.Fragment>\n\n//       //  </Router>\n//     );\n//   }\n//   handleDepartmentSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(\"id\", event.target[0].value, event.target[1].value);\n//     this.setState({ table: true });\n\n//     let body = {\n//       CompanyID: event.target[0].value,\n//       DepartmentName: event.target[1].value\n//     };\n//     //  let body= \"CompanyID=\" + event.target[0].value + \"&Department=\" + event.target[1].value;\n//     //  let body= \"debru\";\n//     axios\n//       .post(`${BASE_URL}/api/department`, body, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then((res) => {\n//         this.setState({ table: false });\n//         this.setState({ table: true });\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//     // this.setState({ loading: true });\n//     // this.login(event.target[0].value, event.target[1].value);\n//     // event.target.reset();\n//   };\n//   handleAddDepartment = () => {\n//     console.log(\"clicked1\");\n//     this.setState({ table: false });\n//   };\n//   handleEditDepartment = (e) => {\n//     console.log(e);\n//     console.log(\"clicked6\");\n//     this.setState({ editForm: true });\n//     this.setState({ editData: e });\n//   };\n//   handleFormClose = () => {\n//     console.log(\"clicked1\");\n//     this.setState({ table: true });\n//   };\n//   handleEditFormClose = () => {\n//     console.log(\"clicked5\");\n//     this.setState({ editForm: false });\n//   };\n//   handleFormClose = () => {\n//     console.log(\"clicked1\");\n//     this.setState({ table: true });\n//   };\n//   handleDepartmentEditUpdate = (info, newInfo) => {\n//     newInfo.preventDefault();\n//     // this.setState({ table: true });\n//     let body = {\n//       // ...info,CompanyID:formData1,Department:formData2\n\n//       CompanyID: newInfo.target[0].value,\n//       DepartmentName: newInfo.target[1].value\n//     };\n//     console.log(\"update\", body);\n//     axios\n//       .put(`${BASE_URL}/api/department/` + info[\"_id\"], body, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then((res) => {\n//         // this.componentDidMount();\n//         this.setState({ table: false });\n//         this.setState({ table: true });\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n\n//     this.setState({ editForm: false });\n//   };\n// }\n\n// export default Department;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminPortalForm.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass AdminPortalTable extends Component {\n  state = {\n    portalData: [],\n    loading: true\n  };\n  portalObj = [];\n  rowDataT = [];\n\n  loadPortalData = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.portalObj = response.data;\n        // }\n        console.log(\"response\", response.data);\n        this.setState({ portalData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.portalObj.map((data) => {\n          let temp = {\n            data,\n            PortalName: data[\"PortalName\"],\n            Status: data[\"Status\"] == 1 ? \"enable\" : \"disable\"\n          };\n\n          this.rowDataT.push(temp);\n        });\n        this.setState({ rowData: this.rowDataT });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onPortalDelete = (e) => {\n    console.log(e);\n    if (\n      window.confirm(\n        \"Are you sure to delete this record,It Will Delete All Projects Related to This Portal? \"\n      ) == true\n    ) {\n      axios\n        .delete(\"http://localhost:4000/api/admin/portal/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadPortalData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onPortalDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditPortal(params.data.data)}\n      />\n    );\n  }\n\n  Status = (s) => {\n    if (s == 1) {\n      return \"enabled\";\n    } else {\n      return \"disabled\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"p-4\">\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">Portal Details</h3>\n            <p className=\"text-muted\">\n              You can create new bid and view all Bidding details of the\n              companies here !\n            </p>\n          </div>\n\n          <Button\n            className=\"my-auto\"\n            variant=\"primary\"\n            id=\"add-button\"\n            onClick={this.props.onAddPortal}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add new Details\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n\n        {!this.state.loading ? (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                >\n                  Portal\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                >\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.portalData.map((items, index) => (\n                <tr key={index}>\n                  <td>{items.PortalName}</td>\n                  <td>{items.Status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminPortalTable;\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n// import Form from 'react-bootstrap/Form'\nimport \"./AdminPortalForm.css\";\n\nclass AdminPortalForm extends Component {\n  state = {\n    status: \"\"\n  };\n  handleChange = (event) => {\n    this.setState({\n      status: event.target.value\n    });\n  };\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add Portal Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onPortalSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Portal\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Portal\"\n                  name=\"Portal\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label as=\"legend\" column sm={2}>\n                Status\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  inline\n                  type=\"radio\"\n                  label=\"enable\"\n                  value=\"1\"\n                  name=\"status\"\n                  onChange={this.props.onStatusChange}\n                  required\n                />\n                <Form.Check\n                  inline\n                  type=\"radio\"\n                  label=\"disable\"\n                  value=\"0\"\n                  name=\"status\"\n                  onChange={this.props.onStatusChange}\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminPortalForm;\n","import React, { Component } from \"react\";\n// import \"./AdminPortalForm.css\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form,Button,Col,Row } from \"react-bootstrap\";\n\nclass AdminPortalForm extends Component {\n  state = {\n    PortalData: this.props.editData[\"PortalName\"],\n    Status:this.props.editData[\"Status\"]\n  };\n  onChange(e) {\n    this.setState({ PortalData: e.target.value });\n  }\n  onStatusChange=(e)=>{\n    this.setState({ Status: e.target.value });\n    this.props.onStatusChange(e)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Portal Details</h2>\n     \n         <div id=\"role-form-outer-div\"><Form id=\"form\"  onSubmit={e =>\n                this.props.onPortalEditUpdate(\n                  this.props.editData,\n                  e.target[0].value\n                )\n              }>\n \n  <Form.Group as={Row}>\n    <Form.Label column sm={2}>\n    Portal\n    </Form.Label>\n    <Col sm={10}  className=\"form-input\">\n      <Form.Control type=\"Text\" placeholder=\"Portal\" name=\"PortalName\" required \n      value={this.state.PortalData}\n                  onChange={value => this.onChange(value)}/>\n    </Col>\n  </Form.Group>\n \n  <Form.Group as={Row}>\n      <Form.Label as=\"legend\" column sm={2}>\n        Status\n      </Form.Label>\n      <Col sm={10}>\n        <Form.Check\n        inline\n          type=\"radio\"\n          label=\"enable\"\n          value=\"1\"\n          name=\"status\"    \n        \n        onChange={this.onStatusChange}   \n        required\n        checked={this.state.Status==1}\n        />\n        <Form.Check\n        inline\n          type=\"radio\"\n          label=\"disable\"\n          value=\"0\"\n          name=\"status\" \n          onChange={this.onStatusChange}  \n          required      \n          checked={this.state.Status==0}\n        />\n      </Col>\n    </Form.Group>\n\n  <Form.Group as={Row} id=\"form-submit-button\">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type=\"submit\">Update</Button>\n    </Col>\n  </Form.Group>\n  <Form.Group as={Row} id=\"form-cancel-button\">\n    <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n      <Button type=\"reset\" onClick={this.props.onFormEditClose}>cancel</Button>\n    </Col>\n  </Form.Group>\n</Form></div>\n      </div>\n    );\n  }\n}\n\nexport default AdminPortalForm;\n","import React, { Component } from \"react\";\nimport \"./AdminPortal.css\";\nimport axios from \"axios\";\nimport AdminPortalTable from \"./AdminPortalTable.jsx\";\nimport AdminPortalForm from \"./AdminPortalForm.jsx\";\nimport AdminPortalFormEdit from \"./AdminPortalFormEdit.jsx\";\n\n\nclass AdminPortal extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {},\n    addFormStatus: \"\",\n    editFormStatus: \"\"\n  };\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      //  <Router>\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <AdminPortalFormEdit\n              onPortalEditUpdate={this.handlePortalEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n              onStatusChange={this.handleEditFormStatusChange}\n            />\n          ) : (\n            <AdminPortalTable\n              onAddPortal={this.handleAddPortal}\n              onEditPortal={this.handleEditPortal}\n            />\n          )\n        ) : (\n          <AdminPortalForm\n            onPortalSubmit={this.handlePortalSubmit}\n            onFormClose={this.handleFormClose}\n            onStatusChange={this.handleAddFormStatusChange}\n          />\n        )}\n\n        {/* <div>debru</div> */}\n        {/* <Route path=\"/admin/Portal/table\" exact component={AdminPortalTable} /> */}\n        {/* <Route path=\"/admin/Portal/form\" exact component={() => <AdminPortalForm onPortalSubmit={this.handlePortalSubmit} />} /> */}\n\n        {/* <AdminPortalTable/> */}\n      </React.Fragment>\n\n      //  </Router>\n    );\n  }\n  handlePortalSubmit = (event) => {\n    event.preventDefault();\n    console.log(\n      \"portal\",\n      event.target[0].value,\n      event.target[1].value,\n      event.target[2].value\n    );\n    console.log(\"portal status\", this.state.addFormStatus);\n    this.setState({ table: true });\n\n    let body = {\n      PortalName: event.target[0].value,\n      Status: this.state.addFormStatus\n    };\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&Portal=\" + event.target[1].value;\n    //  let body= \"debru\";\n    axios\n      .post(\"http://localhost:4000/api/admin/portal\", body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // this.setState({ loading: true });\n    // this.login(event.target[0].value, event.target[1].value);\n    // event.target.reset();\n  };\n  handleAddPortal = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditPortal = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n    this.setState({ editFormStatus: e[\"Status\"] });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleAddFormStatusChange = (e) => {\n    // console.log(e.currentTarget.value);\n    this.setState({\n      addFormStatus: e.currentTarget.value\n    });\n  };\n  handleEditFormStatusChange = (e) => {\n    // console.log(e.currentTarget.value);\n    this.setState({\n      editFormStatus: e.currentTarget.value\n    });\n  };\n  handlePortalEditUpdate = (info, formData1) => {\n    // this.setState({ table: true });\n    let body = {\n      // ...info,CompanyID:formData1,Portal:formData2\n      _id: info[\"_id\"],\n      PortalName: formData1,\n      Status: this.state.editFormStatus,\n      ID: info[\"ID\"]\n    };\n    console.log(\"update\", body);\n    axios\n      .put(\"http://localhost:4000/api/admin/portal/\" + info[\"ID\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default AdminPortal;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBidTable.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass AdminProjectBidTable extends Component {\n  state = {\n    projectBidData: [],\n    loading: true,\n    rowData: [],\n    sortColumn: null,\n    sortDirection: \"asc\",\n    error: null // New state for handling errors\n  };\n  loadProjectBidData = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/project-bid\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const projectBidData = response.data;\n        this.setState({ projectBidData, loading: false, error: null });\n\n        const rowData = projectBidData.map((data) => ({\n          data,\n          ProjectTitle: data[\"ProjectTitle\"],\n          PortalName: data[\"portals\"][0][\"PortalName\"],\n          ProjectURL: data[\"ProjectURL\"],\n          EstimatedTime: data[\"EstimatedTime\"],\n          EstimatedCost: data[\"EstimatedCost\"],\n          Remark: data[\"Remark\"]\n        }));\n\n        this.setState({ rowData });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ loading: false, error: \"Error loading data.\" });\n      });\n  };\n\n  onProjectBidDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\n      axios\n        .delete(\"http://localhost:4000/api/admin/project-bid/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadProjectBidData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onProjectBidDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditProjectBid(params.data.data)}\n      />\n    );\n  }\n\n  renderSortIcon = (field) => {\n    const { sortColumn, sortDirection } = this.state;\n    if (sortColumn === field) {\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  sortData = (columnName) => {\n    const { rowData, sortColumn, sortDirection } = this.state;\n    let newSortDirection = \"asc\";\n\n    if (sortColumn === columnName && sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n\n    const sortedData = [...rowData];\n\n    sortedData.sort((a, b) => {\n      const valueA = String(a[columnName]).toLowerCase(); // Convert to lowercase string\n      const valueB = String(b[columnName]).toLowerCase(); // Convert to lowercase string\n\n      let comparison = 0;\n\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n\n      return sortDirection === \"desc\" ? comparison * -1 : comparison;\n    });\n\n    this.setState({\n      rowData: sortedData,\n      sortColumn: columnName,\n      sortDirection: newSortDirection\n    });\n  };\n  render() {\n    return (\n      <div className=\"p-4\" id=\"table-outer-div-scroll\">\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">Bidding Details</h3>\n            <p className=\"text-muted\">\n              You can create new bid and view all Bidding details of the\n              companies here !\n            </p>\n          </div>\n\n          <Button\n            className=\"my-auto\"\n            variant=\"primary\"\n            id=\"add-button\"\n            onClick={this.props.onAddProjectBid}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add new Details\n          </Button>\n        </div>\n\n        <div id=\"clear-both\" />\n\n        {!this.state.loading ? (\n          <div>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"ProjectTitle\")}\n                  >\n                    Project Title {this.renderSortIcon(\"ProjectTitle\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"PortalName\")}\n                  >\n                    Portal {this.renderSortIcon(\"PortalName\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"ProjectURL\")}\n                  >\n                    Project URL {this.renderSortIcon(\"ProjectURL\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"EstimatedTime\")}\n                  >\n                    Estimate Time {this.renderSortIcon(\"EstimatedTime\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"EstimatedCost\")}\n                  >\n                    Estimate Cost {this.renderSortIcon(\"EstimatedCost\")}\n                  </th>\n                  <th\n                    style={{\n                      background: \"linear-gradient(#1D267D, #2F58CD)\",\n                      color: \"white\"\n                    }}\n                    className=\"py-1\"\n                    onClick={() => this.sortData(\"Remark\")}\n                  >\n                    Remark {this.renderSortIcon(\"Remark\")}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.projectBidData.map((items, index) => (\n                  <tr key={index}>\n                    <td className=\"text-uppercase\">{items.ProjectTitle}</td>\n                    <td>{items.portals[0].PortalName}</td>\n                    <td>\n                      <a href={items.ProjectURL}>{items.ProjectURL}</a>\n                    </td>\n                    <td>{items.EstimatedTime}</td>\n                    <td>{items.EstimatedCost}</td>\n                    <td>{items.Remark}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminProjectBidTable;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBidForm.css\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass AdminProjectBidForm extends Component {\n  state = {\n    status: \"\",\n    portalsInfo: []\n  };\n  portalsData = [];\n  handleChange = (event) => {\n    this.setState({\n      status: event.target.value\n    });\n  };\n  loadPortalsInfo = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // i\n        this.portalsData = response.data;\n\n        this.portalsData = this.portalsData.filter(\n          (data) => data[\"Status\"] == 1\n        );\n\n        this.setState({ portalsInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.loadPortalsInfo();\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h2 id=\"role-form-title\">Add Project Bid Details</h2>\n        {/* <div id=\"role-form-outer-div\">\n          <div id=\"role-form-inner-div\"> */}\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onProjectBidSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Title\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project Title\"\n                  name=\"ProjectTitle\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project URL\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project URL\"\n                  name=\"ProjectURL\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Description\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"textarea\" rows=\"3\" required />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Portals\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"CompanyID\" required>\n                  {this.portalsData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"PortalName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Time\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Time\"\n                  name=\"EstimatedTime\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Cost\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Cost\"\n                  name=\"EstimatedCost\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Resource\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option value=\"1\">Resource1</option>\n                  <option value=\"2\">Resource2</option>\n                  <option value=\"3\">Resource3</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Status\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option value=\"1\">Open</option>\n                  <option value=\"1\">Close</option>\n                  <option value=\"1\">Cancel</option>\n                  <option value=\"1\">Award</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Remark\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"textarea\" rows=\"3\" required />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AdminProjectBidForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBidFormEdit.css\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass AdminProjectBidFormEdit extends Component {\n  state = {\n    status: \"\",\n    portalsInfo: [],\n    ProjectTitleData: this.props.editData[\"ProjectTitle\"],\n    ProjectURLData: this.props.editData[\"ProjectURL\"],\n    ProjectDescriptionData: this.props.editData[\"ProjectDesc\"],\n    EstimatedTimeData: this.props.editData[\"EstimatedTime\"],\n\n    RemarkData: this.props.editData[\"Remark\"]\n  };\n  onProjectTitleDataChange(e) {\n    this.setState({ ProjectTitleData: e.target.value });\n  }\n  onProjectURLDataChange(e) {\n    this.setState({ ProjectURLData: e.target.value });\n  }\n  onProjectDescriptionDataChange(e) {\n    this.setState({ ProjectDescriptionData: e.target.value });\n  }\n  onPortalsDataChange(e) {\n    this.setState({ PortalsData: e.target.value });\n  }\n  onEstimatedTimeDataChange(e) {\n    this.setState({ EstimatedTimeData: e.target.value });\n  }\n  onEstimatedCostDataChange(e) {\n    this.setState({ EstimatedCostData: e.target.value });\n  }\n  onResourceDataChange(e) {\n    this.setState({ ResourceData: e.target.value });\n  }\n  onStatusDataChange(e) {\n    this.setState({ StatusData: e.target.value });\n  }\n  onRemarkDataChange(e) {\n    this.setState({ RemarkData: e.target.value });\n  }\n\n  portalsData = [];\n  handleChange = (event) => {\n    this.setState({\n      status: event.target.value\n    });\n  };\n  loadPortalsInfo = () => {\n    axios\n      .get(\"http://localhost:4000/api/admin/portal\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.portalsData = response.data;\n\n        this.portalsData = this.portalsData.filter(\n          (data) => data[\"Status\"] == 1\n        );\n\n        this.setState({ portalsInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentDidMount() {\n    this.loadPortalsInfo();\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h2 id=\"role-form-title\">Edit Project Bid Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onProjectBidEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Title\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project Title\"\n                  name=\"ProjectTitle\"\n                  required\n                  value={this.state.ProjectTitleData}\n                  onChange={(value) => this.onProjectTitleDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project URL\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Project URL\"\n                  name=\"ProjectURL\"\n                  required\n                  value={this.state.ProjectURLData}\n                  onChange={(value) => this.onProjectURLDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Project Description\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  value={this.state.ProjectDescriptionData}\n                  onChange={(value) =>\n                    this.onProjectDescriptionDataChange(value)\n                  }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Portals\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"CompanyID\" required>\n                  {this.portalsData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"portals\"][0][\"ID\"] == data[\"ID\"]\n                      }\n                    >\n                      {data[\"PortalName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Time\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Time\"\n                  name=\"EstimatedTime\"\n                  required\n                  value={this.state.EstimatedTimeData}\n                  onChange={(value) => this.onEstimatedTimeDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Estimated Cost\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Estimated Cost\"\n                  name=\"EstimatedCost\"\n                  required\n                  value={this.state.EstimatedCostData}\n                  onChange={(value) => this.onEstimatedCostDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Resource\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option\n                    value=\"1\"\n                    selected={this.props.editData[\"ResourceID\"] == 1}\n                  >\n                    Resource1\n                  </option>\n                  <option\n                    value=\"2\"\n                    selected={this.props.editData[\"ResourceID\"] == 2}\n                  >\n                    Resource2\n                  </option>\n                  <option\n                    value=\"3\"\n                    selected={this.props.editData[\"ResourceID\"] == 3}\n                  >\n                    Resource3\n                  </option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Status\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option\n                    value=\"1\"\n                    selected={this.props.editData[\"Status\"] == 1}\n                  >\n                    Open\n                  </option>\n                  <option\n                    value=\"2\"\n                    selected={this.props.editData[\"Status\"] == 2}\n                  >\n                    Close\n                  </option>\n                  <option\n                    value=\"3\"\n                    selected={this.props.editData[\"Status\"] == 3}\n                  >\n                    Cancel\n                  </option>\n                  <option\n                    value=\"4\"\n                    selected={this.props.editData[\"Status\"] == 4}\n                  >\n                    Award\n                  </option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Remark\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  value={this.state.RemarkData}\n                  onChange={(value) => this.onRemarkDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n        {/* </div>\n        </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AdminProjectBidFormEdit;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./AdminProjectBid.css\";\n\nimport AdminProjectBidTable from \"./AdminProjectBidTable.jsx\";\nimport AdminProjectBidForm from \"./AdminProjectBidForm.jsx\";\nimport AdminProjectBidFormEdit from \"./AdminProjectBidFormEdit.jsx\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n// function AdminProjectBidTableF() {\n//   return <AdminProjectBidTable/>;\n// }\n// function AdminProjectBidFormF() {\n//   return  <AdminProjectBidForm onProjectBidSubmit={handleProjectBidSubmit}/>;\n// }\n\n// function handleProjectBidSubmit(e) {\n//   e.preventDefault();\n//   console.log(e);\n\n// }\n\nclass AdminProjectBid extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {}\n  };\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      //  <Router>\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <AdminProjectBidFormEdit\n              onProjectBidEditUpdate={this.handleProjectBidEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n            />\n          ) : (\n            <AdminProjectBidTable\n              onAddProjectBid={this.handleAddProjectBid}\n              onEditProjectBid={this.handleEditProjectBid}\n            />\n          )\n        ) : (\n          <AdminProjectBidForm\n            onProjectBidSubmit={this.handleProjectBidSubmit}\n            onFormClose={this.handleFormClose}\n          />\n        )}\n\n        {/* <div>debrup</div> */}\n        {/* <Route path=\"/admin/ProjectBid/table\" exact component={AdminProjectBidTable} /> */}\n        {/* <Route path=\"/admin/ProjectBid/form\" exact component={() => <AdminProjectBidForm onProjectBidSubmit={this.handleProjectBidSubmit} />} /> */}\n\n        {/* <AdminProjectBidTable/> */}\n        </React.Fragment>\n\n      //  </Router>\n    );\n  }\n  handleProjectBidSubmit = event => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    this.setState({ table: true });\n\n    let body = {\n      ProjectTitle: event.target[0].value,\n      ProjectURL: event.target[1].value,\n      ProjectDesc:event.target[2].value,\n      Portal_ID:event.target[3].value,\n      EstimatedTime:event.target[4].value,\n      EstimatedCost:event.target[5].value,\n      ResourceID:event.target[6].value,\n      Status:event.target[7].value,\n      Remark:event.target[8].value,\n\n    \n    \n    };\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&ProjectBid=\" + event.target[1].value;\n    //  let body= \"\";\n    axios\n      .post(\"http://localhost:4000/api/admin/project-bid\", body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then(res => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    // this.setState({ loading: true });\n    // this.login(event.target[0].value, event.target[1].value);\n    // event.target.reset();\n  };\n  handleAddProjectBid = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditProjectBid = e => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleProjectBidEditUpdate = (info,editInfo) => {\n    // this.setState({ table: true });\n    let body = {\n      // ...info,CompanyID:formData1,ProjectBid:formData2\n      // _id: info[\"_id\"],\n      ProjectTitle: editInfo.target[0].value,\n      ProjectURL: editInfo.target[1].value,\n      ProjectDesc:editInfo.target[2].value,\n      Portal_ID:editInfo.target[3].value,\n      EstimatedTime:editInfo.target[4].value,\n      EstimatedCost:editInfo.target[5].value,\n      ResourceID:editInfo.target[6].value,\n      Status:editInfo.target[7].value,\n      Remark:editInfo.target[8].value,\n    };\n    console.log(\"update\", body);\n    axios\n      .put(\"http://localhost:4000/api/admin/project-bid/\" + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then(res => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default AdminProjectBid;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport \"./SalaryTable.css\";\nimport { LuSearch } from \"react-icons/lu\";\nimport { GrFormPrevious } from \"react-icons/gr\";\nimport { RxCaretSort } from \"react-icons/rx\";\nimport { MdNearbyError } from \"react-icons/md\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst AdminSalaryTable = (props) => {\n  const [salaryData, setSalaryData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [sortField, setSortField] = useState(null);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(8);\n\n  const loadSalaryData = () => {\n    axios\n      .get(`${BASE_URL}/api/salary`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const salaryObj = response.data;\n        console.log(\"response\", response.data);\n        setSalaryData(response.data);\n        setLoading(false);\n\n        const rowDataT = salaryObj.map((data) => ({\n          data,\n          EmployeeName: `${data[\"FirstName\"]} ${data[\"LastName\"]}`,\n          PositionName: data[\"position\"][0][\"PositionName\"],\n          BasicSalary: data[\"salary\"][0][\"BasicSalary\"],\n          BankName: data[\"salary\"][0][\"BankName\"],\n          AccountNo: data[\"salary\"][0][\"AccountNo\"],\n          AccountHolderName: data[\"salary\"][0][\"AccountHolderName\"],\n          IFSCcode: data[\"salary\"][0][\"IFSCcode\"],\n          TaxDeduction: data[\"salary\"][0][\"TaxDeduction\"]\n        }));\n\n        setSalaryData(rowDataT);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onSalaryDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/salary/${e}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadSalaryData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadSalaryData();\n  }, []);\n\n  const handleSort = (field) => {\n    setSortField(field);\n    setSortOrder((prevOrder) =>\n      sortField === field ? (prevOrder === \"asc\" ? \"desc\" : \"asc\") : \"asc\"\n    );\n  };\n\n  const handleSearchInputChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const renderSortIcon = (field) => {\n    if (sortField === field) {\n      return sortOrder === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  const sortedAndFilteredData = salaryData\n    .slice()\n    .filter((item) =>\n      item.EmployeeName.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .sort((a, b) => {\n      if (sortField) {\n        const aValue = a[sortField];\n        const bValue = b[sortField];\n\n        if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n          return sortOrder === \"asc\"\n            ? aValue.localeCompare(bValue)\n            : bValue.localeCompare(aValue);\n        } else {\n          return sortOrder === \"asc\" ? aValue - bValue : bValue - aValue;\n        }\n      }\n      return 0;\n    });\n\n  const handlePaginationNext = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  const handlePaginationPrev = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n  };\n\n  // Calculate index of the last and first item for pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = sortedAndFilteredData.slice(\n    indexOfFirstItem,\n    indexOfLastItem\n  );\n\n  // Generate array of page numbers\n  const pageNumbers = [];\n  for (\n    let i = 1;\n    i <= Math.ceil(sortedAndFilteredData.length / itemsPerPage);\n    i++\n  ) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div>\n      <div className=\" row mx-auto bg-light shadow-sm mb-3 py-1\">\n        <div className=\" my-auto d-flex justify-content-between\">\n          <h5 className=\"fw-bold my-auto text-uppercase text-muted\">\n            Salary Details\n          </h5>\n\n          <div className=\"d-flex gap-2 justify-content-between py-1\">\n            <Button\n              className=\"my-auto d-flex gap-1 my-auto\"\n              id=\"add-button\"\n              onClick={props.onAddSalary}\n            >\n              + <span className=\"d-none d-sm-block\">Add Salary</span>\n            </Button>\n            <div className=\"searchholder p-0 d-flex  position-relative\">\n              <input\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  paddingLeft: \"15%\"\n                }}\n                className=\"form-control pr-0 border border-primary border-2\"\n                type=\"text\"\n                placeholder=\"Search by name\"\n                value={searchQuery}\n                onChange={handleSearchInputChange}\n              />\n              <LuSearch\n                style={{ position: \"absolute\", top: \"30%\", left: \"5%\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div className=\"row m-auto\">\n          <div style={{ height: \"75vh\", overflow: \"auto\", width: \"100%\" }}>\n            <div style={{ height: \"95%\", overflow: \"scroll\" }}>\n              {\" \"}\n              <table className=\"table\">\n                <thead>\n                  <tr style={{ position: \"sticky\", top: \"0\", zIndex: \"3\" }}>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      onClick={() => handleSort(\"EmployeeName\")}\n                    >\n                      <RxCaretSort />\n                      Name {renderSortIcon(\"EmployeeName\")}\n                    </th>\n\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      // onClick={() => handleSort(\"BasicSalary\")}\n                    >\n                      Designation {renderSortIcon(\"BasicSalary\")}\n                    </th>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      onClick={() => handleSort(\"BasicSalary\")}\n                    >\n                      <RxCaretSort />\n                      Salary {renderSortIcon(\"BasicSalary\")}\n                    </th>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      // onClick={() => handleSort(\"BankName\")}\n                    >\n                      Bank Name {renderSortIcon(\"BankName\")}\n                    </th>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      // onClick={() => handleSort(\"AccountNo\")}\n                    >\n                      Account No {renderSortIcon(\"AccountNo\")}\n                    </th>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      // onClick={() => handleSort(\"AccountHolderName\")}\n                    >\n                      Account Holder Name {renderSortIcon(\"AccountHolderName\")}\n                    </th>\n\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      // onClick={() => handleSort(\"IFSCcode\")}\n                    >\n                      IFSC Code {renderSortIcon(\"IFSCcode\")}\n                    </th>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\",\n                        cursor: \"pointer\",\n                        whiteSpace: \"pre\"\n                      }}\n                      className=\"py-2\"\n                      // onClick={() => handleSort(\"TaxDeduction\")}\n                    >\n                      Tax Deduction {renderSortIcon(\"TaxDeduction\")}\n                    </th>\n                    <th\n                      style={{\n                        background: \"var(--primaryDashColorDark)\",\n                        color: \"var(--primaryDashMenuColor)\"\n                      }}\n                      className=\"py-2 text-center\"\n                    >\n                      Action\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {currentItems.length > 0 ? (\n                    currentItems.map((item, index) => (\n                      <tr key={index}>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"text-capitalize \"\n                        >\n                          <div className=\"d-flex flex-nowrap gap-2 \">\n                            <div style={{ height: \"40px\", width: \"40px\" }}>\n                              <img\n                                style={{\n                                  height: \"100%\",\n                                  width: \"100%\",\n                                  borderRadius: \"50%\",\n                                  overflow: \"hidden\",\n                                  objectFit: \"cover\"\n                                }}\n                                src={\n                                  item?.data?.profile?.image_url\n                                    ? item?.data?.profile?.image_url\n                                    : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                                }\n                                alt=\"\"\n                              />\n                            </div>\n                            <span className=\"my-auto fw-bold text-muted\">\n                              {\" \"}\n                              {item.EmployeeName}\n                            </span>\n                          </div>\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                        >\n                          {item.PositionName}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"text-primary fw-bold\"\n                        >\n                          {item.BasicSalary}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"text-uppercase  \"\n                        >\n                          {item.BankName}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"text-uppercase \"\n                        >\n                          {item.AccountNo}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"text-capitalize \"\n                        >\n                          {item.AccountHolderName}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"text-uppercase \"\n                        >\n                          {item.IFSCcode}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"\"\n                        >\n                          {item.TaxDeduction}\n                        </td>\n                        <td\n                          style={{ verticalAlign: \"middle\", whiteSpace: \"pre\" }}\n                          className=\"\"\n                        >\n                          <div className=\"d-flex  gap-3 justify-content-around\">\n                            <FontAwesomeIcon\n                              className=\"text-danger\"\n                              icon={faTrash}\n                              onClick={() => onSalaryDelete(item.data._id)}\n                            />\n                            <FontAwesomeIcon\n                              className=\"text-primary\"\n                              icon={faEdit}\n                              onClick={() => props.onEditSalary(item.data)}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <div\n                      style={{\n                        height: \"30vh\",\n                        width: \"94%\",\n                        position: \"absolute\"\n                      }}\n                      className=\"d-flex flex-column justify-content-center align-items-center gap-1\"\n                    >\n                      <span className=\"fw-bolder \" style={{ fontSize: \"2rem\" }}>\n                        <MdNearbyError\n                          className=\"text-danger\"\n                          style={{ fontSize: \"2.3rem\" }}\n                        />{\" \"}\n                        OOPS!\n                      </span>\n                      <h6 className=\"p-0 m-0\">Record not found.</h6>\n                    </div>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div\n            style={{ position: \"stickey\", bottom: \"1%\" }}\n            className=\"container-fluid bg-light p-2 d-flex justify-content-between\"\n          >\n            <Button\n              className=\"d-flex gap-2\"\n              onClick={handlePaginationPrev}\n              disabled={currentPage === 1}\n            >\n              <GrFormPrevious className=\"my-auto \" /> Previous\n            </Button>\n            <div className=\"pagination d-flex flex-nowrap gap-2\">\n              {pageNumbers.map((number) => (\n                <Button\n                  key={number}\n                  style={{\n                    backgroundColor:\n                      currentPage === number ? \"active\" : \"white\",\n                    border: \"none\",\n                    color: \"gray\",\n                    boxShadow: \"0 0 5px 1px rgba(226, 223, 223,1)\"\n                  }}\n                  onClick={() => setCurrentPage(number)}\n                  className={currentPage === number ? \"active\" : \"\"}\n                >\n                  {number}\n                </Button>\n              ))}\n            </div>\n            <Button\n              onClick={handlePaginationNext}\n              className=\"d-flex gap-3\"\n              disabled={indexOfLastItem >= sortedAndFilteredData.length}\n            >\n              <span className=\"\">Next</span>{\" \"}\n              <GrFormPrevious\n                className=\"my-auto\"\n                style={{ rotate: \"180deg\" }}\n              />\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminSalaryTable;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst SalaryForm = (props) => {\n  const [employeeData, setEmployeeData] = useState([]);\n\n  useEffect(() => {\n    const loadEmployeeInfo = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/api/employee`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        });\n        setEmployeeData(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    loadEmployeeInfo();\n  }, []); // empty dependency array to mimic componentDidMount behavior\n\n  return (\n    <div className=\"registration-page py-4 \">\n      <h2 className=\"text-center text-black text-uppercase fw-bold my-4\">\n        Add Salary Details\n      </h2>\n      {/* <div id=\"role-form-outer-div\"> */}\n\n      <Form\n        id=\"form\"\n        onSubmit={props.onSalarySubmit}\n        className=\"container d-flex flex-column m-10 empForm\"\n      >\n        <div className=\"d-flex w-100 flex-column gap-6 rounded \">\n          <div style={{ padding: \"80px\" }} className=\"row row-gap-3 \">\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Select Employee\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {employeeData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"FirstName\"] +\n                        \" \" +\n                        data[\"MiddleName\"] +\n                        \" \" +\n                        data[\"LastName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Basic Salary\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Basic Salary\"\n                  required\n                />\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Bank Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"text\" placeholder=\"Bank Name\" required />\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Account No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"text\" placeholder=\"Account No\" required />\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Re-Enter Account No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Re-Enter Account No\"\n                  required\n                />\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Account Holder Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Account Holder Name\"\n                  required\n                />\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                IFSC Code\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"text\" placeholder=\"IFSC Code\" required />\n              </Col>\n            </div>\n\n            <div className=\"form-group col-12 col-md-6\">\n              <Form.Label column sm={6}>\n                Tax Deduction\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Basic Salary\"\n                  required\n                />\n              </Col>\n            </div>\n\n            <div\n              className=\"form-group col-12 d-flex  gap-5\"\n              id=\"form-submit-button\"\n            >\n              <Button className=\"mx-3\" type=\"submit\">\n                Submit\n              </Button>\n              <Button className=\"mx-3\" type=\"reset\" onClick={props.onFormClose}>\n                cancel\n              </Button>\n            </div>\n            <div\n              className=\"form-group col-12 col-md-6\"\n              id=\"form-cancel-button\"\n            ></div>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default SalaryForm;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst SalaryFormEdit = (props) => {\n  const [salaryData, setSalaryData] = useState([]);\n  const [BasicSalaryData, setBasicSalaryData] = useState(\n    props.editData[\"salary\"][0][\"BasicSalary\"]\n  );\n  const [BankNameData, setBankNameData] = useState(\n    props.editData[\"salary\"][0][\"BankName\"]\n  );\n  const [AccountNoData, setAccountNoData] = useState(\n    props.editData[\"salary\"][0][\"AccountNo\"]\n  );\n  const [ReAccountNoData, setReAccountNoData] = useState(\n    props.editData[\"salary\"][0][\"AccountNo\"]\n  );\n  const [AccountHolderNameData, setAccountHolderNameData] = useState(\n    props.editData[\"salary\"][0][\"AccountHolderName\"]\n  );\n  const [IFSCcodeData, setIFSCcodeData] = useState(\n    props.editData[\"salary\"][0][\"IFSCcode\"]\n  );\n  const [TaxDeductionData, setTaxDeductionData] = useState(\n    props.editData[\"salary\"][0][\"TaxDeduction\"]\n  );\n\n  const onBasicSalaryDataChange = (e) => {\n    setBasicSalaryData(e.target.value);\n  };\n\n  const onBankNameDataChange = (e) => {\n    setBankNameData(e.target.value);\n  };\n\n  const onAccountNoDataChange = (e) => {\n    setAccountNoData(e.target.value);\n  };\n\n  const onReAccountNoDataChange = (e) => {\n    setReAccountNoData(e.target.value);\n  };\n\n  const onAccountHolderNameDataChange = (e) => {\n    setAccountHolderNameData(e.target.value);\n  };\n\n  const onIFSCcodeDataChange = (e) => {\n    setIFSCcodeData(e.target.value);\n  };\n\n  const onTaxDeductionDataChange = (e) => {\n    setTaxDeductionData(e.target.value);\n  };\n\n  const loadSalaryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/salary`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setSalaryData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadSalaryInfo();\n  }, []);\n\n  return (\n    <React.Fragment\n      style={{ height: \"100vh\", width: \"100%\" }}\n      className=\"registration-page py-4\"\n    >\n      {\" \"}\n      <h2\n        id=\"role-form-title\"\n        className=\"text-center text-black text-uppercase fw-bold my-4\"\n      >\n        Edit Salary Details\n      </h2>\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) => props.onSalaryEditUpdate(props.editData, e)}\n        >\n          <div className=\"d-flex w-100 flex-column gap-6 rounded \">\n            <div style={{ padding: \"80px\" }} className=\"row row-gap-3 \">\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Select Salary\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" required disabled>\n                    {salaryData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={props.editData[\"_id\"] === data[\"_id\"]}\n                        disabled\n                      >\n                        {`${data[\"FirstName\"]} ${data[\"MiddleName\"]} ${data[\"LastName\"]}`}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Basic Salary\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Basic Salary\"\n                    required\n                    value={BasicSalaryData}\n                    onChange={onBasicSalaryDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Bank Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Bank Name\"\n                    required\n                    value={BankNameData}\n                    onChange={onBankNameDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Account No\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Account No\"\n                    required\n                    value={AccountNoData}\n                    onChange={onAccountNoDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Re-Enter Account No\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Re-Enter Account No\"\n                    required\n                    value={ReAccountNoData}\n                    onChange={onReAccountNoDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Account Holder Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Account Holder Name\"\n                    required\n                    value={AccountHolderNameData}\n                    onChange={onAccountHolderNameDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  IFSC Code\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"IFSC Code\"\n                    required\n                    value={IFSCcodeData}\n                    onChange={onIFSCcodeDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Tax Deduction\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"Basic Salary\"\n                    required\n                    value={TaxDeductionData}\n                    onChange={onTaxDeductionDataChange}\n                  />\n                </Col>\n              </div>\n\n              <div\n                className=\"form-group col-12 d-flex  gap-5\"\n                id=\"form-submit-button\"\n              >\n                <Button className=\"mx-3\" type=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  className=\"mx-3\"\n                  type=\"reset\"\n                  onClick={props.onFormClose}\n                >\n                  cancel\n                </Button>\n              </div>\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-cancel-button\"\n              ></div>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SalaryFormEdit;\n\n// import React, { Component } from \"react\";\n// // import \"./SalaryFormEdit.css\";\n// import axios from \"axios\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n\n// class SalaryFormEdit extends Component {\n//   state = {\n//     salaryData: [],\n\n//     // status: '',\n//     // portalsInfo:[],\n//     // SalaryTitleData:this.props.editData[\"SalaryTitle\"],\n//     // SalaryURLData:this.props.editData[\"SalaryURL\"],\n//     // SalaryDescriptionData:this.props.editData[\"SalaryDesc\"],\n//     // EstimatedTimeData:this.props.editData[\"EstimatedTime\"],\n//     // RemarkData:this.props.editData[\"Remark\"],\n\n//     BasicSalaryData: this.props.editData[\"salary\"][0][\"BasicSalary\"],\n//     BankNameData: this.props.editData[\"salary\"][0][\"BankName\"],\n//     AccountNoData: this.props.editData[\"salary\"][0][\"AccountNo\"],\n//     ReAccountNoData: this.props.editData[\"salary\"][0][\"AccountNo\"],\n//     AccountHolderNameData:\n//       this.props.editData[\"salary\"][0][\"AccountHolderName\"],\n//     IFSCcodeData: this.props.editData[\"salary\"][0][\"IFSCcode\"],\n//     TaxDeductionData: this.props.editData[\"salary\"][0][\"TaxDeduction\"],\n\n//     // value={this.state.SalaryTitleData}\n//     // onChange={value => this.onSalaryTitleDataChange(value)}\n//   };\n//   onBasicSalaryDataChange(e) {\n//     this.setState({ BasicSalaryData: e.target.value });\n//   }\n//   onBankNameDataChange(e) {\n//     this.setState({ BankNameData: e.target.value });\n//   }\n//   onAccountNoDataChange(e) {\n//     this.setState({ AccountNoData: e.target.value });\n//   }\n//   onReAccountNoDataChange(e) {\n//     this.setState({ ReAccountNoData: e.target.value });\n//   }\n//   onAccountHolderNameDataChange(e) {\n//     this.setState({ AccountHolderNameData: e.target.value });\n//   }\n//   onIFSCcodeDataChange(e) {\n//     this.setState({ IFSCcodeData: e.target.value });\n//   }\n//   onTaxDeductionDataChange(e) {\n//     this.setState({ TaxDeductionData: e.target.value });\n//   }\n\n//   loadSalaryInfo = () => {\n//     axios\n//       .get(\"${BASE_URL}/api/salary\", {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\",\n//         },\n//       })\n//       .then((response) => {\n//         this.setState({ salaryData: response.data });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n\n//   componentWillMount() {\n//     this.loadSalaryInfo();\n//     // this.loadPositionInfo();\n//     // this.loadDepartmentInfo();\n//   }\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <h2 id=\"role-form-title\">\n//           Edit Salary Details\n//           {/* {JSON.stringify(this.props.editData ) } */}\n//         </h2>\n//         <div id=\"role-form-outer-div\">\n//           <Form\n//             id=\"form\"\n//             onSubmit={(e) =>\n//               this.props.onSalaryEditUpdate(this.props.editData, e)\n//             }\n//           >\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Select Salary\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control as=\"select\" required>\n//                   {/* <option value=\"\" disabled selected>Select your option</option> */}\n//                   {this.state.salaryData.map((data, index) => (\n//                     <option\n//                       key={index}\n//                       value={data[\"_id\"]}\n//                       selected={this.props.editData[\"_id\"] == data[\"_id\"]}\n//                       disabled\n//                     >\n//                       {data[\"FirstName\"] +\n//                         \" \" +\n//                         data[\"MiddleName\"] +\n//                         \" \" +\n//                         data[\"LastName\"]}\n//                     </option>\n//                   ))}\n//                 </Form.Control>\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Basic Salary\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"number\"\n//                   placeholder=\"Basic Salary\"\n//                   required\n//                   value={this.state.BasicSalaryData}\n//                   onChange={(value) => this.onBasicSalaryDataChange(value)}\n//                 />\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Bank Name\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Bank Name\"\n//                   required\n//                   value={this.state.BankNameData}\n//                   onChange={(value) => this.onBankNameDataChange(value)}\n//                 />\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Account No\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Account No\"\n//                   required\n//                   value={this.state.AccountNoData}\n//                   onChange={(value) => this.onAccountNoDataChange(value)}\n//                 />\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Re-Enter Account No\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Re-Enter Account No\"\n//                   required\n//                   value={this.state.ReAccountNoData}\n//                   onChange={(value) => this.onReAccountNoDataChange(value)}\n//                 />\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Account Holder Name\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"Account Holder Name\"\n//                   required\n//                   value={this.state.AccountHolderNameData}\n//                   onChange={(value) =>\n//                     this.onAccountHolderNameDataChange(value)\n//                   }\n//                 />\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 IFSC Code\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"text\"\n//                   placeholder=\"IFSC Code\"\n//                   required\n//                   value={this.state.IFSCcodeData}\n//                   onChange={(value) => this.onIFSCcodeDataChange(value)}\n//                 />\n//               </Col>\n//          </div>\n\n//             <div className=\"form-group col-12 col-md-6\">\n//               <Form.Label column sm={6}>\n//                 Tax Deduction\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"number\"\n//                   placeholder=\"Basic Salary\"\n//                   required\n//                   value={this.state.TaxDeductionData}\n//                   onChange={(value) => this.onTaxDeductionDataChange(value)}\n//                 />\n//               </Col>\n//          </div>\n\n//             <Form.Group as={Row} id=\"form-submit-button\">\n//               <Col sm={{ span: 10, offset: 2 }}>\n//                 <Button type=\"submit\">Submit</Button>\n//               </Col>\n//          </div>\n//             <Form.Group as={Row} id=\"form-cancel-button\">\n//               <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n//                 <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n//                   cancel\n//                 </Button>\n//               </Col>\n//          </div>\n//           </Form>\n//         </div>\n//         {/* </div>\n//         </div> */}\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// export default SalaryFormEdit;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Salary.css\";\nimport SalaryTable from \"./SalaryTable.jsx\";\nimport SalaryForm from \"./SalaryForm.jsx\";\nimport SalaryFormEdit from \"./SalaryFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nconst Salary = () => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState(null);\n\n  const handleSalarySubmit = (event) => {\n    event.preventDefault();\n    if (!(event.target[3].value === event.target[4].value)) {\n      window.alert(\"The bank account number you entered does not match \");\n    } else {\n      let body = {\n        BasicSalary: event.target[1].value,\n        BankName: event.target[2].value,\n        AccountNo: event.target[3].value,\n        AccountHolderName: event.target[5].value,\n        IFSCcode: event.target[6].value,\n        TaxDeduction: event.target[7].value\n      };\n\n      axios\n        .post(`${BASE_URL}/api/salary/` + event.target[0].value, body, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          setTable(false);\n          setTable(true);\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status === 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  const handleAddSalary = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditSalary = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleSalaryEditUpdate = (info, newInfo) => {\n    console.log(\"eeeeeeeeeeeeeeeeeeeeddddddddddddddddddddddddd\");\n    newInfo.preventDefault();\n    if (!(newInfo.target[3].value === newInfo.target[4].value)) {\n      window.alert(\"The bank account number you entered does not match \");\n    } else {\n      let body = {\n        BasicSalary: newInfo.target[1].value,\n        BankName: newInfo.target[2].value,\n        AccountNo: newInfo.target[3].value,\n        AccountHolderName: newInfo.target[5].value,\n        IFSCcode: newInfo.target[6].value,\n        TaxDeduction: newInfo.target[7].value\n      };\n\n      axios\n        .put(`${BASE_URL}/api/salary/` + info[\"salary\"][0][\"_id\"], body, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          setTable(false);\n          setTable(true);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setEditForm(false);\n    }\n  };\n\n  // Placeholder functions - replace with actual implementations\n  const handleEditFormGenderChange = () => {\n    // Implement your logic here\n  };\n\n  const handleAddFormGenderChange = () => {\n    // Implement your logic here\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <SalaryFormEdit\n            onSalaryEditUpdate={handleSalaryEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n            onGenderChange={handleEditFormGenderChange}\n          />\n        ) : (\n          <SalaryTable\n            onAddSalary={handleAddSalary}\n            onEditSalary={handleEditSalary}\n          />\n        )\n      ) : (\n        <SalaryForm\n          onSalarySubmit={handleSalarySubmit}\n          onFormClose={handleFormClose}\n          onGenderChange={handleAddFormGenderChange}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Salary;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\nimport { LuSearch } from \"react-icons/lu\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationHRTable = (props) => {\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [rowData, setRowData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const loadLeaveApplicationHRData = () => {\n    axios\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const leaveApplicationHRObj = response.data;\n        setLeaveApplicationHRData(leaveApplicationHRObj);\n        setLoading(false);\n\n        const rowDataT = leaveApplicationHRObj.map((data) => {\n          return {\n            data,\n            empID: data?.employee?.[0]?.empID,\n            Name:\n              data?.employee?.[0]?.FirstName +\n              \" \" +\n              data?.employee?.[0]?.LastName,\n            Leavetype: data?.Leavetype,\n            FromDate: data?.FromDate?.slice(0, 10),\n            ToDate: data?.ToDate?.slice(0, 10),\n            Reasonforleave: data?.Reasonforleave,\n            Status: status(data?.Status)\n          };\n        });\n\n        setRowData(rowDataT);\n        setFilteredData(rowDataT);\n        props.updateTotalLeaves(leaveApplicationHRObj.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationHRData();\n  }, []);\n\n  useEffect(() => {\n    filterData();\n  }, [searchQuery]);\n\n  const filterData = () => {\n    const filtered = rowData.filter((item) => {\n      return item.Name.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setFilteredData(filtered);\n  };\n\n  const onLeaveApplicationHRDelete = (e1, e2) => {\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-hr/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationHRData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const exportToPDF = () => {\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\n      const pdfWidth = 297; // A4 width in mm\n      const pdfHeight = 210; // A4 height in mm\n      const doc = new jsPDF({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: [pdfWidth, pdfHeight]\n      });\n\n      doc.setFontSize(18);\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\n      const headers = [\n        \"Emp Id\",\n        \"Leave Type\",\n        \"Start Date\",\n        \"End Date\",\n        \"Remarks\",\n        \"Status\"\n      ];\n      const data = filteredData.map((row) => [\n        row.empID,\n        row.Leavetype,\n        row.FromDate,\n        row.ToDate,\n        row.Reasonforleave,\n        row.Status,\n\n        \"\" // Action column - you can customize this based on your requirements\n      ]);\n      doc.setFontSize(12);\n      doc.autoTable({\n        head: [headers],\n        body: data,\n        startY: 25\n      });\n\n      doc.save(\"leaveApplication_data.pdf\");\n    }\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n  };\n\n  const renderSortIcon = (field) => {\n    if (sortColumn === field) {\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  const sortData = (columnName) => {\n    let newSortDirection = \"asc\";\n\n    if (sortColumn === columnName && sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n\n    const sortedData = [...filteredData];\n\n    sortedData.sort((a, b) => {\n      const valueA = a[columnName];\n      const valueB = b[columnName];\n\n      let comparison = 0;\n\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n\n      return sortDirection === \"desc\" ? comparison * -1 : comparison;\n    });\n\n    setFilteredData(sortedData);\n    setSortColumn(columnName);\n    setSortDirection(newSortDirection);\n  };\n\n  const approvedLeaves = filteredData.filter(\n    (data) => data.Status === \"Pending\"\n  ).length;\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex flex-column justify-between\">\n        <div className=\"d-flex justify-content-between aline-items-center\">\n          <h4 className=\"fw-bold  my-auto text-muted\">\n            Leaves Request{\" \"}\n            <span className=\"text-warning\">({approvedLeaves})</span>\n          </h4>\n          <div className=\"d-flex gap-2 justify-content-between py-3\">\n            <button\n              className=\"btn px-3 shadow-sm d-flex justify-center  aline-center gap-2\"\n              onClick={exportToPDF}\n            >\n              <BsFillFileEarmarkPdfFill className=\"text-danger fs-6\" />\n              <p className=\"my-auto fs-6 fw-bold\">PDF</p>\n            </button>\n            <div className=\"searchholder p-0 d-flex  position-relative\">\n              <input\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  paddingLeft: \"15%\"\n                }}\n                className=\"form-control border border-primary border-2\"\n                type=\"text\"\n                placeholder=\"Search by name\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n              <LuSearch\n                style={{ position: \"absolute\", top: \"30%\", left: \"5%\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div\n          className=\"mt-3\"\n          style={{\n            overflow: \"auto\",\n            height: \"85vh\",\n            width: \"100%\",\n            scrollbarWidth: \"thin\"\n          }}\n        >\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"empID\")}\n                >\n                  Employee ID {renderSortIcon(\"empID\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Leavetype\")}\n                >\n                  Leave Type {renderSortIcon(\"Leavetype\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"FromDate\")}\n                >\n                  Start Date {renderSortIcon(\"FromDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"ToDate\")}\n                >\n                  End Date {renderSortIcon(\"ToDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Status\")}\n                >\n                  Status {renderSortIcon(\"Status\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Reasonforleave\")}\n                >\n                  Remarks {renderSortIcon(\"Reasonforleave\")}\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    textAlign: \"center\"\n                  }}\n                >\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredData\n                .filter((e) => e.Status == \"Pending\")\n                .map((data, index) => (\n                  <tr className=\"fw-bold\" key={index}>\n                    <td className=\"py-1\">\n                      <div className=\"d-flex aline-center gap-2\">\n                        <div style={{ height: \"40px\", width: \"40px\" }}>\n                          <img\n                            style={{\n                              height: \"100%\",\n                              width: \"100%\",\n                              borderRadius: \"50%\",\n                              overflow: \"hidden\",\n                              objectFit: \"cover\"\n                            }}\n                            src={\n                              data?.data?.profile?.image_url\n                                ? data?.data?.profile?.image_url\n                                : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                            }\n                            alt=\"\"\n                          />\n                        </div>\n                        <div className=\"d-flex flex-column\">\n                          <span\n                            style={{ fontSize: \"12px\" }}\n                            className=\"fw-bold\"\n                          >\n                            {data.empID}\n                          </span>\n                          <span\n                            style={{ fontSize: \"15px\" }}\n                            className=\"fw-bold text-capitalize text-primary\"\n                          >\n                            {data.Name}\n                          </span>\n                        </div>\n                      </div>\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"py-1 text-muted\"\n                    >\n                      {data.Leavetype}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"py-1 text-muted\"\n                    >\n                      {data.FromDate}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"py-1 text-muted\"\n                    >\n                      {data.ToDate}\n                    </td>\n                    <td style={{ verticalAlign: \"middle\" }} className=\"py-1  \">\n                      <span className=\"bg-danger text-white px-2 py-1 rounded-5\">\n                        {data.Status}\n                      </span>\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"py-1 text-muted\"\n                    >\n                      {data.Reasonforleave}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"py-1 text-muted\"\n                    >\n                      <div\n                        className=\"d-flex gap-3 py-2\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <p title=\"Update\" className=\"m-auto text-primary\">\n                          <FontAwesomeIcon\n                            className=\"m-auto\"\n                            icon={faEdit}\n                            onClick={() =>\n                              props.onEditLeaveApplicationHR(data.data)\n                            }\n                          />\n                        </p>\n                        <p title=\"Delete\" className=\"m-auto text-danger\">\n                          <FontAwesomeIcon\n                            className=\"m-auto\"\n                            icon={faTrash}\n                            onClick={() =>\n                              onLeaveApplicationHRDelete(\n                                data.data[\"employee\"][0][\"_id\"],\n                                data.data[\"_id\"]\n                              )\n                            }\n                          />\n                        </p>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRTable;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst LeaveApplicationHRForm = (props) => {\n  const [FromDateData, setFromDateData] = useState(\n    props.editData[\"FromDate\"].slice(0, 10)\n  );\n  const [ToDateData, setToDateData] = useState(\n    props.editData[\"ToDate\"].slice(0, 10)\n  );\n  const [ReasonforleaveData, setReasonforleaveData] = useState(\n    props.editData[\"Reasonforleave\"]\n  );\n\n  const handleLeaveApplicationHREditUpdate = (e) => {\n    e.preventDefault();\n    props.onLeaveApplicationHREditUpdate(props.editData, e);\n  };\n\n  return (\n    <div className=\"registration-page py-4\">\n      <h2\n        id=\"role-form-title\"\n        className=\"text-center text-black text-uppercase fw-bold my-4\"\n      >\n        Edit Leave Application Of {props.editData[\"employee\"][0][\"FirstName\"]}{\" \"}\n        {props.editData[\"employee\"][0][\"LastName\"]}\n      </h2>\n      <div id=\"role-form-outer-div\">\n      <Form id=\"form\" onSubmit={handleLeaveApplicationHREditUpdate}>\n          <div className=\"d-flex  flex-column gap-2 rounded \">\n            <div style={{ padding: \"70px\" }} className=\"row \">\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Leave Type\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control as=\"select\" required>\n                      <option value=\"\" disabled selected>\n                        Select your option\n                      </option>\n                      <option\n                        value=\"Sick Leave\"\n                        selected={props.editData[\"Leavetype\"] == \"Sick Leave\"}\n                        disabled\n                      >\n                        Sick Leave\n                      </option>\n                      <option\n                        value=\"Casual Leave\"\n                        selected={props.editData[\"Leavetype\"] == \"Casual Leave\"}\n                        disabled\n                      >\n                        Casual Leave\n                      </option>\n                      <option\n                        value=\"Privilege Leave\"\n                        selected={\n                          props.editData[\"Leavetype\"] == \"Privilege Leave\"\n                        }\n                        disabled\n                      >\n                        Privilege Leave\n                      </option>\n                    </Form.Control>\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    FromDate\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control\n                      type=\"date\"\n                      required\n                      disabled\n                      value={FromDateData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    ToDate\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control\n                      type=\"date\"\n                      required\n                      disabled\n                      value={ToDateData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Leave Status\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control as=\"select\" required>\n                      <option value=\"Pending\" selected disabled>\n                        Pending\n                      </option>\n                      <option\n                        value=\"2\"\n                        selected={props.editData[\"Status\"] == 2}\n                      >\n                        Approve\n                      </option>\n                      <option\n                        value=\"3\"\n                        selected={props.editData[\"Status\"] == 3}\n                      >\n                        Reject\n                      </option>\n                    </Form.Control>\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Reason for leave\n                  </Form.Label>\n                  <Col sm={11} className=\"form-input\">\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Reason for leave\"\n                      required\n                      disabled\n                      value={ReasonforleaveData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div\n                className=\"form-group col-12 d-flex  gap-5\"\n                id=\"form-submit-button\"\n              >\n                <Button className=\"mx-3\" type=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  className=\"mx-3\"\n                  type=\"reset\"\n                  onClick={props.onFormClose}\n                >\n                  cancel\n                </Button>\n              </div>\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-cancel-button\"\n              ></div>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRForm;\n\n// import React, { useState } from \"react\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n\n// const LeaveApplicationHRForm = (props) => {\n//   const [FromDateData, setFromDateData] = useState(\n//     props.editData[\"FromDate\"].slice(0, 10)\n//   );\n//   const [ToDateData, setToDateData] = useState(\n//     props.editData[\"ToDate\"].slice(0, 10)\n//   );\n//   const [ReasonforleaveData, setReasonforleaveData] = useState(\n//     props.editData[\"Reasonforleave\"]\n//   );\n\n//   const handleLeaveApplicationHREditUpdate = (e) => {\n//     e.preventDefault();\n//     props.onLeaveApplicationHREditUpdate(props.editData, e);\n//   };\n\n//   return (\n//     <div className=\"registration-page py-4\">\n//       <h2 id=\"role-form-title\" className=\"text-center text-black text-uppercase fw-bold my-4\">\n//         Edit Leave Application Of {props.editData[\"employee\"][0][\"FirstName\"]}{\" \"}\n//         {props.editData[\"employee\"][0][\"LastName\"]}\n//       </h2>\n\n//       <div id=\"role-form-outer-div\">\n//         <Form id=\"form\" onSubmit={handleLeaveApplicationHREditUpdate}>\n//           <div className=\"d-flex flex-column gap-2 rounded\">\n//             <div style={{ padding: '70px' }} className=\"row\">\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Leave Type\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control as=\"select\" required disabled>\n//                       <option value=\"\" disabled selected>\n//                         Select your option\n//                       </option>\n//                       <option\n//                         value=\"Sick Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Sick Leave\"}\n//                         disabled\n//                       >\n//                         Sick Leave\n//                       </option>\n//                       <option\n//                         value=\"Casual Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Casual Leave\"}\n//                         disabled\n//                       >\n//                         Casual Leave\n//                       </option>\n//                       <option\n//                         value=\"Privilege Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Privilege Leave\"}\n//                         disabled\n//                       >\n//                         Privilege Leave\n//                       </option>\n//                     </Form.Control>\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     FromDate\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control type=\"date\" required disabled value={FromDateData} />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     ToDate\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control type=\"date\" required disabled value={ToDateData} />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Leave Status\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control as=\"select\" required >\n//                       <option value=\"Pending\" selected disabled>\n//                         Pending\n//                       </option>\n//                       <option value=\"2\" selected={props.editData[\"Status\"] === 2}>\n//                         Approve\n//                       </option>\n//                       <option value=\"3\" selected={props.editData[\"Status\"] === 3}>\n//                         Reject\n//                       </option>\n//                     </Form.Control>\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Reason for leave\n//                   </Form.Label>\n//                   <Col sm={11} className=\"form-input\">\n//                     <Form.Control\n//                       as=\"textarea\"\n//                       rows={3}\n//                       placeholder=\"Reason for leave\"\n//                       required\n//                       disabled\n//                       value={ReasonforleaveData}\n//                     />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 d-flex gap-5\" id=\"form-submit-button\">\n//                 <Button className=\"mx-3\" type=\"submit\">\n//                   Submit\n//                 </Button>\n//                 <Button className=\"mx-3\" type=\"reset\" onClick={props.onFormClose}>\n//                   Cancel\n//                 </Button>\n//               </div>\n//             </div>\n//           </div>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LeaveApplicationHRForm;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport LeaveApplicationHRTable from \"./LeaveApplicationHRTable.jsx\";\nimport LeaveApplicationHRFormEdit from \"./LeaveApplicationHRFormEdit.jsx\";\nimport \"./LeaveApplicationHR.css\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\nconst LeaveApplicationHR = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleLeaveApplicationHRSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      Leavetype: event.target[0].value,\n      FromDate: event.target[1].value,\n      ToDate: event.target[2].value,\n      Status: event.target[3].value,\n      Reasonforleave: event.target[4].value\n    };\n    axios\n      .post(`${BASE_URL}/api/leave-application-hr/` + props.data[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddLeaveApplicationHR = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditLeaveApplicationHR = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n    // Assuming setEditFormGender is not used in the rest of your component\n    // setEditFormGender(e[\"Gender\"]);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleLeaveApplicationHREditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    let body = {\n      Status: newInfo.target[3].value\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/leave-application-hr/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <LeaveApplicationHRFormEdit\n            onLeaveApplicationHREditUpdate={handleLeaveApplicationHREditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <LeaveApplicationHRTable\n            onAddLeaveApplicationHR={handleAddLeaveApplicationHR}\n            onEditLeaveApplicationHR={handleEditLeaveApplicationHR}\n            data={props.data}\n          />\n        )\n      ) : (\n        <div></div>\n        // Uncomment the following code if needed\n        // <LeaveApplicationHRForm\n        //   onLeaveApplicationHRSubmit={handleLeaveApplicationHRSubmit}\n        //   onFormClose={handleFormClose}\n        //   onGenderChange={handleAddFormGenderChange}\n        // />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LeaveApplicationHR;\n","import React, { useState, useEffect } from \"react\";\nimport \"./EmployeeTable.css\";\nimport { LuSearch } from \"react-icons/lu\";\nimport { LiaPhoneSolid } from \"react-icons/lia\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faEdit,\n  faInfoCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport {\n  FaFilePdf,\n  FaFilter,\n  FaLocationArrow,\n  FaRegEdit\n} from \"react-icons/fa\";\nimport { MdDeleteForever, MdOutlineEmail } from \"react-icons/md\";\nimport { SiMinutemailer } from \"react-icons/si\";\nimport { TbPhoneCalling, TbUserEdit } from \"react-icons/tb\";\nimport { FcNumericalSorting12 } from \"react-icons/fc\";\nimport { FcNumericalSorting21 } from \"react-icons/fc\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport BASE_URL from \"../config/config\";\n\n// *************csv & pdf **************//\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { FiSearch } from \"react-icons/fi\";\n// *************csv & pdf **************//\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst AdminEmployeeTable = (props) => {\n  const [employeeData, setEmployeeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\n  const [activeProfile, setActiveProfile] = useState(null);\n\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // Ensure that response.data is an array\n        if (Array.isArray(response.data)) {\n          setEmployeeData(response.data);\n          setLoading(false);\n\n          // Clear the state arrays\n          setRowData([]);\n\n          response.data.forEach((data) => {\n            let temp = {\n              data,\n              Email: data[\"Email\"],\n              Password: data[\"Password\"],\n              Account:\n                data[\"Account\"] === 1\n                  ? \"Admin\"\n                  : data[\"Account\"] === 2\n                  ? \"HR\"\n                  : data[\"Account\"] === 3\n                  ? \"Employee\"\n                  : data[\"Account\"] === 4\n                  ? \"Manager\"\n                  : \"\",\n\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\n              FirstName: data[\"FirstName\"],\n              MiddleName: data[\"MiddleName\"],\n              LastName: data[\"LastName\"],\n              DOB: data[\"DOB\"].slice(0, 10),\n              ContactNo: data[\"ContactNo\"],\n              // EmployeeCode: data[\"EmployeeCode\"],\n              empID: data[\"empID\"],\n              DepartmentName: data[\"department\"][0]\n                ? data[\"department\"][0][\"DepartmentName\"]\n                : \"\",\n              PositionName: data[\"position\"][0]\n                ? data[\"position\"][0][\"PositionName\"]\n                : \"\",\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\n            };\n\n            // Use set function to update state\n            setRowData((prevData) => [...prevData, temp]);\n          });\n        } else {\n          console.error(\"Data received is not an array:\", response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onEmployeeDelete = (e) => {\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/employee/${e}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then(() => {\n          loadEmployeeData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const exportToPDF = () => {\n    window.confirm(\"Are you sure to download Employee record? \");\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"mm\",\n      format: [297, 210]\n    });\n\n    doc.setFontSize(18);\n    doc.text(\"Employee Details\", 297 / 2, 15, \"center\");\n    const headers = [\n      \"Emp Id\",\n      \"Email\",\n      \"Account Access\",\n      \"First Name\",\n      \"Last Name\",\n      \"DOB\",\n      \"ContactNo\",\n      \"Role\",\n      \"Position\",\n      \"Department\",\n      \"D.O.J\"\n    ];\n    const data = rowData.map((row) => [\n      row.empID,\n      row.Email,\n      row.Account,\n      row.FirstName,\n      row.LastName,\n      row.DOB,\n      row.ContactNo,\n      row.RoleName,\n      row.PositionName,\n      row.DepartmentName,\n      row.DateOfJoining,\n      \"\"\n    ]);\n    doc.setFontSize(12);\n    doc.autoTable({\n      head: [headers],\n      body: data,\n      startY: 25\n    });\n\n    doc.save(\"employee_data.pdf \");\n  };\n\n  const renderInfoButton = (params) => {\n    if (params.data && params.data.data) {\n      return (\n        <div>\n          <FontAwesomeIcon\n            icon={faInfoCircle}\n            onClick={() => props.onEmpInfo(params.data.data)}\n          />\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const renderButton = (params) => {\n    if (params.data && params.data.data && params.data.data[\"_id\"]) {\n      return (\n        <FontAwesomeIcon\n          icon={faTrash}\n          onClick={() => onEmployeeDelete(params.data.data[\"_id\"])}\n        />\n      );\n    }\n    return null;\n  };\n\n  const renderEditButton = (params) => {\n    if (params.data && params.data.data) {\n      return (\n        <FontAwesomeIcon\n          icon={faEdit}\n          onClick={() => props.onEditEmployee(params.data.data)}\n        />\n      );\n    }\n    return null;\n  };\n\n  const getBackgroundColor = (accountType) => {\n    switch (accountType) {\n      case \"Admin\":\n        return \"#1D267D\";\n      case \"HR\":\n        return \"#1D267D\";\n      case \"Employee\":\n        return \"#1D267D\";\n      case \"Manager\":\n        return \"#1D267D\";\n      default:\n        return \"#1D267D\";\n    }\n  };\n\n  const handleSearchInputChange = (event) => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleToggleIdSort = () => {\n    setIsIdSortAscending(!isIdSortAscending);\n  };\n\n  const sortById = (a, b) => {\n    const idA = a.empID.toLowerCase();\n    const idB = b.empID.toLowerCase();\n\n    if (isIdSortAscending) {\n      return idA.localeCompare(idB);\n    } else {\n      return idB.localeCompare(idA);\n    }\n  };\n\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n\n  const calculateUpcomingBirthdays = () => {\n    const today = new Date();\n    const upcomingBirthdaysData = rowData.filter((employee) => {\n      const dob = new Date(employee.DOB);\n      dob.setFullYear(today.getFullYear());\n\n      // Check if the upcoming birthday is within the next 7 days\n      const timeDiff = dob - today;\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n      return daysDiff >= 0 && daysDiff <= 7;\n    });\n\n    setUpcomingBirthdays(upcomingBirthdaysData);\n  };\n\n  useEffect(() => {\n    calculateUpcomingBirthdays();\n  }, [rowData]);\n\n  let filteredData = rowData.filter((item) => {\n    const isMatchingId = isIdFilterActive\n      ? item.empID.toLowerCase() === searchInput.toLowerCase()\n      : true;\n\n    const isMatchingFirstName = item.FirstName.toLowerCase().includes(\n      searchInput.toLowerCase()\n    );\n\n    return isMatchingId && isMatchingFirstName;\n  });\n\n  filteredData = filteredData.sort(sortById);\n\n  // Calculate the total length for each status\n  const allCount = filteredData.filter((data) => data.Account === \"\").length;\n  const adminCount = filteredData.filter(\n    (data) => data.Account === \"Admin\"\n  ).length;\n  const hrCount = filteredData.filter((data) => data.Account === \"HR\").length;\n  const managerCount = filteredData.filter(\n    (data) => data.Account === \"Manager\"\n  ).length;\n  const employeeCount = filteredData.filter(\n    (data) => data.Account === \"Employee\"\n  ).length;\n\n  return (\n    <div className=\"py-0\">\n      <div\n        style={{\n          position: \"sticky\",\n          top: \"0\",\n          zIndex: \"3\",\n          backgroundColor: \"white\"\n        }}\n        className=\"my-auto bg-light  py-2 shadow-sm mb-5\"\n      >\n        <div className=\"row m-auto row-gap-2 px-2\">\n          <div className=\"col-12 col-sm-12 col-md-3 d-flex\">\n            <h5 className=\"fw-bolder my-auto text-uppercase  d-flex text-muted gap-0\">\n              Employees\n              <span className=\"text-primary my-auto fs-6 mx-2\">\n                ({rowData.length})\n              </span>\n            </h5>\n          </div>\n          <div className=\"col-6 col-md-5 d-flex p-0 position-relative\">\n            <input\n              style={{\n                height: \"100%\",\n                width: \"100%\",\n                paddingLeft: \"30px\"\n              }}\n              className=\"form-control py-1 border border-muted border-2\"\n              type=\"text\"\n              placeholder=\"Search by name\"\n              value={searchInput}\n              onChange={handleSearchInputChange}\n            />\n            <LuSearch\n              style={{\n                position: \"absolute\",\n                top: \"30%\",\n                left: \"8px\",\n                height: \"17px\",\n                width: \"17px\"\n              }}\n            />\n          </div>\n          <div className=\"col-6 col-md-4 d-flex align-items-center justify-content-end gap-1\">\n            <button\n              onClick={exportToPDF}\n              className=\"btn py-1 bg-white shadow-sm fw-bold\"\n            >\n              <FaFilePdf className=\"fs-6 align-items-center text-danger\" />\n            </button>\n            <div className=\"bg-white\" style={{ position: \"relative\" }}>\n              <span\n                onMouseEnter={() => setActiveProfile(\"name\")}\n                onMouseLeave={() => setActiveProfile(null)}\n                className=\"btn py-1 shadow-sm text-primary\"\n              >\n                <FaFilter />\n                <div\n                  style={{\n                    position: \"absolute\",\n                    zIndex: \"1\",\n                    right: \"0\",\n                    top: \"95%\",\n                    width: \"130px\",\n                    display: activeProfile === \"name\" ? \"flex\" : \"none\"\n                  }}\n                  className=\"bg-white fw-bold rounded-3 px-2 shadow flex-column\"\n                >\n                  <div\n                    onClick={() => setSelectedFilter(\"\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex  flex-nowrap justify-content-between\"\n                  >\n                    ALL <span>({rowData.length})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"Admin\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    ADMIN <span>({adminCount})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"HR\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    HR <span>({hrCount})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"Manager\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    MANAGER <span>({managerCount})</span>\n                  </div>\n                  <div\n                    onClick={() => setSelectedFilter(\"Employee\")}\n                    style={{ cursor: \"pointer\" }}\n                    className=\"d-flex flex-nowrap justify-content-between\"\n                  >\n                    EMPLOYEE <span>({employeeCount})</span>\n                  </div>\n                </div>\n              </span>\n            </div>\n            <button\n              onClick={handleToggleIdSort}\n              className=\"btn py-1 bg-white shadow-sm fs-6 fw-bold\"\n            >\n              {isIdSortAscending ? (\n                <FcNumericalSorting21 />\n              ) : (\n                <FcNumericalSorting12 />\n              )}\n            </button>\n            <button\n              className=\"d-flex py-1 btn justify-center bg-success shadow-sm text-white fw-bold aline-center gap-2\"\n              onClick={props.onAddEmployee}\n            >\n              + <span className=\"d-none d-lg-flex\">Add Employee</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div className=\"row container-fluid mx-auto px-2 px-sm-5 justify-content-lg-around justify-content-start  row-gap-3 column-gap-0 \">\n          {filteredData\n            .filter((items) =>\n              selectedFilter ? items.Account === selectedFilter : true\n            )\n\n            .map((items, index) => {\n              return (\n                <div className=\"col-12 col-sm-6 col-lg-3 position-relative\">\n                  <p\n                    style={{\n                      width: \"fit-content\",\n                      position: \"absolute\",\n                      zIndex: \"2\",\n                      top: \"-3px\",\n                      letterSpacing: \"5px\",\n                      left: \"50%\",\n                      transform: \"translate(-50%)\"\n                    }}\n                    className=\"m-0 mx-auto rounded-5 fw-bold text-capitalize btn py-0 px-3 bg-white\"\n                  >\n                    {items.empID}\n                  </p>\n\n                  <div className=\" p-3 shadow rounded-4 d-flex flex-column gap-2\">\n                    <div\n                      className=\"rounded-4  d-flex flex-column py-2 text-center jusctify-content-center\"\n                      style={{\n                        backgroundColor: \"rgba(0, 0, 92, .1)\",\n                        boxShadow: \"0 0 20px 1px #F1EAFF inset\",\n                        position: \"relative\"\n                      }}\n                    >\n                      <button\n                        style={{\n                          position: \"absolute\",\n                          top: \"5%\",\n                          right: \"5% \"\n                        }}\n                        onClick={() => props.onEmpInfo(items.data)}\n                        className=\" btn p-0 text-primary cursor-pointer\"\n                        to=\"\"\n                        title=\"Info\"\n                      >\n                        <FaLocationArrow className=\"fs-6\" />\n                      </button>{\" \"}\n                      <button\n                        style={{\n                          position: \"absolute\",\n                          top: \"5%\",\n                          left: \"5% \",\n                          fontSize: \".8px\"\n                        }}\n                        onClick={() => props.onEditEmployee(items.data)}\n                        className=\" btn p-0 text-primary cursor-pointer\"\n                        to=\"\"\n                        title=\"Edit Profile\"\n                      >\n                        <TbUserEdit className=\"fs-5\" />\n                      </button>\n                      <div\n                        style={{\n                          height: \"80px\",\n                          width: \"80px\",\n                          overflow: \"hidden\",\n                          borderRadius: \"50%\",\n                          border: \"3px solid #4477CE\"\n                        }}\n                        className=\"profile-image mt-1 bg-white  mx-auto\"\n                      >\n                        <img\n                          style={{\n                            height: \"100%\",\n                            width: \"100%\",\n                            overflow: \"hidden\",\n                            borderRadius: \"50%\",\n                            objectFit: \"cover\",\n                            padding: \".2rem\"\n                          }}\n                          className=\"\"\n                          src={\n                            items?.data?.profile?.image_url\n                              ? items?.data?.profile?.image_url\n                              : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                          }\n                          alt=\"\"\n                        />\n                      </div>\n                      <div style={{ position: \"relative\" }}>\n                        <p className=\"m-0 text-capitalize fw-bold fs-5\">\n                          {items.FirstName} {items.LastName}\n                        </p>\n                        <p className=\"m-0 text-capitalize fw-bold\">\n                          {items.PositionName}\n                        </p>\n                        <p\n                          style={{ width: \"fit-content \" }}\n                          className=\"btn btn-outline-success my-1 mx-auto p-0 px-2 fw-bold rounded-5\"\n                        >\n                          {items.Account}\n                        </p>\n                      </div>\n                    </div>\n                    <a\n                      target=\"_blank\"\n                      href={`mailto:${items.Email}`}\n                      style={{\n                        color: \"#00005C\",\n                        textDecoration: \"none\",\n                        cursor: \"pointer\"\n                      }}\n                      className=\"m-0\"\n                    >\n                      <MdOutlineEmail /> {items.Email}\n                    </a>\n                    <a\n                      target=\"_blank\"\n                      href={`tel:${items.ContactNo}`}\n                      style={{\n                        color: \"#00005C\",\n                        textDecoration: \"none\",\n                        cursor: \"pointer\"\n                      }}\n                      className=\"m-0\"\n                    >\n                      <LiaPhoneSolid /> {items.ContactNo}\n                    </a>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminEmployeeTable;\n","import React, { Component } from 'react'\n\nexport class NotFound404 extends Component {\n    render() {\n        return (\n            <div style={{ \"height\": \"100%\", \"width\": \"100%\", \"backgroundColor\": \"white\", \"marginTop\": \"200px\", \"textAlign\": \"center\" }}>\n\n                <h1>404 | Not Found</h1>\n            </div>\n        )\n    }\n}\n\nexport default NotFound404;\n\n","// final filter based department\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { toast } from \"react-hot-toast\";\n// import \"react-toastify/dist/ReactToastify.css\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst TaskAssign = () => {\n  const [departmentData, setDepartmentData] = useState([]);\n  const [endDateError, setEndDateError] = useState(false);\n  const [managerData, setManagerData] = useState(null);\n  const { socket } = useContext(AttendanceContext);\n  const email = localStorage.getItem(\"Email\");\n  const taskId = uuidv4();\n  const [newTask, setNewTask] = useState({\n    Taskname: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    attachments: null,\n    managerEmail: \"\",\n    department: \"\",\n    comment: \"\"\n  });\n\n  const isFormValid = () => {\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    return (\n      newTask.Taskname.trim() !== \"\" &&\n      newTask.description.trim() !== \"\" &&\n      newTask.startDate.trim() !== \"\" &&\n      newTask.endDate.trim() !== \"\" &&\n      newTask.managerEmail.trim() !== \"\" &&\n      emailPattern.test(newTask.managerEmail) &&\n      newTask.department.trim() !== \"\"\n    );\n  };\n  const ManagerDataHandler = () => {\n    if (newTask.department === \"\") return;\n    axios\n      .get(`${BASE_URL}/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((val) => {\n        let mana = val.data.filter((val) => {\n          return (\n            val.Account === 4 &&\n            val.department[0].DepartmentName === newTask.department\n          );\n        });\n        setManagerData(mana);\n      })\n      .catch(console.log(\"hello\"));\n  };\n\n  // const addTask = async () => {\n  //   try {\n  //     const response = await axios.post(\n  //       \"${BASE_URL}/api/tasks\",\n  //       newTask\n  //     );\n\n  //     if (response.status === 201) {\n  //       // Reset the form and show a success toast\n  //       setNewTask({\n  //         Taskname: \"\",\n  //         description: \"\",\n  //         startDate: \"\",\n  //         endDate: \"\",\n  //         attachments: null,\n  //         managerEmail: \"\",\n  //         department: \"\",\n  //         comment: \"\"\n  //       });\n  //       toast.sucess(\"Task added successfully!\");\n  //     } else {\n  //       // Handle the case where the request fails\n  //       alert(\"Failed to add task. Please try again.\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error adding task:\", error);\n  //     alert(\"An unexpected error occurred. Please try again later.\");\n  //   }\n  // };\n  const addTask = async () => {\n    let formData = new FormData();\n    formData.append(\"Taskname\", newTask.Taskname);\n    formData.append(\"description\", newTask.description);\n    formData.append(\"startDate\", newTask.startDate);\n    formData.append(\"endDate\", newTask.endDate);\n    formData.append(\"file\", newTask.attachments);\n    formData.append(\"managerEmail\", newTask.managerEmail);\n    formData.append(\"department\", newTask.department);\n    formData.append(\"comment\", newTask.comment);\n    formData.append(\"adminMail\", email);\n    // console.log();\n    const id = localStorage.getItem(\"_id\");\n    axios\n      .post(`${BASE_URL}/api/tasks`, formData)\n      .then((res) => {\n        console.log(res);\n        const taskNotificationData = {\n          taskId,\n          taskName: newTask.Taskname,\n          senderMail: email,\n          managerEmail: newTask.managerEmail,\n          Account: 4,\n          message: `New task assigned by ${email}`,\n          status: \"unseen\",\n          path: \"newTask\"\n        };\n\n        socket.emit(\"managerTaskNotification\", taskNotificationData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // Fetch all tasks on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/api/tasks`);\n        // Handle the response data as needed (e.g., set it in the component state)\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n        // Handle the error\n      }\n    };\n\n    fetchTasks();\n  }, []); // Empty dependency array means this effect runs only once on mount\n\n  const loadDepartmentInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/department`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setDepartmentData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadDepartmentInfo();\n  }, []); // Empty dependency array means this effect runs only once on mount\n\n  return (\n    <div style={{ zIndex: \"1\" }} className=\"p-4 d-flex flex-column \">\n      <form className=\"row p-0 p-md-3 m-auto\">\n        <h2 className=\"fw-bold text-muted \"> 🖋️Create New Task</h2>\n        <p className=\"text-muted\">\n          You can Create New task and Assign to the manager for the process.\n        </p>\n        <div className=\"col-12 mt-5 d-flex flex-column\">\n          <Form.Group controlId=\"Taskname\">\n            <Form.Label className=\"fw-bold\">Task Name</Form.Label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              required\n              placeholder=\"Enter task name\"\n              value={newTask.Taskname}\n              onChange={(e) =>\n                setNewTask({ ...newTask, Taskname: e.target.value })\n              }\n            />\n          </Form.Group>\n        </div>\n        <div className=\"col-12 mt-2 d-flex flex-column\">\n          <Form.Group controlId=\"description\">\n            <Form.Label className=\"fw-bold\">Task Description</Form.Label>\n            <textarea\n              className=\"form-control\"\n              required\n              placeholder=\"Enter task description\"\n              value={newTask.description}\n              onChange={(e) =>\n                setNewTask({ ...newTask, description: e.target.value })\n              }\n            />\n          </Form.Group>\n        </div>\n        <div className=\"col-12 col-md-6 mt-3 d-flex flex-column\">\n          <Form.Group controlId=\"startDate\">\n            <Form.Label className=\"fw-bold\">Start Date</Form.Label>\n            <input\n              className=\"form-control\"\n              type=\"date\"\n              required\n              value={newTask.startDate}\n              onChange={(e) => {\n                setNewTask({ ...newTask, startDate: e.target.value });\n                // Reset the endDateError when StartDate changes\n                setEndDateError(false);\n              }}\n            />\n          </Form.Group>\n        </div>\n        <div className=\"col-12 col-md-6 mt-3 d-flex flex-column\">\n          <Form.Group controlId=\"endDate\">\n            <Form.Label className=\"fw-bold\">End Date</Form.Label>\n            <input\n              className=\"form-control\"\n              type=\"date\"\n              required\n              value={newTask.endDate}\n              onChange={(e) => {\n                const selectedEndDate = e.target.value;\n                // Check if selectedEndDate is less than StartDate\n                if (selectedEndDate < newTask.startDate) {\n                  setEndDateError(true);\n                } else {\n                  setEndDateError(false);\n                  setNewTask({ ...newTask, endDate: selectedEndDate });\n                }\n              }}\n            />\n          </Form.Group>\n        </div>\n        <div className=\"col-12 col-md-3 mt-3 d-flex flex-column\">\n          <Form.Group className=\"fw-bold\" controlId=\"department\">\n            <Form.Label>Department</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"department\"\n              required\n              value={newTask.department}\n              onChange={(e) =>\n                setNewTask({ ...newTask, department: e.target.value })\n              }\n              onBlur={ManagerDataHandler}\n            >\n              <option value=\"\">Select your option</option>\n              {departmentData.map((data, index) => (\n                <option key={index} value={data.DepartmentName}>\n                  {data.DepartmentName}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n        </div>\n        <div className=\"col-12 col-md-9 mt-3 d-flex flex-column\">\n          <Form.Group className=\"fw-bold\" controlId=\"department\">\n            <Form.Label>managerEmail</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"department\"\n              required\n              value={newTask.managerEmail}\n              onChange={(e) =>\n                setNewTask({ ...newTask, managerEmail: e.target.value })\n              }\n            >\n              <option value=\"\">Select your option</option>\n              {managerData &&\n                managerData.map((data, index) => (\n                  <option key={index} value={data.Email}>\n                    {data.Email}\n                  </option>\n                ))}\n            </Form.Control>\n          </Form.Group>\n        </div>\n        <div>\n          <Form.Group controlId=\"Attachments\">\n            <Form.Label className=\"fw-bold mt-3\">Attachments</Form.Label>\n            <input\n              className=\"form-control\"\n              type=\"file\"\n              multiple\n              required\n              onChange={(e) =>\n                setNewTask({ ...newTask, attachments: e.target.files[0] })\n              }\n            />\n          </Form.Group>\n        </div>\n        <Button\n          className=\"mt-4 w-100 fw-bold text-white\"\n          variant=\"info\"\n          onClick={addTask}\n          disabled={!isFormValid()}\n        >\n          Add Task\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskAssign;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PiInfoFill } from \"react-icons/pi\";\nimport { FaCheck } from \"react-icons/fa6\";\nimport { MdCancel, MdEdit } from \"react-icons/md\";\n// import { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst AdminTaskStatus = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCanceling, setIsCanceling] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [allImage, setAllImage] = useState(null);\n\n  const [updatedTask, setUpdatedTask] = useState({\n    id: \"\",\n    Taskname: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    managerEmail: \"\",\n    duration: 0\n  });\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n\n  useEffect(() => {\n    getPdf();\n  }, []);\n  const getPdf = async () => {\n    const result = await axios.get(`${BASE_URL}/api/getTask`);\n    console.log(result.data.data);\n    setAllImage(result.data.data);\n  };\n  const showPdf = (id) => {\n    let require =\n      allImage &&\n      allImage.filter((val) => {\n        return val._id === id;\n      });\n    console.log(require[0].pdf);\n    window.open(`${BASE_URL}/${require[0].pdf}`, \"_blank\", \"noreferrer\");\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  const cancelTask = async (taskId) => {\n    try {\n      setIsCanceling(true);\n\n      // Prompt the user for cancellation remarks\n      const cancellationRemarks = prompt(\n        \"Enter remarks for task cancellation:\"\n      );\n\n      if (cancellationRemarks === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsCanceling(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Cancelled\",\n        comment: cancellationRemarks\n      });\n\n      // Display success notification\n      // toast.success(\"Task canceled successfully!\");\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      // toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsCanceling(false);\n    }\n  };\n\n  const updateTask = (taskId) => {\n    const taskToUpdate = tasks.find((task) => task._id === taskId);\n\n    if (taskToUpdate) {\n      setUpdatedTask({\n        id: taskToUpdate._id,\n        Taskname: taskToUpdate.Taskname,\n        description: taskToUpdate.description,\n        startDate: taskToUpdate.startDate,\n        endDate: taskToUpdate.endDate,\n        managerEmail: taskToUpdate.managerEmail,\n        duration: taskToUpdate.duration\n      });\n\n      setShowUpdateModal(true);\n    }\n\n    console.log();\n  };\n\n  const handleCloseUpdateModal = () => {\n    setShowUpdateModal(false);\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`${BASE_URL}/api/tasks/${updatedTask.id}`, {\n        Taskname: updatedTask.Taskname,\n        description: updatedTask.description,\n        startDate: updatedTask.startDate,\n        endDate: updatedTask.endDate,\n        managerEmail: updatedTask.managerEmail,\n        duration: updatedTask.duration\n      });\n\n      // Display success notification\n      // toast.success(\"Task updated successfully!\");\n\n      // Close the update modal\n      handleCloseUpdateModal();\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error updating task:\", error.message);\n      // toast.error(\"Failed to update task. Please try again.\");\n    }\n  };\n\n  const askStatus = async (taskId) => {\n    // Implement the logic to ask for task status (e.g., open a modal or show a notification)\n  };\n\n  const completeTask = async (taskId) => {\n    try {\n      const CompleteMassage = prompt(\"Enter remarks for task cancellation:\");\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Completed\",\n        comment: CompleteMassage\n      });\n      // toast.success(\"Task completed successfully!\");\n      fetchData();\n    } catch (error) {\n      console.error(\"Error completing task:\", error.message);\n      // toast.error(\"Failed to complete task. Please try again.\");\n    }\n  };\n\n  const totalActiveTask = tasks.filter(\n    (task) => task.status === \"Assigned\"\n  ).length;\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        🟢 Active Task Status ({totalActiveTask})\n      </h1>\n      <p className=\"text-muted mb-2\">\n        You can view all accepted task by manager here!\n      </p>{\" \"}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter(\n            (task) => task.status === \"Pending\" || task.status === \"Assigned\"\n          )\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.DepartmentName}\n            >\n              <summary\n                style={{\n                  color: \"black\",\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex text-white justify-content-between aline-center form-control\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{\n                          boxShadow: \"0 0 5px 2px gray inset\",\n                          color: \"black\"\n                        }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-danger col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => cancelTask(task._id)}\n                    >\n                      <MdCancel />\n                      Cancel Task\n                    </button>\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => updateTask(task._id)}\n                    >\n                      <MdEdit />\n                      Update Task\n                    </button>\n                    {allImage && allImage.length > 0 && (\n                      <button\n                        className=\"btn btn-warning col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => showPdf(task._id)}\n                      >\n                        <BsFiletypeDoc /> View Docs\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-success col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => completeTask(task._id)}\n                    >\n                      <FaCheck />\n                      Complete Task\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n      {/* Update Task Modal */}\n      <Modal\n        show={showUpdateModal}\n        fullscreen={false}\n        onHide={handleCloseUpdateModal}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"fw-bold text-uppercase\">\n            Update Task\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"d-flex flex-column gap-3\">\n            <Form.Group controlId=\"formTaskName\">\n              <Form.Label>Task Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={updatedTask.Taskname}\n                onChange={(e) =>\n                  setUpdatedTask({ ...updatedTask, Taskname: e.target.value })\n                }\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={updatedTask.description}\n                onChange={(e) =>\n                  setUpdatedTask({\n                    ...updatedTask,\n                    description: e.target.value\n                  })\n                }\n              />\n            </Form.Group>\n            <div className=\"row\">\n              <Form.Group className=\"col-12 col-md-6\" controlId=\"startDate\">\n                <Form.Label>Start Date </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={updatedTask.startDate}\n                  onChange={(e) =>\n                    setUpdatedTask({\n                      ...updatedTask,\n                      startDate: e.target.value\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"col-12 col-md-6\" controlId=\"endDate\">\n                <Form.Label>End Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={updatedTask.endDate}\n                  onChange={(e) =>\n                    setUpdatedTask({ ...updatedTask, endDate: e.target.value })\n                  }\n                />\n              </Form.Group>\n            </div>\n\n            {/* ... (similarly update other fields) */}\n\n            <Button variant=\"primary\" onClick={handleUpdate}>\n              Update\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdminTaskStatus;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst AdminCancleTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Cancelled\" }\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cancelled tasks:\", error.message);\n      setError(\"Error fetching cancelled tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchDataWithTimeout = async () => {\n      await fetchData();\n    };\n\n    fetchDataWithTimeout();\n  }, []);\n  const canceledTaskCount = tasks.filter(\n    (task) => task.status === \"Cancelled\"\n  ).length;\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ❌ Cancelled Task ({canceledTaskCount})\n      </h1>\n      <p className=\"text-muted\">You can view all Cancelled task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter((task) => task.status === \"Cancelled\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-danger fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-danger m-auto fw-bold\">Cancelled</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    c a n c e l l e d\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <div\n                    style={{ position: \"relative\" }}\n                    className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n                  >\n                    <div\n                      style={{\n                        width: \"99.4%\",\n                        height: \"100%\",\n                        zIndex: \"5\",\n                        backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                        textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                      }}\n                      className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                    >\n                      <h1 className=\"text-uppercase text-light fw-bolder\">\n                        c a n c e l l e d\n                      </h1>\n                    </div>\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"form-control\"\n                    >\n                      <p\n                        style={{ height: \"fit-content\" }}\n                        className=\"text-start fs-6 form-control\"\n                      >\n                        <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                        {task.description}\n                      </p>\n                      <div\n                        style={{ height: \"fit-content\" }}\n                        className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                      >\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Task Durations <br />{\" \"}\n                          <span>{task.duration} days</span>{\" \"}\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Manager's Email <br />{\" \"}\n                          <span>{task.managerEmail}</span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Start Date <br />{\" \"}\n                          <span>\n                            {new Date(task.startDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          End Date <br />{\" \"}\n                          <span>\n                            {new Date(task.endDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          <span>\n                            Task Status <br /> {task.status}\n                          </span>\n                        </p>\n                      </div>\n                      <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\n                        <p>\n                          <span className=\"fw-bold\">Remarks : </span>{\" \"}\n                          {task.comment}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCancleTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst AdminCompleteTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  });\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ✅ Completed Tasks\n      </h1>\n      <p className=\"text-muted\">You can view all Completed task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Completed\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-success m-auto  fw-bold\">Completed</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(0, 128, 0, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    C O M P L E T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCompleteTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst RejectedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ❌ Rejected Tasks\n      </h1>\n      <p className=\"text-muted\">You can view all rejected task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Rejected\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div>\n                  <p className=\"btn btn-light m-auto py-1 px-3 fw-bold\">\n                    Rejected\n                  </p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(5, 128, 8, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    R E J E C T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RejectedTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PiInfoFill } from \"react-icons/pi\";\nimport { FaCheck } from \"react-icons/fa6\";\nimport { MdCancel, MdEdit } from \"react-icons/md\";\n// import { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport BASE_URL from \"../../../Pages/config/config\";\nimport toast from \"react-hot-toast\";\n\nconst AdminAssignedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCanceling, setIsCanceling] = useState(false);\n  const [isCompleting, setIsCompleting] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [allImage, setAllImage] = useState(null);\n\n  const [updatedTask, setUpdatedTask] = useState({\n    id: \"\",\n    Taskname: \"\",\n    description: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    managerEmail: \"\",\n    duration: 0\n  });\n  const [totalAssignedTasks, setTotalAssignedTasks] = useState(0);\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n  useEffect(() => {\n    getPdf();\n  }, []);\n  const getPdf = async () => {\n    const result = await axios.get(`${BASE_URL}/api/getTask`);\n    console.log(result.data.data);\n    setAllImage(result.data.data);\n  };\n  const showPdf = (id) => {\n    let require =\n      allImage &&\n      allImage.filter((val) => {\n        return val._id === id;\n      });\n    console.log(require[0].pdf);\n    window.open(`${BASE_URL}/${require[0].pdf}`, \"_blank\", \"noreferrer\");\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      setTasks(response.data);\n\n      // Update the totalAssignedTasks state with the count of assigned tasks\n      const assignedTasksCount = response.data.filter(\n        (task) => task.status === \"Assigned\"\n      ).length;\n      setTotalAssignedTasks(assignedTasksCount);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  const cancelTask = async (taskId) => {\n    try {\n      setIsCanceling(true);\n\n      // Prompt the user for cancellation remarks\n      const cancellationRemarks = prompt(\n        \"Enter remarks for task cancellation:\"\n      );\n\n      if (cancellationRemarks === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsCanceling(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Cancelled\",\n        comment: cancellationRemarks\n      });\n\n      // Display success notification\n      toast.success(\"Task canceled successfully!\");\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsCanceling(false);\n    }\n  };\n\n  const updateTask = (taskId) => {\n    const taskToUpdate = tasks.find((task) => task._id === taskId);\n\n    if (taskToUpdate) {\n      setUpdatedTask({\n        id: taskToUpdate._id,\n        Taskname: taskToUpdate.Taskname,\n        description: taskToUpdate.description,\n        startDate: taskToUpdate.startDate,\n        endDate: taskToUpdate.endDate,\n        managerEmail: taskToUpdate.managerEmail,\n        duration: taskToUpdate.duration\n      });\n\n      setShowUpdateModal(true);\n    }\n\n    console.log();\n  };\n\n  const handleCloseUpdateModal = () => {\n    setShowUpdateModal(false);\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`${BASE_URL}/api/tasks/${updatedTask.id}`, {\n        Taskname: updatedTask.Taskname,\n        description: updatedTask.description,\n        startDate: updatedTask.startDate,\n        endDate: updatedTask.endDate,\n        managerEmail: updatedTask.managerEmail,\n        duration: updatedTask.duration\n      });\n\n      // Display success notification\n      toast.success(\"Task updated successfully!\");\n\n      // Close the update modal\n      handleCloseUpdateModal();\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error updating task:\", error.message);\n      toast.error(\"Failed to update task. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        🟡 Task Status ({totalAssignedTasks})\n      </h1>\n      <p className=\"text-muted\">You can view all Task Status here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter((task) => task.status === \"Assigned\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background: \"linear-gradient(#1D267D, #2F58CD)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control  text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Manager's Email <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-danger col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => cancelTask(task._id)}\n                    >\n                      <MdCancel />\n                      Cancel Task\n                    </button>\n                    {allImage && allImage.length > 0 && (\n                      <button\n                        className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => showPdf(task._id)}\n                      >\n                        <BsFiletypeDoc />\n                        View Docs\n                      </button>\n                    )}\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => updateTask(task._id)}\n                    >\n                      <MdEdit />\n                      Update Task\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n      {/* Update Task Modal */}\n      <Modal\n        show={showUpdateModal}\n        fullscreen={false}\n        onHide={handleCloseUpdateModal}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"fw-bold text-uppercase\">\n            Update Task\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"d-flex flex-column gap-3\">\n            <Form.Group controlId=\"formTaskName\">\n              <Form.Label>Task Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={updatedTask.Taskname}\n                onChange={(e) =>\n                  setUpdatedTask({ ...updatedTask, Taskname: e.target.value })\n                }\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={updatedTask.description}\n                onChange={(e) =>\n                  setUpdatedTask({\n                    ...updatedTask,\n                    description: e.target.value\n                  })\n                }\n              />\n            </Form.Group>\n            <div className=\"row\">\n              <Form.Group className=\"col-12 col-md-6\" controlId=\"startDate\">\n                <Form.Label>Start Date </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={updatedTask.startDate}\n                  onChange={(e) =>\n                    setUpdatedTask({\n                      ...updatedTask,\n                      startDate: e.target.value\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group className=\"col-12 col-md-6\" controlId=\"endDate\">\n                <Form.Label>End Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  value={updatedTask.endDate}\n                  onChange={(e) =>\n                    setUpdatedTask({\n                      ...updatedTask,\n                      endDate: e.target.value\n                    })\n                  }\n                />\n              </Form.Group>\n            </div>\n\n            <Button variant=\"primary\" onClick={handleUpdate}>\n              Update\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AdminAssignedTask;\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport { MdOutlineRefresh } from \"react-icons/md\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst SelfAttendance = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const empMail = localStorage.getItem(\"Email\");\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     fetchEmployees();\r\n  //   }, []);\r\n\r\n  //   const fetchEmployees = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\"${BASE_URL}/api/employee\", {\r\n  //         headers: {\r\n  //           authorization: localStorage.getItem(\"token\") || \"\"\r\n  //         }\r\n  //       });\r\n  //       setEmployees(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching employees:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${BASE_URL}/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // setIsButtonClicked(true);\r\n  useEffect(() => {\r\n    const handleFetchAttendance = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/attendance/${employeeId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n            }\r\n          }\r\n        );\r\n\r\n        let singleUser = response.data.filter((val) => {\r\n          return val.employeeObjID && val.employeeObjID.Email === empMail;\r\n        });\r\n\r\n        setAttendanceData(() => {\r\n          return singleUser.length > 0 ? singleUser[0] : null;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    handleFetchAttendance();\r\n  }, [employeeId, empMail]);\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      <div className=\"d-flex gap-3 justify-content-between\">\r\n        {/* <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  <p>\r\n                    🪪 ({employee.empID}) {employee.FirstName}\r\n                  </p>\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div> */}\r\n        {/* <button\r\n          disabled={!employeeId}\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \".5rem\" }}\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          <MdOutlineRefresh\r\n            className={`fs-4 ${isButtonClicked ? \"rotate\" : \"\"}`}\r\n          />{\" \"}\r\n          Get\r\n        </button> */}\r\n      </div>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SelfAttendance);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport SelfAttendance from \"./SelfAttendance\";\r\nimport Moment from \"moment\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nfunction SetLog(props) {\r\n  // const [employees, setEmployees] = useState([]);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  // const [attencenceID, setAttencenceID] = useState(\"\");\r\n  // const [message, setMessage] = useState(\"\");\r\n  const [empName, setEmpName] = useState(null);\r\n\r\n  const {\r\n    employees,\r\n    setEmployees,\r\n    selectedEmployee,\r\n    setSelectedEmployee,\r\n    attencenceID,\r\n    setAttencenceID,\r\n    message,\r\n    setMessage\r\n  } = useContext(AttendanceContext);\r\n\r\n  useEffect(() => {\r\n    const loadEmployeeData = async (email) => {\r\n      await axios\r\n        .get(`${BASE_URL}/api/employee`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((response) => {\r\n          // Ensure that response.data is an array\r\n          let admin = response.data.filter((val) => {\r\n            return val.Account === 1;\r\n          });\r\n          setEmployees(admin);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    loadEmployeeData();\r\n  }, []);\r\n  // hello\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/personal-info/` + props.data[\"_id\"],\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        console.log(response.data.FirstName);\r\n        setEmpName(response.data.FirstName);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  // hello\r\n  const handleUserChange = (employeeID) => {\r\n    const selectedEmployee = employees.find(\r\n      (employee) => employee._id === employeeID\r\n    );\r\n\r\n    if (selectedEmployee) {\r\n      setAttencenceID(selectedEmployee.attendanceObjID);\r\n      setSelectedEmployee(employeeID);\r\n      getMessage(employeeID);\r\n    }\r\n  };\r\n\r\n  const getMessage = async (employeeID) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeID}`\r\n      );\r\n      const lastEntry = response.data[response.data.length - 1];\r\n\r\n      if (lastEntry) {\r\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n      } else {\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    console.log(data);\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select a user\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        loginTime: [currentTime],\r\n        status: \"login\"\r\n      });\r\n      setMessage(\"Login time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording login time:\", error);\r\n      setMessage(\"Error recording login time\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        logoutTime: [currentTime],\r\n        status: \"logout\"\r\n      });\r\n      setMessage(\"Logout time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording logout time:\", error);\r\n      setMessage(\"Error recording logout time\");\r\n    }\r\n  };\r\n\r\n  const handleResume = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n          employeeId: selectedEmployee,\r\n          year: new Date().getFullYear(),\r\n          month: new Date().getMonth() + 1,\r\n          date: new Date().getDate(),\r\n          ResumeTime: [currentTime],\r\n          resumeTimeMS: [currentTimeMs],\r\n          status: \"resume\"\r\n        });\r\n\r\n        setMessage(\"Resumed time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording resume time:\", error);\r\n        setMessage(\"Error recording resume time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBreak = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      console.log(email);\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n          employeeId: selectedEmployee,\r\n          year: new Date().getFullYear(),\r\n          month: new Date().getMonth() + 1,\r\n          date: new Date().getDate(),\r\n          breakTime: [currentTime],\r\n          breakTimeMs: [currentTimeMs],\r\n          status: \"break\"\r\n        });\r\n        setMessage(\"Break time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording break time:\", error);\r\n        setMessage(\"Error recording break time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  return (\r\n    <div className=\"App row\">\r\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n      <div\r\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n        style={{ height: \"fit-content\" }}\r\n      >\r\n        {/* <select\r\n          className=\"form-select mx-2 w-25 \"\r\n          onChange={(e) => handleUserChange(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select User --</option>\r\n          {employees.map((employee) => (\r\n            <option key={employee._id} value={employee._id}>\r\n              {employee.FirstName}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n        <input value={empName} style={{ display: \"none\" }} />\r\n\r\n        <div className=\"d-flex gap-3\">\r\n          <button className=\"btn btn-success\" onClick={handleLogin}>\r\n            Mark Attendance\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n          <div className=\"d-flex gap-3\">\r\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n              Break\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleResume}>\r\n              Resume\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"view\">\r\n        <SelfAttendance />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetLog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport { MdOutlineRefresh } from \"react-icons/md\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = () => {\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      });\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeChange = (event) => {\r\n    setEmployeeId(event.target.value);\r\n  };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${BASE_URL}/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    setIsButtonClicked(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    } finally {\r\n      // Reset the isButtonClicked state after a delay to allow the animation to play\r\n      setTimeout(() => {\r\n        setIsButtonClicked(false);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      <div className=\"d-flex gap-3 justify-content-between\">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  <p>\r\n                    🪪 ({employee.empID}) {employee.FirstName}\r\n                  </p>\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <button\r\n          disabled={!employeeId}\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \".5rem\" }}\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          <MdOutlineRefresh\r\n            className={`fs-4 ${isButtonClicked ? \"rotate\" : \"\"}`}\r\n          />{\" \"}\r\n          Get\r\n        </button>\r\n      </div>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n","import React from \"react\";\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{ height: \"100%\", width: \"100%\", overflow: \"auto\" }}\r\n      className=\" d-flex flex-column justify-content-top  py-4 bg-white px-5\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Calendar } from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\"; // Import Axios\r\nimport \"./leave.css\";\r\nimport Container from \"./Container\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst LeaveCalendar = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [holidayName, setHolidayName] = useState(\"\");\r\n  const [holidayType, setHolidayType] = useState(\"National Holiday\");\r\n  const [holidays, setHolidays] = useState([]);\r\n  const [holidaysData, setHolidaysData] = useState([]);\r\n\r\n  const formatDate = (date) => {\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  };\r\n\r\n  const handleAddHoliday = async () => {\r\n    if (date && holidayName) {\r\n      const formattedDate = formatDate(date);\r\n      const newHoliday = {\r\n        holidayDate: formattedDate.getDate(),\r\n        holidayMonth: formattedDate.getMonth() + 1,\r\n        holidayYear: formattedDate.getFullYear(),\r\n        holidayName,\r\n        holidayType\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          `${BASE_URL}/api/Create-holiday`,\r\n          newHoliday\r\n        );\r\n\r\n        if (response.status === 201) {\r\n          const responseData = response.data;\r\n          setHolidays((prevHolidays) => [\r\n            ...prevHolidays,\r\n            responseData.newHoliday\r\n          ]);\r\n          setHolidayName(\"\");\r\n          setHolidayType(\"National Holiday\");\r\n          alert(\"Holiday Added Successfully\");\r\n        } else {\r\n          console.error(\"Failed to add holiday:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding holiday:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch holiday data when the component mounts\r\n    const fetchHolidays = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/api/holidays`);\r\n\r\n        if (response.status === 200) {\r\n          const data = response.data;\r\n          setHolidaysData(data);\r\n        } else {\r\n          console.error(\"Failed to fetch holiday data:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching holiday data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchHolidays();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"text-uppercase fs-5 fw-bold mb-2\">Holiday Calendar</h1>\r\n      <div className=\"row py-2 \">\r\n        <div className=\"col-12 col-md-4\">\r\n          <div className=\"card border-0\">\r\n            <div className=\"card-body\">\r\n              <Calendar\r\n                className=\"w-100\"\r\n                value={date}\r\n                onChange={setDate}\r\n                tileContent={({ date, view }) => {\r\n                  if (view === \"month\") {\r\n                    const formattedDate = new Date(date);\r\n                    formattedDate.setDate(formattedDate.getDate() + 1); // Subtract one day\r\n                    const formattedDateString = formattedDate\r\n                      .toISOString()\r\n                      .split(\"T\")[0];\r\n\r\n                    const holiday = holidays.find(\r\n                      (holiday) => holiday.date === formattedDateString\r\n                    );\r\n\r\n                    if (holiday) {\r\n                      return (\r\n                        <div className=\"holiday-marker\">\r\n                          <span className=\"squarepinch\"></span>\r\n                          {holiday.type}\r\n                        </div>\r\n                      );\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-4 d-flex\">\r\n          <div className=\"card border-0 h-100 w-100\">\r\n            <div className=\"card-body d-flex flex-column justify-between align-center\">\r\n              <h3>Holiday Management</h3>\r\n              <div className=\"mb-3\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  value={date.toISOString().split(\"T\")[0]}\r\n                  onChange={(e) => setDate(new Date(e.target.value))}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Holiday Name\"\r\n                  value={holidayName}\r\n                  onChange={(e) => setHolidayName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <select\r\n                  className=\"form-select\"\r\n                  value={holidayType}\r\n                  onChange={(e) => setHolidayType(e.target.value)}\r\n                >\r\n                  <option value=\"National Holiday\">National Holiday</option>\r\n                  <option value=\"Gazetted Holiday\">Gazetted Holiday</option>\r\n                  <option value=\"Restricted Holiday\">Restricted Holiday</option>\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={handleAddHoliday}\r\n              >\r\n                Add Holiday\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n          <div className=\"card border-0 h-100\">\r\n            <div className=\"card-body\">\r\n              <h6 className=\"text-uppercase fw-bolder\">Holiday List</h6>\r\n\r\n              <table className=\"table striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Month</th>\r\n                    <th>Year</th>\r\n                    <th>Name</th>\r\n                    <th>Type</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {holidaysData.map((holiday, index) => (\r\n                    <tr key={index}>\r\n                      <td>{holiday.holidayDate}</td>\r\n                      <td>{holiday.holidayMonth}</td>\r\n                      <td>{holiday.holidayYear}</td>\r\n                      <td>{holiday.holidayName}</td>\r\n                      <td>{holiday.holidayType}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LeaveCalendar;\r\n","import React, { Component } from \"react\";\nimport \"./CountryTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport BASE_URL from \"../config/config\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nclass CountryTable extends Component {\n  state = {\n    countryData: [],\n    loading: true,\n\n    columnDefs: [\n      {\n        headerName: \"Country\",\n        field: \"CountryName\",\n        sortable: true\n        // width: 150,\n        // filter: true ,\n      },\n\n      {\n        headerName: \"\",\n        field: \"edit\",\n        filter: false,\n        width: 30,\n        cellRendererFramework: this.renderEditButton.bind(this)\n      },\n      {\n        headerName: \"\",\n        field: \"delete\",\n        filter: false,\n        width: 30,\n        cellRendererFramework: this.renderButton.bind(this)\n      }\n    ],\n    rowData: [],\n    defaultColDef: {\n      resizable: true,\n      width: 1180,\n      filter: \"agTextColumnFilter\"\n      // filter: true ,\n    },\n    getRowHeight: function (params) {\n      return 35;\n    }\n  };\n  countryObj = [];\n  rowDataT = [];\n\n  // countryDataArray;\n  loadCountryData = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.countryObj=[\"temp\"];}\n        // else{\n        this.countryObj = response.data;\n        // }\n        console.log(\"response\", response.data);\n        this.setState({ countryData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.countryObj.map((data) => {\n          let temp = {\n            data,\n            CountryName: data[\"CountryName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n        this.setState({ rowData: this.rowDataT });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onCountryDelete = (e) => {\n    console.log(e);\n    // let body= \"ID=\" + e;\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(`${BASE_URL}/api/country/` + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          // console.log(res);\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  componentDidMount() {\n    this.loadCountryData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onCountryDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditCountry(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div className=\"container-fluid mb-5\">\n        <h2 id=\"role-title\">Country Details</h2>\n        {/* <Link to=\"/admin/role/form\"> */}\n        {/* <button id=\"add-button\" >\n          \n          Add\n        </button> */}\n        <Button\n          variant=\"primary\"\n          id=\"add-button\"\n          onClick={this.props.onAddCountry}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Add\n        </Button>\n        <div id=\"clear-both\" />\n        {!this.state.loading ? (\n          // <div\n          //   id=\"table-div\"\n          //   className=\"ag-theme-balham\"\n          // //   style={\n          // //     {\n          // //     height: \"500px\",\n          // //     width: \"100%\"\n          // //   }\n          // // }\n          // >\n          //   <AgGridReact\n          //     columnDefs={this.state.columnDefs}\n          //     defaultColDef={this.state.defaultColDef}\n          //     columnTypes={this.state.columnTypes}\n          //     rowData={this.state.rowData}\n          //     // floatingFilter={true}\n          //     // onGridReady={this.onGridReady}\n          //     pagination={true}\n          //     paginationPageSize={10}\n          //     getRowHeight={this.state.getRowHeight}\n          //   />\n          // </div>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Country\n                </th>\n\n                {/* <th\n                  style={{\n                    background:\n                      \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                    color: \"white\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Action\n                </th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.countryData.map((items, index) => (\n                <tr key={index}>\n                  <td>{items.CountryName}</td>\n\n                  {/* <td>\n                    <button\n                      onClick={() => this.props.onEditCountry(items.data)}\n                      style={{\n                        zIndex: \"1\",\n                        cursor: \"pointer\"\n                      }}\n                      className=\"btn\"\n                    >\n                      <FaRegEdit className=\"fs-4 text-primary bg-white p-1 rounded-5\" />\n                    </button>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CountryTable;\n","import React, { Component } from \"react\";\nimport \"./CountryForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Form,Button,Col,Row } from \"react-bootstrap\";\n// import Form from 'react-bootstrap/Form'\n\n\nclass CountryForm extends Component {\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div>\n  \n        <h2 id=\"role-form-title\">Add Country Details</h2>\n     \n            \n <div id=\"role-form-outer-div\"><Form id=\"form\" onSubmit={this.props.onCountrySubmit}>\n  \n\n\n  <Form.Group as={Row}>\n    <Form.Label column sm={2}>\n    Country\n    </Form.Label>\n    <Col sm={10}  className=\"form-input\">\n      <Form.Control type=\"Text\" placeholder=\"Country\" name=\"Country\" required/>\n    </Col>\n  </Form.Group>\n \n  \n\n  <Form.Group as={Row} id=\"form-submit-button\">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type=\"submit\">Submit</Button>\n    </Col>\n  </Form.Group>\n  <Form.Group as={Row} id=\"form-cancel-button\">\n    <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n      <Button type=\"reset\" onClick={this.props.onFormClose}>cancel</Button>\n    </Col>\n  </Form.Group>\n</Form></div>\n\n\n\n\n\n          {/* </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default CountryForm;\n","import React, { Component } from \"react\";\n// import \"./CountryForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CountryForm extends Component {\n  state = {\n    CountryData: this.props.editData[\"CountryName\"]\n  };\n  onChange(e) {\n    this.setState({ CountryData: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit Country Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={e =>\n              this.props.onCountryEditUpdate(\n                this.props.editData,\n                e\n                //   e.target[1].value\n              )\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Country\"\n                  name=\"CountryName\"\n                  required\n                  value={this.state.CountryData}\n                  onChange={value => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CountryForm;\n","import React, { Component } from \"react\";\nimport \"./Country.css\";\nimport axios from \"axios\";\nimport CountryTable from \"./CountryTable.jsx\";\nimport CountryForm from \"./CountryForm.jsx\";\nimport CountryFormEdit from \"./CountryFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n// function CountryTableF() {\n//   return <CountryTable/>;\n// }\n// function CountryFormF() {\n//   return  <CountryForm onCountrySubmit={handleCountrySubmit}/>;\n// }\n\n// function handleCountrySubmit(e) {\n//   e.preventDefault();\n//   console.log(e);\n\n// }\n\nclass Country extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {}\n  };\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      //  <Router>\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <CountryFormEdit\n              onCountryEditUpdate={this.handleCountryEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n            />\n          ) : (\n            <CountryTable\n              onAddCountry={this.handleAddCountry}\n              onEditCountry={this.handleEditCountry}\n            />\n          )\n        ) : (\n          <CountryForm\n            onCountrySubmit={this.handleCountrySubmit}\n            onFormClose={this.handleFormClose}\n          />\n        )}\n\n        {/* <div>debru</div> */}\n        {/* <Route path=\"/admin/country/table\" exact component={CountryTable} /> */}\n        {/* <Route path=\"/admin/country/form\" exact component={() => <CountryForm onCountrySubmit={this.handleCountrySubmit} />} /> */}\n\n        {/* <CountryTable/> */}\n      </React.Fragment>\n\n      //  </Router>\n    );\n  }\n  handleCountrySubmit = (event) => {\n    event.preventDefault();\n    console.log(\"name\", event.target[0].value);\n    this.setState({ table: false });\n\n    let body = {\n      CountryName: event.target[0].value\n    };\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&Country=\" + event.target[1].value;\n    //  let body= \"debru\";\n    axios\n      .post(`${BASE_URL}/api/country`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // this.setState({ loading: true });\n    // this.login(event.target[0].value, event.target[1].value);\n    // event.target.reset();\n  };\n  handleAddCountry = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditCountry = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleCountryEditUpdate = (info, newInfo) => {\n    // this.setState({ table: true });\n    let body = {\n      // ...info,CompanyID:formData1,Country:formData2\n      //   CompanyID: formData1,\n      CountryName: newInfo.target[0].value\n      //   CountryID: info[\"CountryID\"]\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/country/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default Country;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst StateTable = (props) => {\n  const [stateData, setStateData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n\n  const loadStateData = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const stateObj = response.data;\n        setStateData(stateObj);\n        setLoading(false);\n        const rowDataT = stateObj.map((data) => ({\n          data,\n          CountryName: data[\"country\"][0][\"CountryName\"],\n          StateName: data[\"StateName\"]\n        }));\n        setRowData(rowDataT);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onStateDelete = (id) => {\n    if (window.confirm(\"Are you sure to delete this record?\")) {\n      axios\n        .delete(`${BASE_URL}/api/state/${id}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadStateData();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status === 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadStateData();\n  }, []);\n\n  const renderButton = (params) => (\n    <FontAwesomeIcon\n      icon={faTrash}\n      onClick={() => onStateDelete(params.data.data[\"_id\"])}\n    />\n  );\n\n  const renderEditButton = (params) => (\n    <FontAwesomeIcon\n      icon={faEdit}\n      onClick={() => props.onEditState(params.data.data)}\n    />\n  );\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-between aline-items-start mb-3\">\n        <div className=\" my-auto\">\n          <h3 className=\"fw-bold text-muted\">State Details</h3>\n          <p>You can create new state and view all state details here!</p>\n        </div>\n\n        <Button\n          variant=\"primary\"\n          className=\"my-auto\"\n          id=\"add-button\"\n          onClick={props.onAddState}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Add new State\n        </Button>\n      </div>\n\n      <div id=\"clear-both\"></div>\n\n      {!loading ? (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n              >\n                Country\n              </th>\n              <th\n                style={{\n                  background: \"var(--primaryDashColorDark)\",\n                  color: \"var(--primaryDashMenuColor)\"\n                }}\n              >\n                State\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {stateData.map((items, index) => (\n              <tr key={index}>\n                <td className=\"text-uppercase\">\n                  {items.country[0].CountryName}\n                </td>\n                <td className=\"text-uppercase\">{items.StateName}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StateTable;\n\n// import React, { Component } from \"react\";\n// import \"./StateTable.css\";\n// import axios from \"axios\";\n// // import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n// import { RingLoader } from \"react-spinners\";\n// import { css } from \"@emotion/core\";\n// import { Button } from \"react-bootstrap\";\n// import BASE_URL from \"../config/config\";\n\n// // var FontAwesome = require('react-fontawesome');\n// import \"ag-grid-community/dist/styles/ag-grid.css\";\n// import \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\n// const override = css`\n//   display: block;\n//   margin: 0 auto;\n//   margin-top: 45px;\n//   border-color: red;\n// `;\n// class StateTable extends Component {\n//   state = {\n//     stateData: [],\n//     loading: true,\n//     rowData: []\n//   };\n\n//   // stateDataArray;\n//   loadStateData = () => {\n//     axios\n//       .get(`${BASE_URL}/api/state`, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then((response) => {\n//         // if(response.data.length==0){this.stateObj=[\"temp\"];}\n//         // else{\n//         this.stateObj = response.data;\n//         // }\n//         console.log(\"response\", response.data);\n//         this.setState({ stateData: response.data });\n//         this.setState({ loading: false });\n//         this.rowDataT = [];\n\n//         this.stateObj.map((data) => {\n//           let temp = {\n//             data,\n//             CountryName: data[\"country\"][0][\"CountryName\"],\n//             StateName: data[\"StateName\"]\n//           };\n\n//           this.rowDataT.push(temp);\n//         });\n//         this.setState({ rowData: this.rowDataT });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n\n//   onStateDelete = (e) => {\n//     console.log(e);\n//     // let body= \"ID=\" + e;\n//     if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n//       axios\n//         .delete(`${BASE_URL}/api/state/` + e, {\n//           headers: {\n//             authorization: localStorage.getItem(\"token\") || \"\"\n//           }\n//         })\n//         .then((res) => {\n//           this.componentDidMount();\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//           console.log(err.response);\n//           if (err.response.status == 403) {\n//             window.alert(err.response.data);\n//           }\n//         });\n//     }\n//   };\n\n//   componentDidMount() {\n//     this.loadStateData();\n//   }\n//   renderButton(params) {\n//     console.log(params);\n//     return (\n//       <FontAwesomeIcon\n//         icon={faTrash}\n//         onClick={() => this.onStateDelete(params.data.data[\"_id\"])}\n//       />\n//     );\n//   }\n//   renderEditButton(params) {\n//     console.log(params);\n//     return (\n//       <FontAwesomeIcon\n//         icon={faEdit}\n//         onClick={() => this.props.onEditState(params.data.data)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"p-4\">\n//         <div className=\"d-flex justify-between aline-items-start mb-3\">\n//           <div className=\" my-auto\">\n//             <h3 className=\"fw-bold text-muted\">State Details</h3>\n//             <p>You can create new state and view all state details here !</p>\n//           </div>\n\n//           <Button\n//             variant=\"primary\"\n//             className=\"my-auto\"\n//             id=\"add-button\"\n//             onClick={this.props.onAddState}\n//           >\n//             <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n//             Add new State\n//           </Button>\n//         </div>\n\n//         <div id=\"clear-both\"></div>\n\n//         {!this.state.loading ? (\n//           <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th\n//                   style={{\n//                     background: \"var(--primaryDashColorDark)\",\n//                     color: \"var(--primaryDashMenuColor)\"\n//                   }}\n//                 >\n//                   Country\n//                 </th>\n//                 <th\n//                   style={{\n//                     background: \"var(--primaryDashColorDark)\",\n//                     color: \"var(--primaryDashMenuColor)\"\n//                   }}\n//                 >\n//                   State\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {this.state.stateData.map((items, index) => (\n//                 <tr key={index}>\n//                   <td className=\"text-uppercase\">\n//                     {items.country[0].CountryName}\n//                   </td>\n//                   <td className=\"text-uppercase\">{items.StateName}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         ) : (\n//           <div id=\"loading-bar\">\n//             <RingLoader\n//               css={override}\n//               sizeUnit={\"px\"}\n//               size={50}\n//               color={\"#0000ff\"}\n//               loading={true}\n//             />\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default StateTable;\n","import React, { Component } from \"react\";\nimport \"./StateForm.css\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass StateForm extends Component {\n  state = {\n    countryInfo: []\n  };\n  countryData = [];\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.countryData = response.data;\n\n        this.setState({ countryInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add State Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onStateSubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.countryData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"State\"\n                  name=\"State\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StateForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nclass StateForm extends Component {\n  state = {\n    StateData: this.props.editData[\"StateName\"],\n    countryInfo: []\n  };\n  countryData = [];\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.countryData = response.data;\n\n        this.setState({ portalsInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n  }\n  onChange(e) {\n    this.setState({ StateData: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit State Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onStateEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"country\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.countryData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"country\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"CountryName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"State\"\n                  name=\"StateName\"\n                  required\n                  value={this.state.StateData}\n                  onChange={(value) => this.onChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StateForm;\n","import React, { Component } from \"react\";\nimport \"./State.css\";\nimport axios from \"axios\";\nimport StateTable from \"./StateTable.jsx\";\nimport StateForm from \"./StateForm.jsx\";\nimport StateFormEdit from \"./StateFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n// function StateTableF() {\n//   return <StateTable/>;\n// }\n// function StateFormF() {\n//   return  <StateForm onStateSubmit={handleStateSubmit}/>;\n// }\n\n// function handleStateSubmit(e) {\n//   e.preventDefault();\n//   console.log(e);\n\n// }\n\nclass State extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {}\n  };\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      //  <Router>\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <StateFormEdit\n              onStateEditUpdate={this.handleStateEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n            />\n          ) : (\n            <StateTable\n              onAddState={this.handleAddState}\n              onEditState={this.handleEditState}\n            />\n          )\n        ) : (\n          <StateForm\n            onStateSubmit={this.handleStateSubmit}\n            onFormClose={this.handleFormClose}\n          />\n        )}\n\n        {/* <div>debru</div> */}\n        {/* <Route path=\"/admin/state/table\" exact component={StateTable} /> */}\n        {/* <Route path=\"/admin/state/form\" exact component={() => <StateForm onStateSubmit={this.handleStateSubmit} />} /> */}\n\n        {/* <StateTable/> */}\n      </React.Fragment>\n\n      //  </Router>\n    );\n  }\n  handleStateSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    this.setState({ table: true });\n\n    let body = {\n      CountryID: event.target[0].value,\n      StateName: event.target[1].value\n    };\n    //  let body= \"CompanyID=\" + event.target[0].value + \"&State=\" + event.target[1].value;\n    //  let body= \"debru\";\n    axios\n      .post(`${BASE_URL}/api/state`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // this.setState({ loading: true });\n    // this.login(event.target[0].value, event.target[1].value);\n    // event.target.reset();\n  };\n  handleAddState = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditState = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleStateEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    // this.setState({ table: true });\n    let body = {\n      CountryID: newInfo.target[0].value,\n      StateName: newInfo.target[1].value\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/state/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default State;\n","import React, { Component } from \"react\";\nimport \"./CityTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\nclass CityTable extends Component {\n  state = {\n    cityData: [],\n    loading: true,\n    rowData: []\n  };\n  cityObj = [];\n  rowDataT = [];\n\n  // stateDataArray;\n  loadCityData = () => {\n    axios\n      .get(\"http://localhost:4000/api/city\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // if(response.data.length==0){this.cityObj=[\"temp\"];}\n        // else{\n        this.cityObj = response.data;\n        // }\n        console.log(\"response\", response.data);\n        this.setState({ cityData: response.data });\n        this.setState({ loading: false });\n        this.rowDataT = [];\n\n        this.cityObj.map((data) => {\n          let temp = {\n            data,\n            CountryName: data[\"state\"][0][\"country\"][0][\"CountryName\"],\n            StateName: data[\"state\"][0][\"StateName\"],\n            CityName: data[\"CityName\"]\n          };\n\n          this.rowDataT.push(temp);\n        });\n        this.setState({ rowData: this.rowDataT });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  onCityDelete = (e) => {\n    console.log(e);\n    // let body= \"ID=\" + e;\n    if (window.confirm(\"Are you sure to delete this record ? \") == true) {\n      axios\n        .delete(\"http://localhost:4000/api/city/\" + e, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          this.componentDidMount();\n        })\n        .catch((err) => {\n          console.log(err);\n          console.log(err.response);\n          if (err.response.status == 403) {\n            window.alert(err.response.data);\n          }\n        });\n    }\n  };\n  componentDidMount() {\n    this.loadCityData();\n  }\n  renderButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() => this.onCityDelete(params.data.data[\"_id\"])}\n      />\n    );\n  }\n  renderEditButton(params) {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => this.props.onEditCity(params.data.data)}\n      />\n    );\n  }\n\n  render() {\n    // let value=(this.props.pass) ? undefined : \"\";<i class=\"fas fa-plus\"></i>\n    return (\n      <div className=\"p-4\">\n        <div className=\"d-flex justify-between aline-items-start mb-3\">\n          <div className=\" my-auto\">\n            <h3 className=\"fw-bold text-muted\">City Details</h3>\n            <p>You can create new city and view all cities details here !</p>\n          </div>\n\n          <Button\n            variant=\"primary\"\n            className=\"my-auto\"\n            id=\"add-button\"\n            onClick={this.props.onAddCity}\n          >\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add new City\n          </Button>\n        </div>\n        <div id=\"clear-both\" />\n\n        {!this.state.loading ? (\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  Country\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  State\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  className=\"py-1\"\n                >\n                  City\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.cityData.map((items, index) => (\n                <tr key={index}>\n                  <td>{items.state[0].country[0].CountryName}</td>\n                  <td>{items.state[0].StateName}</td>\n                  <td>{items.CityName}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CityTable;\n","import React, { Component } from \"react\";\nimport \"./CityForm.css\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CityForm extends Component {\n  state = {\n    stateData: [],\n    filteredStateData: [],\n    countryData: [],\n    filteredCountryData: []\n  };\n\n  onChange(e) {\n    this.setState({ CityData: e.target.value });\n  }\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add City Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onCitySubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"StateName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"City\"\n                  name=\"City\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CityForm;\n","import React, { Component } from \"react\";\n// import \"./CityForm.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport BASE_URL from \"../config/config\";\n\nclass CityForm extends Component {\n  state = {\n    CityData: this.props.editData[\"CityName\"],\n    stateData: [],\n    filteredStateData: [],\n    countryData: [],\n    filteredCountryData: []\n  };\n\n  onChange(e) {\n    this.setState({ CityData: e.target.value });\n  }\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n\n  onSelectCountry = (e, data) => {\n    return this.props.editData[\"state\"][0][\"country\"][0][\"_id\"] == data[\"_id\"];\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit City Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onCityEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option\n                      value={data[\"_id\"]}\n                      selected={\n                        this.props.editData[\"state\"][0][\"_id\"] == data[\"_id\"]\n                      }\n                    >\n                      {data[\"StateName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"City\"\n                  name=\"City\"\n                  required\n                  onChange={(value) => this.onChange(value)}\n                  value={this.state.CityData}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CityForm;\n// onChange={value => this.onChange(value)}\n","import React, { useState, useEffect } from \"react\";\nimport \"./City.css\";\nimport axios from \"axios\";\nimport CityTable from \"./CityTable.jsx\";\nimport CityForm from \"./CityForm.jsx\";\nimport CityFormEdit from \"./CityFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nconst City = () => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleCitySubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    const body = {\n      StateID: event.target[1].value,\n      CityName: event.target[2].value\n    };\n\n    axios\n      .post(`${BASE_URL}/api/city`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddCity = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditCity = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleCityEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    setTable(true);\n\n    const body = {\n      StateID: newInfo.target[1].value,\n      CityName: newInfo.target[2].value\n    };\n\n    axios\n      .put(`${BASE_URL}/api/city/${info[\"_id\"]}`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        console.log(\n          \"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\"\n        );\n        setEditForm(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <CityFormEdit\n            onCityEditUpdate={handleCityEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <CityTable onAddCity={handleAddCity} onEditCity={handleEditCity} />\n        )\n      ) : (\n        <CityForm\n          onCitySubmit={handleCitySubmit}\n          onFormClose={handleFormClose}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default City;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst AdminCompanyTable = (props) => {\n  const [companyData, setCompanyData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadCompanyData();\n  }, []);\n\n  const loadCompanyData = () => {\n    axios\n      .get(`${BASE_URL}/api/company`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setCompanyData(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onCompanyDelete = (id) => {\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/company/${id}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadCompanyData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-between aline-items-start mb-3\">\n        <h4 className=\"fw-bold text-muted\">Company Details</h4>\n        <Button\n          className=\"my-auto\"\n          variant=\"primary shadow-sm\"\n          onClick={props.onAddCompany}\n        >\n          <FontAwesomeIcon icon={faPlus} className=\"me-2\" />\n          Create Company\n        </Button>\n      </div>\n\n      {!loading ? (\n        <div\n          className=\"pr-5 pr-sm-0\"\n          style={{ height: \"70vh\", overflow: \"auto\", maxWidth: \"95%\" }}\n        >\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Company Name\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Address\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Country\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  State\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  City\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Postal Code\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Website\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Email\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Contact Person\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Contact No\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Fax No\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Pan No\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  GST No\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  CIN No\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Edit\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    whiteSpace: \"pre\"\n                  }}\n                >\n                  Delete\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {companyData.map((item, index) => (\n                <tr key={index}>\n                  <td\n                    style={{ whiteSpace: \"pre\" }}\n                    className=\"text-capitalize fw-bold text-primary\"\n                  >\n                    {item.CompanyName}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase \">\n                    {item.Address}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase \">\n                    {item.city[0].state[0].country[0].CountryName}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase \">\n                    {item.city[0].state[0].StateName}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase \">\n                    {item.city[0].CityName}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }}>{item.PostalCode}</td>\n                  <td style={{ whiteSpace: \"pre\" }}>{item.Website}</td>\n                  <td style={{ whiteSpace: \"pre\" }}>{item.Email}</td>\n                  <td style={{ whiteSpace: \"pre\" }}>{item.ContactPerson}</td>\n                  <td style={{ whiteSpace: \"pre\" }}>{item.ContactNo}</td>\n                  <td style={{ whiteSpace: \"pre\" }}>{item.FaxNo}</td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase\">\n                    {item.PanNo}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase\">\n                    {item.GSTNo}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }} className=\"text-uppercase\">\n                    {item.CINNo}\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }}>\n                    <FontAwesomeIcon\n                      icon={faEdit}\n                      onClick={() => props.onEditCompany(item)}\n                    />\n                  </td>\n                  <td style={{ whiteSpace: \"pre\" }}>\n                    <FontAwesomeIcon\n                      icon={faTrash}\n                      onClick={() => onCompanyDelete(item._id)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"d-flex justify-content-center\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminCompanyTable;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./CompanyForm.css\";\nimport BASE_URL from \"../config/config\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CompanyForm extends Component {\n  state = {\n    countryData: [],\n    stateData: [],\n    cityData: [],\n    filteredCountryData: [],\n    filteredStateData: [],\n    filteredCityData: []\n  };\n\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadCityInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/city`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ cityData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n    this.loadCityInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  onStateChange(e) {\n    console.log(e.target.value);\n    let currentState = e.target.value;\n\n    let filteredCity = this.state.cityData.filter(\n      (data) => data[\"state\"][0][\"_id\"] == currentState\n    );\n    this.setState({ filteredCityData: filteredCity });\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add Company Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onCompanySubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Company Name\"\n                  name=\"CompanyName\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Address\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  plassholder=\"address\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CountryName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  required\n                  onChange={this.onStateChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"StateName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredCityData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CityName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PostalCode\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"number\" placeholder=\"PostalCode\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Website\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"Website\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"email\" placeholder=\"Email\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact Person\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Contact Person\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"Contact No\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                FaxNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"FaxNo\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PanCard No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\" PanCard No  \"\n                  required\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                GSTNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"GSTNo\" required />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                CINNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control type=\"Text\" placeholder=\"CINNo\" required />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n\n        {/* </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default CompanyForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport \"./CompanyFormEdit.css\";\nimport BASE_URL from \"../config/config\";\n\nclass CompanyFormEdit extends Component {\n  state = {\n    status: \"\",\n    countryData: [],\n    stateData: [],\n    cityData: [],\n    filteredCountryData: [],\n    filteredStateData: [],\n    filteredCityData: [],\n\n    CompanyNameData: this.props.editData[\"CompanyName\"],\n    AddressData: this.props.editData[\"Address\"],\n    PostalCodeData: this.props.editData[\"PostalCode\"],\n    WebsiteData: this.props.editData[\"Website\"],\n    EmailData: this.props.editData[\"Email\"],\n    ContactPersonData: this.props.editData[\"ContactPerson\"],\n    ContactNoData: this.props.editData[\"ContactNo\"],\n    FaxNoData: this.props.editData[\"FaxNo\"],\n    PanNoData: this.props.editData[\"PanNo\"],\n    GSTNoData: this.props.editData[\"GSTNo\"],\n    CINNoData: this.props.editData[\"CINNo\"]\n  };\n  onCompanyNameDataChange(e) {\n    this.setState({ CompanyNameData: e.target.value });\n  }\n  onAddressDataChange(e) {\n    this.setState({ AddressData: e.target.value });\n  }\n  onPostalCodeDataChange(e) {\n    this.setState({ PostalCodeData: e.target.value });\n  }\n  onWebsiteDataChange(e) {\n    this.setState({ WebsiteData: e.target.value });\n  }\n  onEmailDataChange(e) {\n    this.setState({ EmailData: e.target.value });\n  }\n  onContactPersonDataChange(e) {\n    this.setState({ ContactPersonData: e.target.value });\n  }\n  onContactNoDataChange(e) {\n    this.setState({ ContactNoData: e.target.value });\n  }\n  onFaxNoDataChange(e) {\n    this.setState({ FaxNoData: e.target.value });\n  }\n  onPanNoDataChange(e) {\n    this.setState({ PanNoData: e.target.value });\n  }\n  onGSTNoDataChange(e) {\n    this.setState({ GSTNoData: e.target.value });\n  }\n  onCINNoDataChange(e) {\n    this.setState({ CINNoData: e.target.value });\n  }\n\n  loadCountryInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/country`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ countryData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/state`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ stateData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  loadCityInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/city`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        this.setState({ cityData: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n    this.loadCityInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n\n    let filteredState = this.state.stateData.filter(\n      (data) => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  onStateChange(e) {\n    console.log(e.target.value);\n    let currentState = e.target.value;\n    let filteredCity = this.state.cityData.filter(\n      (data) => data[\"state\"][0][\"_id\"] == currentState\n    );\n    this.setState({ filteredCityData: filteredCity });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2 id=\"role-form-title\">Edit Project Bid Details</h2>\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={(e) =>\n              this.props.onCompanyEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Company Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Company Name\"\n                  name=\"CompanyName\"\n                  value={this.state.CompanyNameData}\n                  onChange={(value) => this.onCompanyNameDataChange(value)}\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Address\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  plassholder=\"address\"\n                  required\n                  value={this.state.AddressData}\n                  onChange={(value) => this.onAddressDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CountryName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  required\n                  onChange={this.onStateChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"StateName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredCityData.map((data, index) => (\n                    <option key={index} value={data[\"_id\"]}>\n                      {data[\"CityName\"]}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PostalCode\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"PostalCode\"\n                  required\n                  value={this.state.PostalCodeData}\n                  onChange={(value) => this.onPostalCodeDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Website\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Website\"\n                  required\n                  value={this.state.WebsiteData}\n                  onChange={(value) => this.onWebsiteDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  value={this.state.EmailData}\n                  onChange={(value) => this.onEmailDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact Person\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Contact Person\"\n                  required\n                  value={this.state.ContactPersonData}\n                  onChange={(value) => this.onContactPersonDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Contact No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Contact No\"\n                  required\n                  value={this.state.ContactNoData}\n                  onChange={(value) => this.onContactNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                FaxNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"FaxNo\"\n                  required\n                  value={this.state.FaxNoData}\n                  onChange={(value) => this.onFaxNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                PanCard No\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\" PanCard No  \"\n                  required\n                  value={this.state.PanNoData}\n                  onChange={(value) => this.onPanNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                GSTNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"GSTNo\"\n                  required\n                  value={this.state.GSTNoData}\n                  onChange={(value) => this.onGSTNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                CINNo\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"CINNo\"\n                  required\n                  value={this.state.CINNoData}\n                  onChange={(value) => this.onCINNoDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CompanyFormEdit;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CompanyTable from \"./CompanyTable.jsx\";\nimport CompanyForm from \"./CompanyForm.jsx\";\nimport CompanyFormEdit from \"./CompanyFormEdit.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nclass Company extends Component {\n  state = {\n    table: true,\n    editForm: false,\n    editData: {}\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.table ? (\n          this.state.editForm ? (\n            <CompanyFormEdit\n              onCompanyEditUpdate={this.handleCompanyEditUpdate}\n              onFormEditClose={this.handleEditFormClose}\n              editData={this.state.editData}\n            />\n          ) : (\n            <CompanyTable\n              onAddCompany={this.handleAddCompany}\n              onEditCompany={this.handleEditCompany}\n            />\n          )\n        ) : (\n          <CompanyForm\n            onCompanySubmit={this.handleCompanySubmit}\n            onFormClose={this.handleFormClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n  handleCompanySubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    this.setState({ table: true });\n\n    let body = {\n      CompanyName: event.target[0].value,\n      Address: event.target[1].value,\n      CityID: event.target[4].value,\n      PostalCode: event.target[5].value,\n      Website: event.target[6].value,\n      Email: event.target[7].value,\n      ContactPerson: event.target[8].value,\n      ContactNo: event.target[9].value,\n      FaxNo: event.target[10].value,\n      PanNo: event.target[11].value,\n      GSTNo: event.target[12].value,\n      CINNo: event.target[13].value\n    };\n    axios\n      .post(`${BASE_URL}/api/company`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  handleAddCompany = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: false });\n  };\n  handleEditCompany = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    this.setState({ editForm: true });\n    this.setState({ editData: e });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    this.setState({ editForm: false });\n  };\n  handleFormClose = () => {\n    console.log(\"clicked1\");\n    this.setState({ table: true });\n  };\n  handleCompanyEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    let body = {\n      CompanyName: newInfo.target[0].value,\n      Address: newInfo.target[1].value,\n      CityID: newInfo.target[4].value,\n      PostalCode: newInfo.target[5].value,\n      Website: newInfo.target[6].value,\n      Email: newInfo.target[7].value,\n      ContactPerson: newInfo.target[8].value,\n      ContactNo: newInfo.target[9].value,\n      FaxNo: newInfo.target[10].value,\n      PanNo: newInfo.target[11].value,\n      GSTNo: newInfo.target[12].value,\n      CINNo: newInfo.target[13].value\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/company/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // this.componentDidMount();\n        this.setState({ table: false });\n        this.setState({ table: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({ editForm: false });\n  };\n}\n\nexport default Company;\n","import React from \"react\";\r\n\r\nconst InnerDashContainer = ({ children }) => {\r\n  return (\r\n    <div\r\n      className=\"py-2\"\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        maxHeight: \"100vh\",\r\n        width: \"100%\",\r\n        overflow: \"auto\"\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InnerDashContainer;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button, Table } from \"react-bootstrap\";\nimport InnerDashContainer from \"../../Component/InnerDashContainer\";\nimport BASE_URL from \"../config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationEmpTable = (props) => {\n  const [leaveApplicationEmpData, setLeaveApplicationEmpData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n  const userId = props.data && props.data._id;\n\n  const loadLeaveApplicationEmpData = () => {\n    axios\n      .get(\n        `${BASE_URL}/api/leave-application-emp/` + localStorage.getItem(\"_id\"),\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((response) => {\n        const leaveApplicationEmpObj = response.data;\n        console.log(\"response\", response.data);\n        setLeaveApplicationEmpData(response.data);\n        setLoading(false);\n\n        const newRowsData = leaveApplicationEmpObj.leaveApplication.map(\n          (data) => {\n            return {\n              data,\n              Leavetype: data[\"Leavetype\"],\n              FromDate: data[\"FromDate\"].slice(0, 10),\n              ToDate: data[\"ToDate\"].slice(0, 10),\n              Reasonforleave: data[\"Reasonforleave\"],\n              Status: data[\"Status\"]\n            };\n          }\n        );\n\n        setRowData(newRowsData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onLeaveApplicationEmpDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-emp/${e1}/${e2}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationEmpData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n    return \"Unknown Status\";\n  };\n\n  const onEdit = (data) => {\n    if (data[\"Status\"] === 1) {\n      props.onEditLeaveApplicationEmp(data);\n    } else {\n      window.alert(\n        \"You cannot edit the application after it's approved or rejected\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationEmpData();\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex justify-content-between py-2\">\n        <h4 className=\"fw-bold my-auto\"> Leave Application</h4>\n        <Button\n          variant=\"primary\"\n          id=\"add-button\"\n          onClick={props.onAddLeaveApplicationEmp}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Apply Leave\n        </Button>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div>\n          <Table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Leave Type\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Start Date\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  End Date\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Remarks\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                >\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {rowData.map((data, index) => (\n                <tr key={index}>\n                  <td>{data.Leavetype}</td>\n                  <td>{data.FromDate}</td>\n                  <td>{data.ToDate}</td>\n                  <td>{data.Reasonforleave}</td>\n                  <td>{status(data.Status)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeaveApplicationEmpTable;\n","export default __webpack_public_path__ + \"static/media/Leave.cde90f6b.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\n// import \"./LeaveApplicationEmpForm.css\";\nimport LeaveImg from \"./Leave.svg\";\nimport InnerDashContainer from \"../../Component/InnerDashContainer\";\nimport BASE_URL from \"../config/config\";\n\nconst LeaveApplicationEmpForm = (props) => {\n  const id = localStorage.getItem(\"_id\");\n  const [empData, setEmpData] = useState([]);\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        console.log(response.data);\n        setEmpData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n  return (\n    <InnerDashContainer>\n      <div style={{ overflow: \"auto\" }} className=\"row\">\n        <div className=\"col-5\">\n          <img style={{ width: \"130%\" }} src={LeaveImg} alt=\"\" />\n        </div>\n        <div className=\"col-6\">\n          <form\n            className=\"text-white shadow bg-dark px-3 py-4 rounded row\"\n            onSubmit={props.onLeaveApplicationEmpSubmit}\n          >\n            <h4 className=\"fw-bolder text-white mb-5\">Create Leave Request</h4>\n\n            <div className=\"mb-3 col-12\">\n              <label htmlFor=\"leaveType\" className=\"form-label\">\n                Select Leave Type\n              </label>\n              <select\n                className=\"form-select\"\n                id=\"leaveType\"\n                name=\"leaveType\"\n                // value={formData.leaveType}\n                // onChange={handleInputChange}\n              >\n                <option value=\"\" disabled selected>\n                  -- Select --\n                </option>\n                <option value=\"Sick Leave\">Sick Leave</option>\n                <option value=\"Casual Leave\">Casual Leave</option>\n                <option value=\"Privilege Leave\">Privilege Leave</option>\n              </select>\n            </div>\n            <div className=\"mb-3 col-6\">\n              <label htmlFor=\"startDate\" className=\"form-label\">\n                Start Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"startDate\"\n                name=\"startDate\"\n                // value={formData.startDate}\n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"mb-3 col-6\">\n              <label htmlFor=\"endDate\" className=\"form-label\">\n                End Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"endDate\"\n                name=\"endDate\"\n                // value={formData.endDate}\n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"mb-3 col-12\">\n              <label htmlFor=\"leaveType\" className=\"form-label\">\n                Leave Status\n              </label>\n              <select\n                className=\"form-select\"\n                id=\"leaveStatus\"\n                name=\"leaveStatus\"\n              >\n                <option value=\"1\" selected>\n                  Pending\n                </option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"manager\" className=\"form-label\">\n                Reporting Manager:\n              </label>\n              <input\n                className=\"form-control\"\n                id=\"manager\"\n                name=\"manager\"\n                value={empData.reportManager}\n                // onChange={handleInputChange}\n                required\n                disabled\n                placeholder={empData.reportManager}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"hr\" className=\"form-label\">\n                Reporting Hr:\n              </label>\n              <input\n                className=\"form-control\"\n                id=\"hr\"\n                name=\"hr\"\n                value={empData.reportHr}\n                // onChange={handleInputChange}\n                required\n                disabled\n                placeholder={empData.reportHr}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"reason\" className=\"form-label\">\n                Reason:\n              </label>\n              <textarea\n                className=\"form-control\"\n                id=\"reason\"\n                name=\"reason\"\n                // value={formData.reason}\n                // onChange={handleInputChange}\n                required\n                placeholder=\"Please mention the reason for leave\"\n              />\n            </div>\n\n            <div className=\"row mt-3 mx-1 justify-content-between\">\n              <button type=\"submit\" className=\"btn btn-primary col-5 \">\n                Submit\n              </button>\n              <button\n                type=\"reset\"\n                className=\"btn btn-danger col-5\"\n                onClick={props.onFormClose}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default LeaveApplicationEmpForm;\n","import React, { useState } from \"react\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n// import \"./LeaveApplicationEmp.css\";\n\nconst LeaveApplicationEmpForm = (props) => {\n  const [FromDateData, setFromDateData] = useState(\n    props.editData[\"FromDate\"].slice(0, 10)\n  );\n  const [ToDateData, setToDateData] = useState(\n    props.editData[\"ToDate\"].slice(0, 10)\n  );\n  const [ReasonforleaveData, setReasonforleaveData] = useState(\n    props.editData[\"Reasonforleave\"]\n  );\n\n  const onFromDateDataChange = (e) => {\n    setFromDateData(e.target.value);\n  };\n\n  const onToDateDataChange = (e) => {\n    setToDateData(e.target.value);\n  };\n\n  const onReasonforleaveDataChange = (e) => {\n    setReasonforleaveData(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Edit LeaveApplicationEmp Details</h2>\n\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) =>\n            props.onLeaveApplicationEmpEditUpdate(props.editData, e)\n          }\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Leave Type\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control as=\"select\" required>\n                <option value=\"\" disabled selected>\n                  Select your option\n                </option>\n                <option\n                  value=\"Sick Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Sick Leave\"}\n                >\n                  Sick Leave\n                </option>\n                <option\n                  value=\"Casual Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Casual Leave\"}\n                >\n                  Casual Leave\n                </option>\n                <option\n                  value=\"Privilege Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Privilege Leave\"}\n                >\n                  Privilege Leave\n                </option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              FromDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                required\n                value={FromDateData}\n                onChange={(e) => onFromDateDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              ToDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                required\n                value={ToDateData}\n                onChange={(e) => onToDateDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Reason for leave\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Reason for leave\"\n                required\n                value={ReasonforleaveData}\n                onChange={(e) => onReasonforleaveDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Leave Status\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control as=\"select\" required>\n                <option value=\"1\" selected disabled>\n                  Pending\n                </option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Update</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormEditClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaveApplicationEmpForm;\n","import React, { useState, useContext } from \"react\";\nimport \"./LeaveApplicationEmp.css\";\nimport axios from \"axios\";\nimport LeaveApplicationEmpTable from \"./LeaveApplicationTable.jsx\";\nimport LeaveApplicationEmpForm from \"./LeaveApplicationForm.jsx\";\nimport LeaveApplicationEmpFormEdit from \"./LeaveApplicationFormEdit.jsx\";\nimport { AttendanceContext } from \"../../Context/AttendanceContext/AttendanceContext.js\";\nimport { v4 as uuid } from \"uuid\";\nimport BASE_URL from \"../config/config.js\";\n\nconst LeaveApplicationEmp = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [leaveRequestDone, setLeaveRequestDone] = useState(false);\n  const email = localStorage.getItem(\"Email\");\n  const { socket } = useContext(AttendanceContext);\n  const handleLeaveApplicationEmpSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      Leavetype: event.target[0].value,\n      FromDate: event.target[1].value,\n      ToDate: event.target[2].value,\n      Status: event.target[3].value,\n      managerEmail: event.target[4].value,\n      hrEmail: event.target[5].value,\n      Reasonforleave: event.target[6].value\n    };\n    console.log(body);\n    axios\n      .post(\n        `${BASE_URL}/api/leave-application-emp/` + localStorage.getItem(\"_id\"),\n        body,\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n        setLeaveRequestDone(!leaveRequestDone);\n        const taskId = uuid();\n        const data = {\n          taskId,\n          managerEmail: body.managerEmail,\n          hrEmail: body.hrEmail,\n          message: `Leave request by ${email}`,\n          status: \"unseen\",\n          path: \"leaveApplication\"\n        };\n        socket.emit(\"leaveNotification\", data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddLeaveApplicationEmp = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditLeaveApplicationEmp = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleLeaveApplicationEmpEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    let body = {\n      Leavetype: newInfo.target[0].value,\n      FromDate: newInfo.target[1].value,\n      ToDate: newInfo.target[2].value,\n      Status: newInfo.target[3].value,\n      managerEmail: newInfo.target[4].value,\n      hrEmail: newInfo.target[5].value,\n      Reasonforleave: newInfo.target[6].value\n    };\n\n    console.log(\"update\", body);\n\n    axios\n      .put(\n        `${BASE_URL}/api/leave-application-emp/` + localStorage.getItem(\"_id\"),\n        body,\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n  const handleAddFormGenderChange = () => {};\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <LeaveApplicationEmpFormEdit\n            onLeaveApplicationEmpEditUpdate={\n              handleLeaveApplicationEmpEditUpdate\n            }\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <LeaveApplicationEmpTable\n            onAddLeaveApplicationEmp={handleAddLeaveApplicationEmp}\n            onEditLeaveApplicationEmp={handleEditLeaveApplicationEmp}\n            data={props.data}\n            leaveRequestDone={leaveRequestDone}\n          />\n        )\n      ) : (\n        <LeaveApplicationEmpForm\n          onLeaveApplicationEmpSubmit={handleLeaveApplicationEmpSubmit}\n          onFormClose={handleFormClose}\n          onGenderChange={handleAddFormGenderChange}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LeaveApplicationEmp;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"./LeaveApplicationEmp.css\";\n// import LeaveApplicationEmpTable from \"./LeaveApplicationTable.jsx\";\n// import LeaveApplicationEmpForm from \"./LeaveApplicationForm.jsx\";\n// import LeaveApplicationEmpFormEdit from \"./LeaveApplicationFormEdit.jsx\";\n\n// const LeaveApplicationEmp = (props) => {\n//   const [table, setTable] = useState(true);\n//   const [editForm, setEditForm] = useState(false);\n//   const [editData, setEditData] = useState({});\n\n//   const handleLeaveApplicationEmpSubmit = (event) => {\n//     event.preventDefault();\n//     console.log(\"id\", event.target[0].value, event.target[1].value);\n//     setTable(true);\n\n//     let body = {\n//       Leavetype: event.target[0].value,\n//       FromDate: event.target[1].value,\n//       ToDate: event.target[2].value,\n//       Status: event.target[3].value,\n//       Reasonforleave: event.target[4].value\n//     };\n\n//     axios\n//       .post(\n//         \"${BASE_URL}/api/leave-application-emp/\" +\n//           localStorage.getItem(\"_id\"),\n//         body,\n//         {\n//           headers: {\n//             authorization: localStorage.getItem(\"token\") || \"\"\n//           }\n//         }\n//       )\n//       .then((res) => {\n//         setTable(false);\n//         setTable(true);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n\n//   const handleAddLeaveApplicationEmp = () => {\n//     console.log(\"clicked1\");\n//     setTable(false);\n//   };\n\n//   const handleEditLeaveApplicationEmp = (e) => {\n//     console.log(e);\n//     console.log(\"clicked6\");\n//     setEditForm(true);\n//     setEditData(e);\n//   };\n\n//   const handleFormClose = () => {\n//     console.log(\"clicked1\");\n//     setTable(true);\n//   };\n\n//   const handleEditFormClose = () => {\n//     console.log(\"clicked5\");\n//     setEditForm(false);\n//   };\n\n//   const handleLeaveApplicationEmpEditUpdate = (info, newInfo) => {\n//     newInfo.preventDefault();\n//     console.log(\"zero data\", newInfo.target[0].value);\n//     let body = {\n//       Leavetype: newInfo.target[0].value,\n//       FromDate: newInfo.target[1].value,\n//       ToDate: newInfo.target[2].value,\n//       Status: newInfo.target[3].value,\n//       Reasonforleave: newInfo.target[4].value\n//     };\n\n//     console.log(\"update\", body);\n\n//     axios\n//       .put(\n//         \"${BASE_URL}/api/leave-application-emp/\" + info[\"_id\"],\n//         body,\n//         {\n//           headers: {\n//             authorization: localStorage.getItem(\"token\") || \"\"\n//           }\n//         }\n//       )\n//       .then((res) => {\n//         setTable(false);\n//         setTable(true);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n\n//     setEditForm(false);\n//   };\n//   const handleAddFormGenderChange = () => {};\n\n//   return (\n//     <React.Fragment>\n//       {table ? (\n//         editForm ? (\n//           <LeaveApplicationEmpFormEdit\n//             onLeaveApplicationEmpEditUpdate={\n//               handleLeaveApplicationEmpEditUpdate\n//             }\n//             onFormEditClose={handleEditFormClose}\n//             onFormClose={handleFormClose}\n//             editData={editData}\n//           />\n//         ) : (\n//           <LeaveApplicationEmpTable\n//             onAddLeaveApplicationEmp={handleAddLeaveApplicationEmp}\n//             onEditLeaveApplicationEmp={handleEditLeaveApplicationEmp}\n//             data={props.data}\n//           />\n//         )\n//       ) : (\n//         <LeaveApplicationEmpForm\n//           onLeaveApplicationEmpSubmit={handleLeaveApplicationEmpSubmit}\n//           onFormClose={handleFormClose}\n//           onGenderChange={handleAddFormGenderChange}\n//         />\n//       )}\n//     </React.Fragment>\n//   );\n// };\n\n// export default LeaveApplicationEmp;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\nimport { LuSearch } from \"react-icons/lu\";\nimport { MdNearbyError } from \"react-icons/md\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationHRTable = (props) => {\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [rowData, setRowData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const loadLeaveApplicationHRData = () => {\n    axios\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const leaveApplicationHRObj = response.data;\n        setLeaveApplicationHRData(leaveApplicationHRObj);\n        setLoading(false);\n\n        const rowDataT = leaveApplicationHRObj.map((data) => {\n          return {\n            data,\n            empID: data?.employee?.[0]?.empID,\n            Name:\n              data?.employee?.[0]?.FirstName +\n              \" \" +\n              data?.employee?.[0]?.LastName,\n            Leavetype: data?.Leavetype,\n            FromDate: data?.FromDate?.slice(0, 10),\n            ToDate: data?.ToDate?.slice(0, 10),\n            Reasonforleave: data?.Reasonforleave,\n            Status: status(data?.Status)\n          };\n        });\n\n        setRowData(rowDataT);\n        setFilteredData(rowDataT);\n        props.updateTotalLeaves(leaveApplicationHRObj.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationHRData();\n  }, []);\n\n  useEffect(() => {\n    filterData();\n  }, [searchQuery]);\n\n  const filterData = () => {\n    const filtered = rowData.filter((item) => {\n      return item.Name.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setFilteredData(filtered);\n  };\n\n  const onLeaveApplicationHRDelete = (e1, e2) => {\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-hr/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationHRData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const exportToPDF = () => {\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\n      const pdfWidth = 297; // A4 width in mm\n      const pdfHeight = 210; // A4 height in mm\n      const doc = new jsPDF({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: [pdfWidth, pdfHeight]\n      });\n\n      doc.setFontSize(18);\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\n      const headers = [\n        \"Emp Id\",\n        \"Leave Type\",\n        \"Start Date\",\n        \"End Date\",\n        \"Remarks\",\n        \"Status\"\n      ];\n      const data = filteredData.map((row) => [\n        row.empID,\n        row.Leavetype,\n        row.FromDate,\n        row.ToDate,\n        row.Reasonforleave,\n        row.Status,\n\n        \"\" // Action column - you can customize this based on your requirements\n      ]);\n      doc.setFontSize(12);\n      doc.autoTable({\n        head: [headers],\n        body: data,\n        startY: 25\n      });\n\n      doc.save(\"leaveApplication_data.pdf\");\n    }\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n  };\n\n  const renderSortIcon = (field) => {\n    if (sortColumn === field) {\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  const sortData = (columnName) => {\n    let newSortDirection = \"asc\";\n\n    if (sortColumn === columnName && sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n\n    const sortedData = [...filteredData];\n\n    sortedData.sort((a, b) => {\n      const valueA = a[columnName];\n      const valueB = b[columnName];\n\n      let comparison = 0;\n\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n\n      return sortDirection === \"desc\" ? comparison * -1 : comparison;\n    });\n\n    setFilteredData(sortedData);\n    setSortColumn(columnName);\n    setSortDirection(newSortDirection);\n  };\n\n  const approvedLeaves = filteredData.filter(\n    (data) => data.Status === \"Approved\"\n  ).length;\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex flex-column justify-between\">\n        <div className=\"d-flex justify-content-between aline-items-center\">\n          <h4 className=\"fw-bold my-auto text-muted\">\n            Approved Leaves{\" \"}\n            <span className=\"text-primary\">({approvedLeaves})</span>\n          </h4>\n          <div className=\"d-flex gap-2 justify-content-between py-3\">\n            <button\n              className=\"btn px-3 shadow-sm d-flex justify-center  aline-center gap-2\"\n              onClick={exportToPDF}\n            >\n              <BsFillFileEarmarkPdfFill className=\"text-danger fs-6\" />\n              <p className=\"my-auto fs-6 fw-bold\">PDF</p>\n            </button>\n            <div className=\"searchholder p-0 d-flex  position-relative\">\n              <input\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  paddingLeft: \"15%\"\n                }}\n                className=\"form-control border border-primary border-2\"\n                type=\"text\"\n                placeholder=\"Search by name\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n              <LuSearch\n                style={{ position: \"absolute\", top: \"30%\", left: \"5%\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div\n          className=\"mt-3\"\n          style={{\n            overflow: \"auto\",\n            height: \"85vh\",\n            width: \"100%\",\n            scrollbarWidth: \"thin\"\n          }}\n        >\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"empID\")}\n                >\n                  Employee ID {renderSortIcon(\"empID\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Leavetype\")}\n                >\n                  Leave Type {renderSortIcon(\"Leavetype\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"FromDate\")}\n                >\n                  Start Date {renderSortIcon(\"FromDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"ToDate\")}\n                >\n                  End Date {renderSortIcon(\"ToDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Status\")}\n                >\n                  Status {renderSortIcon(\"Status\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Reasonforleave\")}\n                >\n                  Remarks {renderSortIcon(\"Reasonforleave\")}\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    textAlign: \"center\"\n                  }}\n                >\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredData.length > 0 ? (\n                filteredData\n                  .filter((e) => e.Status == \"Approved\")\n                  .map((data, index) => (\n                    <tr className=\"fw-bold\" key={index}>\n                      <td className=\"py-1\">\n                        <div className=\"d-flex aline-center gap-2\">\n                          <div style={{ height: \"40px\", width: \"40px\" }}>\n                            <img\n                              style={{\n                                height: \"100%\",\n                                width: \"100%\",\n                                borderRadius: \"50%\",\n                                overflow: \"hidden\",\n                                objectFit: \"cover\"\n                              }}\n                              src={\n                                data?.data?.profile?.image_url\n                                  ? data?.data?.profile?.image_url\n                                  : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                              }\n                              alt=\"\"\n                            />\n                          </div>\n                          <div className=\"d-flex flex-column\">\n                            <span\n                              style={{ fontSize: \"12px\" }}\n                              className=\"fw-bold\"\n                            >\n                              {data.empID}\n                            </span>\n                            <span\n                              style={{ fontSize: \"15px\" }}\n                              className=\"fw-bold text-capitalize text-primary\"\n                            >\n                              {data.Name}\n                            </span>\n                          </div>\n                        </div>\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.Leavetype}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.FromDate}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.ToDate}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1  \"\n                      >\n                        <span className=\"bg-success text-white px-2 py-1 rounded-5\">\n                          {data.Status}\n                        </span>\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.Reasonforleave}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        <div\n                          className=\"d-flex gap-3 py-2\"\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <p title=\"Update\" className=\"m-auto text-primary\">\n                            <FontAwesomeIcon\n                              className=\"m-auto\"\n                              icon={faEdit}\n                              onClick={() =>\n                                props.onEditLeaveApplicationHR(data.data)\n                              }\n                            />\n                          </p>\n                          <p title=\"Delete\" className=\"m-auto text-danger\">\n                            <FontAwesomeIcon\n                              className=\"m-auto\"\n                              icon={faTrash}\n                              onClick={() =>\n                                onLeaveApplicationHRDelete(\n                                  data.data[\"employee\"][0][\"_id\"],\n                                  data.data[\"_id\"]\n                                )\n                              }\n                            />\n                          </p>\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n              ) : (\n                <div\n                  style={{ height: \"30vh\", width: \"94%\", position: \"absolute\" }}\n                  className=\"d-flex flex-column justify-content-center align-items-center gap-1\"\n                >\n                  <span className=\"fw-bolder \" style={{ fontSize: \"2rem\" }}>\n                    <MdNearbyError\n                      className=\"text-danger\"\n                      style={{ fontSize: \"2.3rem\" }}\n                    />{\" \"}\n                    OOPS!\n                  </span>\n                  <h6 className=\"p-0 m-0\">Record not found.</h6>\n                </div>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRTable;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\nimport { LuSearch } from \"react-icons/lu\";\nimport { MdNearbyError } from \"react-icons/md\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationHRTable = (props) => {\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [rowData, setRowData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const loadLeaveApplicationHRData = () => {\n    axios\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const leaveApplicationHRObj = response.data;\n        setLeaveApplicationHRData(leaveApplicationHRObj);\n        setLoading(false);\n\n        const rowDataT = leaveApplicationHRObj.map((data) => {\n          return {\n            data,\n            empID: data?.employee?.[0]?.empID,\n            Name:\n              data?.employee?.[0]?.FirstName +\n              \" \" +\n              data?.employee?.[0]?.LastName,\n            Leavetype: data?.Leavetype,\n            FromDate: data?.FromDate?.slice(0, 10),\n            ToDate: data?.ToDate?.slice(0, 10),\n            Reasonforleave: data?.Reasonforleave,\n            Status: status(data?.Status)\n          };\n        });\n\n        setRowData(rowDataT);\n        setFilteredData(rowDataT);\n        props.updateTotalLeaves(leaveApplicationHRObj.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationHRData();\n  }, []);\n\n  useEffect(() => {\n    filterData();\n  }, [searchQuery]);\n\n  const filterData = () => {\n    const filtered = rowData.filter((item) => {\n      return item.Name.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    setFilteredData(filtered);\n  };\n\n  const onLeaveApplicationHRDelete = (e1, e2) => {\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-hr/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationHRData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const exportToPDF = () => {\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\n      const pdfWidth = 297; // A4 width in mm\n      const pdfHeight = 210; // A4 height in mm\n      const doc = new jsPDF({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: [pdfWidth, pdfHeight]\n      });\n\n      doc.setFontSize(18);\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\n      const headers = [\n        \"Emp Id\",\n        \"Leave Type\",\n        \"Start Date\",\n        \"End Date\",\n        \"Remarks\",\n        \"Status\"\n      ];\n      const data = filteredData.map((row) => [\n        row.empID,\n        row.Leavetype,\n        row.FromDate,\n        row.ToDate,\n        row.Reasonforleave,\n        row.Status,\n\n        \"\" // Action column - you can customize this based on your requirements\n      ]);\n      doc.setFontSize(12);\n      doc.autoTable({\n        head: [headers],\n        body: data,\n        startY: 25\n      });\n\n      doc.save(\"leaveApplication_data.pdf\");\n    }\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n  };\n\n  const renderSortIcon = (field) => {\n    if (sortColumn === field) {\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  const sortData = (columnName) => {\n    let newSortDirection = \"asc\";\n\n    if (sortColumn === columnName && sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n\n    const sortedData = [...filteredData];\n\n    sortedData.sort((a, b) => {\n      const valueA = a[columnName];\n      const valueB = b[columnName];\n\n      let comparison = 0;\n\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n\n      return sortDirection === \"desc\" ? comparison * -1 : comparison;\n    });\n\n    setFilteredData(sortedData);\n    setSortColumn(columnName);\n    setSortDirection(newSortDirection);\n  };\n\n  const approvedLeaves = filteredData.filter(\n    (data) => data.Status === \"Rejected\"\n  ).length;\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex flex-column justify-between\">\n        <div className=\"d-flex justify-content-between aline-items-center\">\n          <h4 className=\"fw-bold  my-auto text-muted\">\n            Rejected Leaves{\" \"}\n            <span className=\"text-danger\">({approvedLeaves})</span>\n          </h4>\n          <div className=\"d-flex gap-2 justify-content-between py-3\">\n            <button\n              className=\"btn px-3 shadow-sm d-flex justify-center  aline-center gap-2\"\n              onClick={exportToPDF}\n            >\n              <BsFillFileEarmarkPdfFill className=\"text-danger fs-6\" />\n              <p className=\"my-auto fs-6 fw-bold\">PDF</p>\n            </button>\n            <div className=\"searchholder p-0 d-flex  position-relative\">\n              <input\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  paddingLeft: \"15%\"\n                }}\n                className=\"form-control border border-primary border-2\"\n                type=\"text\"\n                placeholder=\"Search by name\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n              <LuSearch\n                style={{ position: \"absolute\", top: \"30%\", left: \"5%\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div\n          className=\"mt-3\"\n          style={{\n            overflow: \"auto\",\n            height: \"85vh\",\n            width: \"100%\",\n            scrollbarWidth: \"thin\"\n          }}\n        >\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"empID\")}\n                >\n                  Employee ID {renderSortIcon(\"empID\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Leavetype\")}\n                >\n                  Leave Type {renderSortIcon(\"Leavetype\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"FromDate\")}\n                >\n                  Start Date {renderSortIcon(\"FromDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"ToDate\")}\n                >\n                  End Date {renderSortIcon(\"ToDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Status\")}\n                >\n                  Status {renderSortIcon(\"Status\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\"\n                  }}\n                  onClick={() => sortData(\"Reasonforleave\")}\n                >\n                  Remarks {renderSortIcon(\"Reasonforleave\")}\n                </th>\n                <th\n                  style={{\n                    background: \"var(--primaryDashColorDark)\",\n                    color: \"var(--primaryDashMenuColor)\",\n                    textAlign: \"center\"\n                  }}\n                >\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredData.length > 0 ? (\n                filteredData\n                  .filter((e) => e.Status == \"Rejected\")\n                  .map((data, index) => (\n                    <tr className=\"fw-bold\" key={index}>\n                      <td className=\"py-1\">\n                        <div className=\"d-flex aline-center gap-2\">\n                          <div style={{ height: \"40px\", width: \"40px\" }}>\n                            <img\n                              style={{\n                                height: \"100%\",\n                                width: \"100%\",\n                                borderRadius: \"50%\",\n                                overflow: \"hidden\",\n                                objectFit: \"cover\"\n                              }}\n                              src={\n                                data?.data?.profile?.image_url\n                                  ? data?.data?.profile?.image_url\n                                  : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                              }\n                              alt=\"\"\n                            />\n                          </div>\n                          <div className=\"d-flex flex-column\">\n                            <span\n                              style={{ fontSize: \"12px\" }}\n                              className=\"fw-bold\"\n                            >\n                              {data.empID}\n                            </span>\n                            <span\n                              style={{ fontSize: \"15px\" }}\n                              className=\"fw-bold text-capitalize text-primary\"\n                            >\n                              {data.Name}\n                            </span>\n                          </div>\n                        </div>\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.Leavetype}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.FromDate}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.ToDate}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1  \"\n                      >\n                        <span className=\"bg-danger text-white px-2 py-1 rounded-5\">\n                          {data.Status}\n                        </span>\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        {data.Reasonforleave}\n                      </td>\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        className=\"py-1 text-muted\"\n                      >\n                        <div\n                          className=\"d-flex gap-3 py-2\"\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <p title=\"Update\" className=\"m-auto text-primary\">\n                            <FontAwesomeIcon\n                              className=\"m-auto\"\n                              icon={faEdit}\n                              onClick={() =>\n                                props.onEditLeaveApplicationHR(data.data)\n                              }\n                            />\n                          </p>\n                          <p title=\"Delete\" className=\"m-auto text-danger\">\n                            <FontAwesomeIcon\n                              className=\"m-auto\"\n                              icon={faTrash}\n                              onClick={() =>\n                                onLeaveApplicationHRDelete(\n                                  data.data[\"employee\"][0][\"_id\"],\n                                  data.data[\"_id\"]\n                                )\n                              }\n                            />\n                          </p>\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n              ) : (\n                <div\n                  style={{ height: \"30vh\", width: \"94%\", position: \"absolute\" }}\n                  className=\"d-flex flex-column justify-content-center align-items-center gap-1\"\n                >\n                  <span className=\"fw-bolder \" style={{ fontSize: \"2rem\" }}>\n                    <MdNearbyError\n                      className=\"text-danger\"\n                      style={{ fontSize: \"2.3rem\" }}\n                    />{\" \"}\n                    OOPS!\n                  </span>\n                  <h6 className=\"p-0 m-0\">Record not found.</h6>\n                </div>\n              )}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRTable;\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport \"./notification.css\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst Notification = () => {\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedNotification, setSelectedNotification] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const email = localStorage.getItem(\"Email\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setNotification(response.data.Notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"taskNotificationReceived\", () => {\r\n        loadEmployeeData();\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    // Check if all notifications are selected and update the \"Select All\" checkbox accordingly\r\n    setSelectAll(\r\n      notification && selectedNotification.length === notification.length\r\n    );\r\n  }, [selectedNotification, notification]);\r\n\r\n  const addSelectedNotification = (val) => {\r\n    const isChecked = selectedNotification.some(\r\n      (noti) => noti.taskId === val.taskId\r\n    );\r\n\r\n    if (isChecked) {\r\n      setSelectedNotification((prevNotification) =>\r\n        prevNotification.filter((noti) => noti.taskId !== val.taskId)\r\n      );\r\n    } else {\r\n      setSelectedNotification([...selectedNotification, val]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    setSelectAll(!selectAll);\r\n    setSelectedNotification(selectAll ? [] : [...notification]);\r\n  };\r\n  const clearAllHandler = () => {\r\n    if (notification.length > 0) {\r\n      console.log(\"clearALL\");\r\n      axios\r\n        .post(\r\n          `${BASE_URL}/api/selectedNotificationDelete`,\r\n          { email },\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setNotification(response.data.result.Notification);\r\n          socket.emit(\"notificationPageUpdate\", true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const multiNotificationDeleteHandler = () => {\r\n    if (selectedNotification.length > 0) {\r\n      const taskIDArray = selectedNotification.map((val) => val.taskId);\r\n      const data = {\r\n        employeeMail: email,\r\n        tasks: taskIDArray\r\n      };\r\n      if (selectAll) {\r\n        clearAllHandler();\r\n      } else {\r\n        axios\r\n          .post(`${BASE_URL}/api/multiSelectedNotificationDelete`, data, {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          })\r\n          .then((response) => {\r\n            setNotification(response.data.result.Notification);\r\n            setSelectedNotification([]);\r\n            console.log(\"emittted\");\r\n            socket.emit(\"notificationPageUpdate\", true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const notificationDeleteHandler = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .post(\r\n        `${BASE_URL}/api/notificationDeleteHandler/${id}`,\r\n        { email },\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setNotification(response.data.result.Notification);\r\n        setSelectedNotification([]);\r\n        console.log(\"emittted\");\r\n        socket.emit(\"notificationPageUpdate\", true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(notification);\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <form className=\"d-flex col-8 flex-column gap-3\">\r\n          <div>\r\n            <div className=\"p-2\">\r\n              {\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"\"\r\n                id=\"\"\r\n                onChange={toggleSelectAll}\r\n                checked={selectAll}\r\n              />{\" \"}\r\n              <span>Select All</span>\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Select</th>\r\n                  <th scope=\"col\">task Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {notification &&\r\n                  notification.map((val, index) => (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={() => addSelectedNotification(val)}\r\n                          checked={selectedNotification.some(\r\n                            (noti) => noti.taskId === val.taskId\r\n                          )}\r\n                        />\r\n                      </th>\r\n                      <td>{val.taskName}</td>\r\n                      <td>{val.senderMail}</td>\r\n                      {val.status === \"unseen\" ? (\r\n                        <td>Unread</td>\r\n                      ) : (\r\n                        <td>read</td>\r\n                      )}\r\n                      <td>\r\n                        <ImBin\r\n                          onClick={() => notificationDeleteHandler(val.taskId)}\r\n                          className=\"bin\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <button\r\n        className=\"Notification_delete\"\r\n        onClick={multiNotificationDeleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst NoticeManagement = () => {\r\n  const [newTask, setNewTask] = useState({\r\n    notice: \"\",\r\n    attachments: null\r\n  });\r\n  const isFormValid = () => {\r\n    return newTask.notice.trim() !== \"\";\r\n  };\r\n\r\n  const sendNotice = async () => {\r\n    let formData = new FormData();\r\n    const noticeId = uuid();\r\n    formData.append(\"noticeId\", noticeId);\r\n    formData.append(\"notice\", newTask.notice);\r\n    formData.append(\"file\", newTask.attachments);\r\n    // console.log(newTask);\r\n    // socket.emit('sendNotice', formData);\r\n    axios\r\n      .post(`${BASE_URL}/api/notice`, formData)\r\n      .then((res) => {\r\n        alert(\"Notice send\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div style={{ zIndex: \"1\" }} className=\"p-4 d-flex flex-column \">\r\n      <form className=\"row p-0 p-md-3 m-auto\">\r\n        <h2 className=\"fw-bold text-muted \"> 🖋️Send new Notice</h2>\r\n        <p className=\"text-muted\">\r\n          Unleash the Power of Notice: Communicate with Impact, Ignite Change!\r\n        </p>\r\n        <div className=\"col-12 mt-5 d-flex flex-column\">\r\n          <Form.Group controlId=\"Taskname\">\r\n            <Form.Label className=\"fw-bold\">Notice</Form.Label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Notice\"\r\n              value={newTask.notice}\r\n              onChange={(e) =>\r\n                setNewTask({ ...newTask, notice: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <div>\r\n          <Form.Group controlId=\"Attachments\">\r\n            <Form.Label className=\"fw-bold mt-3\">Attachments</Form.Label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"file\"\r\n              multiple\r\n              required\r\n              onChange={(e) =>\r\n                setNewTask({ ...newTask, attachments: e.target.files[0] })\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button\r\n          className=\"mt-4 w-100 fw-bold text-white\"\r\n          variant=\"info\"\r\n          onClick={sendNotice}\r\n          disabled={!isFormValid()}\r\n        >\r\n          Send Notice\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeManagement;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AdminDasd from \"../Admin/Dashboard/AdminDash.jsx\";\nimport Role from \"../../Pages/Department/Role.jsx\";\nimport Position from \"../../Pages/Department/Position.jsx\";\nimport Department from \"../../Pages/Department/Department.jsx\";\nimport AdminPortal from \"../Admin/AdminPortal.jsx\";\nimport AdminProjectBid from \"../Admin/AdminProjectBid.jsx\";\nimport Salary from \"../../Pages/Salary/Salary.jsx\";\nimport LeaveApplicationHR from \"../../Component/HrManager/LeaveStatus/LeaveApplicationHR.jsx\";\nimport AdminEmployeeTable from \"../../Pages/AddEmployee/EmployeeTable.jsx\";\nimport NotFound404 from \"../../Pages/PageNot/NotFound404.jsx\";\n// ********************task management***************//\n\nimport AdminAsignTask from \"./TaskManagement/AdminAsignTask.jsx\";\nimport AdminTaskStatus from \"./TaskManagement/AdminTaskStatus.jsx\";\nimport AdminCancleTask from \"./TaskManagement/AdminCancleTask.jsx\";\nimport AdminCompleteTask from \"./TaskManagement/AdminCompleteTask.jsx\";\nimport RejectedTask from \"./TaskManagement/RejectedTask.jsx\";\nimport AdminAssignedTask from \"./TaskManagement/AdminAssignedTask.jsx\";\nimport AdminAttendance from \"./attendance/Attendance.jsx\";\nimport AdminViewAttendance from \"./attendance/ViewAttendance.jsx\";\nimport LeaveCalendar from \"../../Pages/LeaveCalendar/LeaveCalendar.jsx\";\nimport Country from \"../../Pages/Location/Country.jsx\";\nimport State from \"../../Pages/Location/State.jsx\";\nimport City from \"../../Pages/Location/City.jsx\";\nimport Company from \"../../Pages/Company/Company.jsx\";\nimport LeaveApplication from \"../../Pages/ApplyLeave/LeaveApplication.jsx\";\nimport LeaveApplicationHRAccept from \"../HrManager/LeaveStatus/LeaveApplicationHRAccept.jsx\";\nimport LeaveApplicationHRReject from \"../HrManager/LeaveStatus/LeaveApplicationHRReject.jsx\";\nimport Notification from \"./Notification/Notification.jsx\";\nimport InnerDashContainer from \"../InnerDashContainer.jsx\";\nimport NoticeManagement from \"./Notification/NoticeManagement.jsx\";\nconst AdminRoutes = () => {\n  return (\n    <InnerDashContainer>\n      <div id=\"main-area\">\n        <div id=\"sidebar-top-content\" />\n        <Switch>\n          <Route path=\"/admin/dashboard\" exact component={AdminDasd} />\n          <Route path=\"/admin/role\" exact component={Role} />\n          <Route path=\"/admin/position\" exact component={Position} />\n          <Route path=\"/admin/department\" exact component={Department} />\n          <Route path=\"/admin/portal-master\" exact component={AdminPortal} />\n          <Route path=\"/admin/project-bid\" exact component={AdminProjectBid} />\n          <Route path=\"/admin/salary\" exact component={Salary} />\n\n          <Route path=\"/admin/user\" exact component={AdminEmployeeTable} />\n          <Route path=\"/admin/task\" exact component={AdminAsignTask} />\n          <Route path=\"/admin/taskassign\" exact component={AdminAssignedTask} />\n          <Route path=\"/admin/taskstatus\" exact component={AdminTaskStatus} />\n          <Route path=\"/admin/taskcancle\" exact component={AdminCancleTask} />\n          {/* location route */}\n          <Route path=\"/admin/leaveCal\" exact component={LeaveCalendar} />\n          <Route path=\"/admin/country\" exact component={Country} />\n          <Route path=\"/admin/state\" exact component={State} />\n          <Route path=\"/admin/city\" exact component={City} />\n          <Route path=\"/admin/company\" exact component={Company} />\n          <Route\n            path=\"/admin/taskcomplete\"\n            exact\n            component={AdminCompleteTask}\n          />\n          <Route path=\"/admin/taskreject\" exact component={RejectedTask} />\n          <Route\n            path=\"/admin/adminAttendance\"\n            exact\n            component={AdminAttendance}\n          />\n          <Route\n            path=\"/admin/adminviewAttenDance\"\n            exact\n            component={AdminViewAttendance}\n          />\n          {/* END TASK ROUTES */}\n          {/* START LEAVE ROUTES */}\n          <Route path=\"/admin/applyLeave\" exact component={LeaveApplication} />\n          <Route path=\"/admin/notice\" exact component={NoticeManagement} />\n          <Route\n            path=\"/admin/leaveAccepted\"\n            exact\n            component={LeaveApplicationHRAccept}\n          />\n          <Route\n            path=\"/admin/pendingLeave\"\n            exact\n            component={LeaveApplicationHR}\n          />\n          <Route\n            path=\"/admin/leaveRejected\"\n            exact\n            component={LeaveApplicationHRReject}\n          />\n          <Route path=\"/admin/notification\" exact component={Notification} />\n          {/*END LEAVE ROUTES */}\n          <Route component={NotFound404} />\n          {/* ********task******* */}\n        </Switch>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default AdminRoutes;\n","export default __webpack_public_path__ + \"static/media/logo.2570e426.png\";","import React, { useState, useContext, useEffect } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Logo from \"../../img/logo.png\";\nimport \"./NavBar.css\";\nimport { LuBell } from \"react-icons/lu\";\nimport { IoMdClose } from \"react-icons/io\";\n// import Switch from \"react-switch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { AttendanceContext } from \"../../Context/AttendanceContext/AttendanceContext\";\nimport { useHistory } from \"react-router-dom\";\nimport addNotification from \"react-push-notification\";\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom\";\nimport BASE_URL from \"../config/config\";\n\nconst NavBar = (props) => {\n  const [activeProfile, setActiveProfile] = useState(null);\n  const history = useHistory();\n  const location = useLocation().pathname.split(\"/\")[1];\n  const [notification, setNotification] = useState([]);\n  const [setEmployeeData] = useState(\"\");\n  const [notiToggle, setNotiToggle] = useState(false);\n  const { socket } = useContext(AttendanceContext);\n\n  const id = localStorage.getItem(\"_id\");\n  const email = localStorage.getItem(\"Email\");\n  const pushNotification = (taskName) => {\n    addNotification({\n      title: \"Kasper\",\n      subtitle: taskName,\n      duration: 4000,\n      icon: Logo,\n      native: true\n    });\n  };\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        console.log(response.data.Notification);\n        setEmployeeData(response.data);\n        setNotification(response.data.Notification);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n  const notificationDeleteHandler = (id) => {\n    axios\n      .post(\n        `${BASE_URL}/api/notificationDeleteHandler/${id}`,\n        { email },\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setEmployeeData(response.data.result);\n        setNotification(response.data.result.Notification);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const notificationHandler = (id, path) => {\n    console.log(id);\n    axios\n      .post(\n        `${BASE_URL}/api/notificationStatusUpdate/${id}`,\n        { email },\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((response) => {\n        setEmployeeData(response.data.result);\n        setNotification(response.data.result.Notification);\n        history.push(`/${location}/${path}`);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const handleNotificationRequest = () => {\n    // Check if the browser supports notifications\n    if (\"Notification\" in window) {\n      Notification.requestPermission().then((permission) => {\n        if (permission === \"granted\") {\n          // Permission granted, you can now trigger notifications\n          console.log(\"Notification permission granted\");\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    // console.log('Socket:', socket.id);\n    socket.emit(\"userConnected\", { email });\n    handleNotificationRequest();\n    if (socket) {\n      socket.on(\"taskNotificationReceived\", (data) => {\n        console.log(data.Account);\n        if (data.Account === 4) {\n          if (data.managerEmail === email) {\n            setNotification((prev) => [data, ...prev]);\n            pushNotification(data.message);\n          }\n        } else if (data.Account === 2 || data.Account === 3) {\n          console.log(data);\n          let emp = data.employeesEmail.filter((val) => {\n            return val === email && val !== data.senderMail;\n          });\n          if (emp.length > 0) {\n            setNotification((prev) => [data, ...prev]);\n            pushNotification(data.message);\n          }\n        } else if (data.Account === 1) {\n          console.log(data);\n          if (data.adminMail === email) {\n            setNotification((prev) => [data, ...prev]);\n            pushNotification(data.message);\n          }\n        }\n      });\n      socket.on(\"notificationPageUpdate\", (data) => {\n        if (data) {\n          loadEmployeeData();\n        }\n      });\n      socket.on(\"leaveNotificationReceived\", (data) => {\n        const { message, status, path, taskId, managerEmail, hrEmail } = data;\n\n        const data1 = { message, status, path, taskId, managerEmail, hrEmail };\n        setNotification((prev) => [data1, ...prev]);\n        pushNotification(data1.message);\n      });\n      socket.on(\"leaveManagerStatusNotificationReceived\", (data) => {\n        const {\n          message,\n          status,\n          path,\n          taskId,\n          employeeEmail,\n          hrEmail,\n          managerEmail\n        } = data;\n        if (location === \"employee\") {\n          const data1 = {\n            message,\n            status,\n            path,\n            taskId,\n            employeeEmail,\n            hrEmail\n          };\n          setNotification((prev) => [data1, ...prev]);\n          pushNotification(data1.message);\n        } else if (location === \"hr\") {\n          const data1 = {\n            message,\n            status,\n            path,\n            taskId,\n            employeeEmail,\n            hrEmail\n          };\n          setNotification((prev) => [data1, ...prev]);\n          pushNotification(data1.message);\n        } else if (location === \"manager\") {\n          const data1 = {\n            message,\n            status,\n            path,\n            taskId,\n            employeeEmail,\n            managerEmail\n          };\n          setNotification((prev) => [data1, ...prev]);\n          pushNotification(data1.message);\n        }\n      });\n    }\n  }, [socket]);\n  const clearAllHandler = () => {\n    if (notification.length > 0) {\n      axios\n        .post(\n          `${BASE_URL}/api/selectedNotificationDelete`,\n          { email },\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        )\n        .then((response) => {\n          console.log(response);\n          setNotification(response.data.result.Notification);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n  let uniqueNotification = notification.filter((val, index, arr) => {\n    return (\n      val.status === \"unseen\" &&\n      arr.findIndex((item) => item.taskId === val.taskId) === index\n    );\n  });\n\n  return (\n    <div\n      className=\"shadow-sm px-2 py-1 bg-white\"\n      style={{ height: \"fit-content\" }}\n    >\n      <nav className=\"d-flex aline-items-center justify-content-between\">\n        <Navbar.Brand className=\"my-auto\" style={{ width: \"120px\" }}>\n          <img style={{ width: \"100%\" }} src={Logo} alt=\"\" />\n        </Navbar.Brand>\n        <div className=\"ml-auto my-auto d-flex align-items-center gap-3\">\n          <div\n            className=\"position-relative\"\n            onClick={() => setNotiToggle(!notiToggle)}\n          >\n            <LuBell className=\"fs-4\" />\n            {notification.length > 0 && uniqueNotification.length > 0 && (\n              <p\n                style={{\n                  height: \"1.3rem\",\n                  width: \"1.3rem\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  position: \"absolute\",\n                  top: \"-35%\",\n                  right: \"-30%\",\n                  borderRadius: \"50% 50% 50% 0\",\n                  scale: \".7\"\n                }}\n                className=\"bg-primary text-white fw-bold\"\n              >\n                {uniqueNotification.length}\n              </p>\n            )}\n            {notiToggle && (\n              <span className=\"notification-list\">\n                {notiToggle &&\n                  notification.length > 0 &&\n                  notification\n                    .slice(0, 10)\n                    .filter(\n                      (val, i, ar) =>\n                        ar.findIndex((item) => item.taskId === val.taskId) === i\n                    )\n                    .map((val, i) => {\n                      return (\n                        <span\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                            gap: \".1rem\"\n                          }}\n                          className={val.status === \"unseen\" ? \"new\" : \"old\"}\n                        >\n                          <h6\n                            style={{ fontSize: \"0.9rem\" }}\n                            onClick={\n                              val.status === \"unseen\"\n                                ? () =>\n                                    notificationHandler(val.taskId, val.path)\n                                : () => history.push(`/${location}/${val.path}`)\n                            }\n                          >\n                            {val.message}\n                          </h6>\n                          <IoMdClose\n                            onClick={(e) => (\n                              notificationDeleteHandler(val.taskId),\n                              e.stopPropagation()\n                            )}\n                            style={{ cursor: \"pointer\" }}\n                            className=\"closing\"\n                          />\n                        </span>\n                      );\n                    })}\n\n                {notiToggle && notification.length > 0 && (\n                  <h4 className=\"viewAll\" onClick={clearAllHandler}>\n                    Clear All\n                  </h4>\n                )}\n              </span>\n            )}\n          </div>\n          <span className=\"navbar-right-content my-auto d-flex  fw-bold\">\n            <div\n              onMouseEnter={() => setActiveProfile(\"name\")}\n              onMouseLeave={() => setActiveProfile(null)}\n              style={{\n                height: \"45px\",\n                width: \"45px\",\n                border: \"1px solid blue\",\n                borderRadius: \"50%\",\n                position: \"relative\"\n              }}\n            >\n              <img\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  objectFit: \"cover\",\n                  border: \"1px solid red\",\n                  borderRadius: \"50%\"\n                }}\n                src=\"https://www.pngitem.com/pimgs/m/394-3947057_circular-profile-picture-png-transparent-png.png\"\n                alt=\"\"\n              />\n\n              <div\n                className=\"bg-white shadow pb-3 pt-1 px-3 flex-column gap-3\"\n                style={{\n                  position: \"absolute\",\n                  zIndex: \"100\",\n                  width: \"fit-content\",\n                  right: \"0\",\n                  top: \"90%\",\n                  display: activeProfile === \"name\" ? \"flex\" : \"none\"\n                }}\n              >\n                <span>\n                  {\" \"}\n                  <p className=\"m-0 p-0\">\n                    Hello{\" \"}\n                    <span className=\"text-capitalize m-0 p-0 text-primary\">\n                      {props.loginInfo[\"Name\"]}\n                    </span>{\" \"}\n                  </p>\n                  <p\n                    style={{ fontSize: \".9rem\" }}\n                    className=\"m-0 text-muted p-0\"\n                  >\n                    {props.loginInfo[\"Email\"]}\n                  </p>\n                </span>\n                <p>Profile</p>\n                <button\n                  onClick={props.onLogout}\n                  style={{ cursor: \"pointer\" }}\n                  className=\"btn w-100 p-0 m-0 border-0 d-flex justify-content-between aline-items-center navbar-right-content\"\n                >\n                  Logout\n                  <FontAwesomeIcon\n                    className=\"my-auto fs-6 text-muted\"\n                    icon={faSignOutAlt}\n                  />\n                </button>\n              </div>\n            </div>\n            <span className=\"text-muted\"></span>\n          </span>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\r\n\r\nconst DashContainer = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        maxHeight: \"100vh\",\r\n        minWidth: \"100%\",\r\n        maxWidth: \"100%\",\r\n        overflow: \"hidden\"\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashContainer;\r\n","\nimport React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar/Sidebar.jsx\";\nimport AdminRoutes from \"./Routes.jsx\";\nimport NavBar from \"../../Pages/Navbar/NavBar.jsx\";\nimport \"./DashboardAdmin.css\";\n// import InnerDashContainer from \"../InnerDashContainer.jsx\";\nimport DashContainer from \"../DashContainer.jsx\";\n\nconst DashboardAdmin = (props) => {\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = () => {\n    console.log(\"switch\");\n\n    if (checked) {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-none\");\n    } else {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-block\");\n    }\n\n    setChecked(!checked);\n  };\n\n  return (\n    <DashContainer>\n      <Router>\n        <div id=\"outer-main-div\">\n          <div id=\"outer-nav\">\n            <NavBar\n              loginInfo={props.data}\n              checked={checked}\n              handleChange={handleChange}\n              onLogout={props.onLogout}\n            />\n          </div>\n          <div\n            className=\"d-flex\"\n            style={{\n              maxHeight: \"100vh\"\n            }}\n            id=\"main-non-nav\"\n          >\n            <Sidebar />\n            <div\n              style={{ overflow: \"hidden\" }}\n              className=\"HrDashBG w-100\"\n              id=\"main-area\"\n            >\n              <AdminRoutes />\n            </div>\n          </div>\n          {/* <div\n            className=\"d-flex\"\n            style={{\n              maxHeight: \"100vh\"\n            }}\n            id=\"main-non-nav\"\n          >\n            {\" \"}\n            \n            <div className=\"AdminDashBG w-100\" id=\"main-area\">\n              \n            </div>\n          </div> */}\n        </div>\n      </Router>\n    </DashContainer>\n  );\n};\n\nexport default DashboardAdmin;\n","import React, { useState } from \"react\";\nimport { BsBuildingsFill } from \"react-icons/bs\";\nimport { FaAddressBook } from \"react-icons/fa\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { FaCalendarCheck } from \"react-icons/fa6\";\nimport { MdDashboard, MdMenuOpen, MdTaskAlt } from \"react-icons/md\";\nimport { TbDeviceIpadMinus } from \"react-icons/tb\";\nimport { MdHolidayVillage } from \"react-icons/md\";\nimport { FcLeave } from \"react-icons/fc\";\n\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Link } from \"react-router-dom\";\n\nconst Sidebar = (props) => {\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [extended, setExtended] = useState(false);\n\n  const allLinks = [\n    {\n      icon: <MdDashboard />,\n      name: \"Dashboard\",\n      navLinks: [{ to: \"/hr/dashboard\", label: \"Dashboard\" }]\n    },\n    {\n      icon: <FaUserCircle />,\n      name: \"Employee\",\n      navLinks: [\n        { to: \"/hr/employee\", label: \"Employee List\" },\n        { to: \"/hr/salary\", label: \"Salary\" }\n      ]\n    },\n    {\n      icon: <FaCalendarCheck />,\n      name: \"Attendance\",\n      navLinks: [\n        { to: \"/hr/attenDance\", label: \"Create Attendance\" },\n        { to: \"/hr/todaysAttendance\", label: \"TodaysAttendance\" },\n        { to: \"/hr/AttendanceRegister\", label: \"Attendance Register\" },\n        { to: \"/hr/viewAttenDance\", label: \"View Attendance\" },\n        { to: \"/hr/manualAttand\", label: \"All Emp Attendance\" }\n        // { to: \"/hr/leave-application-hr\", label: \"View All Leave \" }\n      ]\n    },\n    {\n      icon: <FcLeave />,\n      name: \"Leave\",\n      navLinks: [\n        { to: \"/hr/hrLeave\", label: \"Apply Leave\" },\n        { to: \"/hr/leaveApplication\", label: \"Pending \" },\n        { to: \"/hr/leaveAccepted\", label: \"Accepted \" },\n        { to: \"/hr/leaveRejected\", label: \"Rejected \" }\n      ]\n    },\n    {\n      icon: <MdTaskAlt />,\n      name: \"Task\",\n      navLinks: [\n        { to: \"/hr/newTask\", label: \"Assign New Task\" },\n        { to: \"/hr/ActiveTask\", label: \"Active Task\" },\n        { to: \"/hr/taskcancle\", label: \"Cancelled Task\" },\n        { to: \"/hr/taskcomplete\", label: \"Completed Task\" },\n        { to: \"/hr/rejectTask\", label: \"Rejected Task\" }\n      ]\n    },\n    {\n      icon: <TbDeviceIpadMinus />,\n      name: \"Access\",\n      navLinks: [\n        { to: \"/hr/role\", label: \"Role\" },\n        { to: \"/hr/position\", label: \"Position\" },\n        { to: \"/hr/department\", label: \"Department\" }\n      ]\n    },\n    {\n      icon: <BsBuildingsFill />,\n      name: \"Company\",\n      navLinks: [\n        { to: \"/hr/company\", label: \"Company List\" }\n        // { to: \"/hr/employee\", label: \"Create Employee\" },\n      ]\n    },\n    {\n      icon: <FaAddressBook />,\n      name: \"Address\",\n      navLinks: [\n        { to: \"/hr/country\", label: \"Country\" },\n        { to: \"/hr/state\", label: \"State\" },\n        { to: \"/hr/city\", label: \"City\" }\n      ]\n    },\n    {\n      icon: <MdHolidayVillage />,\n      name: \"Holiday\",\n      navLinks: [{ to: \"/hr/holiday\", label: \"Leave Calendar\" }]\n    },\n    {\n      icon: <MdHolidayVillage />,\n      name: \"Profile\",\n      navLinks: [\n        // { to: \"/hr/afroz\", label: \"My Profile\" }\n        {\n          to: \"/hr/\" + localStorage.getItem(\"_id\") + \"/profile\",\n          label: \"Profile\"\n        }\n      ]\n    }\n  ];\n\n  const ExtendClick = () => {\n    setExtended(extended ? false : true);\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        maxHeight: \"100%\",\n        overflowY: \"auto\",\n        overflow: \"inherit\",\n        width: \"fit-content\",\n        backgroundColor: \"var(--primaryDashColorDark)\"\n      }}\n      className=\"d-flex  flex-column gap-2 p-3\"\n    >\n      <h3\n        style={{ borderBottom: \"3px solid green\" }}\n        className=\"fw-bolder text-success justify-content-between py-2 d-flex gap-2\"\n      >\n        <p\n          style={{ display: !extended ? \"none\" : \"block\" }}\n          className=\"my-auto\"\n        >\n          HR\n        </p>{\" \"}\n        <span\n          onClick={ExtendClick}\n          style={{\n            border: \"none\",\n            outline: \"none\",\n            cursor: \"pointer\",\n            transform: `rotate(${!extended ? \"180deg\" : \"0deg\"})`\n          }}\n          className=\"my-auto p-0 fs-2 text-white\"\n        >\n          <MdMenuOpen />\n        </span>\n      </h3>\n\n      {allLinks.map(({ icon, name, navLinks }) => (\n        <div\n          key={name}\n          onMouseEnter={() => setActiveCategory(name)}\n          onMouseLeave={() => setActiveCategory(null)}\n          className=\"position-relative\"\n        >\n          <button\n            style={buttonStyle}\n            className=\"btn p-0 text-white text-start fw-bold gap-2 justify-between w-100 d-flex justify-content-between\"\n          >\n            <div\n              style={{ width: \"fit-content\" }}\n              className=\"d-flex my-auto gap-2\"\n            >\n              <p\n                style={{\n                  height: \"30px\",\n                  width: \"30px\",\n                  alignItems: \"center\",\n                  color: activeCategory === name ? \"#FF9209\" : \"white\"\n                }}\n                className=\"m-auto d-flex rounded-5  justify-content-center fs-3\"\n              >\n                {icon}\n              </p>\n              <p\n                style={{ display: !extended ? \"none\" : \"block\" }}\n                className=\"my-auto\"\n              >\n                {name}\n              </p>\n            </div>\n            <span\n              style={{\n                transform: `rotate(${\n                  activeCategory === name ? \"135deg\" : \"0deg\"\n                })`,\n                transition: \"1s ease\",\n                display: !extended ? \"none\" : \"block\"\n              }}\n              className=\"my-auto fs-4\"\n            >\n              +\n            </span>\n          </button>\n\n          <div\n            style={{\n              ...dropdownStyle,\n              display: activeCategory === name ? \"flex\" : \"none\",\n              backgroundColor: \"var(--primaryDashColorDark)\",\n              width: \"fit-content\"\n            }}\n            className=\"flex-column position-absolute top-0 start-100 py-2 px-2 gap-2 mt-2  \"\n          >\n            {navLinks.map((link) => (\n              <Link className=\"text-decoration-none\" key={link.to} to={link.to}>\n                <div className=\"text-decoration-none flex-nowrap text-start fw-bolder gap-3 text-white d-flex justify-content-between \">\n                  <div\n                    style={{ borderBottom: \"1px solid white\" }}\n                    className=\"d-flex gap-1 flex-nowrap\"\n                  >\n                    <p className=\"m-0\">{link.icon}</p>\n                    <p style={{ whiteSpace: \"pre\" }} className=\"m-auto\">\n                      {link.label}\n                    </p>\n                  </div>\n                  <span style={{}} className=\"my-auto \">\n                    ›\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst buttonStyle = {\n  outline: \"none\",\n  border: \"none\",\n  height: \"3rem\"\n};\n\nconst dropdownStyle = {\n  width: \"250px\",\n  zIndex: \"5\",\n  borderLeft: \"5px solid white\"\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { TbUsersPlus } from \"react-icons/tb\";\nimport BASE_URL from \"../config/config\";\n\nconst EmployeeForm = (props) => {\n  const [roleData, setRoleData] = useState([]);\n  const [positionData, setPositionData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [rowData, setRowData] = useState([]);\n  const [filterManagerData, setFilterManagerData] = useState([]);\n  const [filterHrData, setFilterHrData] = useState([]);\n  useEffect(() => {\n    loadRoleInfo();\n    loadPositionInfo();\n    loadDepartmentInfo();\n    loadEmployeeData();\n  }, []);\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        if (Array.isArray(response.data)) {\n          setRowData([]);\n          response.data.forEach((data) => {\n            let temp = {\n              Email: data[\"Email\"],\n              Account:\n                data[\"Account\"] === 1\n                  ? 1\n                  : data[\"Account\"] === 2\n                  ? 2\n                  : data[\"Account\"] === 3\n                  ? 3\n                  : data[\"Account\"] === 4\n                  ? 4\n                  : \"\",\n              FirstName: data[\"FirstName\"],\n              LastName: data[\"LastName\"],\n              empID: data[\"empID\"]\n            };\n\n            // Use set function to update state\n            setRowData((prevData) => [...prevData, temp]);\n          });\n        } else {\n          console.error(\"Data received is not an array:\", response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const loadRoleInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/role`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setRoleData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadPositionInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/position`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setPositionData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadDepartmentInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/department`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setDepartmentData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const managerFilterHandler = (value) => {\n    console.log(value);\n    if (+value === 2 || +value === 4 || +value === 1) {\n      const data = rowData.filter((val) => {\n        return +val.Account === 1;\n      });\n\n      setFilterManagerData(data);\n    } else if (+value === 3) {\n      const data = rowData.filter((val) => {\n        return +val.Account === 4;\n      });\n\n      setFilterManagerData(data);\n    }\n    const hrData = rowData.filter((val) => {\n      return val.Account === 2;\n    });\n    setFilterHrData(hrData);\n  };\n  console.log(filterHrData);\n  return (\n    <div className=\"container-fluid\">\n      <h4\n        style={{ position: \"sticky\", top: \"-.5rem\", zIndex: \"5\" }}\n        className=\"text-muted d-flex gap-2 align-items-center bg-light py-3 text-capitalize fw-bold\"\n      >\n        <TbUsersPlus />\n        Create New Employee\n      </h4>\n      <div className=\"row\">\n        <div className=\"col-4\"></div>\n        <div className=\"col-8\">\n          {\" \"}\n          <Form\n            id=\"form\"\n            onSubmit={props.onEmployeeSubmit}\n            className=\" d-flex flex-column p-2 mb-5 rounded shadow-sm \"\n            encType=\"multipart/form-data\"\n          >\n            <div\n              style={{ letterSpacing: \".1rem\" }}\n              className=\"d-flex w-100 fw-bold text-muted flex-column rounded \"\n            >\n              <div className=\"row row-gap-1 \">\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Email\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"email\" placeholder=\"Email\" />\n                  </Col>\n                </div>\n\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Password\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                  </Col>\n                </div>\n\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Account access\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control\n                      as=\"select\"\n                      onBlur={(e) => managerFilterHandler(e.target.value)}\n                    >\n                      <option value=\"1\">Admin</option>\n                      <option value=\"2\">HR</option>\n                      <option value=\"3\">Employee</option>\n                      <option value=\"4\">Manager</option>\n                    </Form.Control>\n                  </Col>\n                </div>\n\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Role\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control as=\"select\" name=\"role\">\n                      <option disabled selected>\n                        Select your option\n                      </option>\n                      {roleData.map((data, index) => (\n                        <option key={index} value={data[\"_id\"]}>\n                          {data[\"RoleName\"]}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label as=\"legend\" column sm={12}>\n                    Gender\n                  </Form.Label>\n                  <Col className=\"my-1\" sm={12}>\n                    <Form.Check\n                      inline\n                      type=\"radio\"\n                      label=\"Male\"\n                      value=\"male\"\n                      name=\"gender\"\n                      onChange={props.onGenderChange}\n                    />\n                    <Form.Check\n                      inline\n                      type=\"radio\"\n                      label=\"Female\"\n                      value=\"female\"\n                      name=\"gender\"\n                      onChange={props.onGenderChange}\n                    />\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    First Name\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"text\" placeholder=\"First Name\" />\n                  </Col>\n                </div>\n                {/* <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Middle Name\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"text\" placeholder=\"Middle Name\" />\n                  </Col>\n                </div> */}\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Last Name\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"text\" placeholder=\"Last Name\" />\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    DOB\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"date\" placeholder=\"DOB\" />\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Contact No\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"text\" placeholder=\"Contact No \" />\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Department\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control as=\"select\" name=\"department\">\n                      <option value=\"\" disabled selected>\n                        Select your option\n                      </option>\n                      {departmentData.map((data, index) => (\n                        <option key={index} value={data[\"_id\"]}>\n                          {data[\"DepartmentName\"]}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Position\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control as=\"select\" name=\"position\">\n                      <option value=\"\" disabled selected>\n                        Select your option\n                      </option>\n                      {positionData.map((data, index) => (\n                        <option key={index} value={data[\"_id\"]}>\n                          {data[\"PositionName\"]}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Date Of Joining\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"date\" placeholder=\"Date Of Joining\" />\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Profile Image\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control type=\"file\" />\n                  </Col>\n                </div>\n\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Reporting Manager\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control as=\"select\" name=\"role\">\n                      <option selected>Select your option</option>\n                      {filterManagerData.map((data, index) => (\n                        <option key={index} value={data[\"Email\"]}>\n                          {data[\"Email\"]}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                </div>\n                <div className=\"form-group col-12 col-md-6 p-0\">\n                  <Form.Label column sm={12}>\n                    Reporting Hr\n                  </Form.Label>\n                  <Col sm={12} className=\"form-input\">\n                    <Form.Control as=\"select\" name=\"role\">\n                      <option selected>Select your option</option>\n                      {filterHrData.map((data, index) => (\n                        <option key={index} value={data.Email}>\n                          {data.Email}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                </div>\n                <div\n                  className=\"form-group col-12 d-flex  gap-5\"\n                  id=\"form-submit-button\"\n                >\n                  <Button\n                    className=\"mx-2 px-5 rounded-5 fw-bold\"\n                    style={{\n                      backgroundColor: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\",\n                      border: \"none\",\n                      outline: \"none\"\n                    }}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                  <button\n                    className=\"mx-2 px-5 fw-bold rounded-5 \"\n                    style={{\n                      backgroundColor: \"red\",\n                      color: \"white\",\n                      border: \"none\",\n                      outline: \"none\"\n                    }}\n                    type=\"reset\"\n                    onClick={props.onFormClose}\n                  >\n                    cancel\n                  </button>\n                </div>\n                <div\n                  className=\"form-group col-12 col-md-6 p-0\"\n                  id=\"form-cancel-button\"\n                ></div>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n\n    // <div className=\"registration-page py-4 \">\n    //   <h2 className=\"text-center text-black text-uppercase fw-bold my-4\">\n    //     Add New Employee\n    //   </h2>\n\n    //   <Form\n    //     id=\"form\"\n    //     onSubmit={props.onEmployeeSubmit}\n    //     className=\"container d-flex flex-column m-10 empForm\"\n    //     encType=\"multipart/form-data\"\n    //   >\n    //     <div className=\"d-flex w-100 flex-column gap-6 rounded \">\n    //       <div style={{ padding: \"80px\" }} className=\"row row-gap-3 \">\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Email\n    //           </Form.Label>\n\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"email\" placeholder=\"Email\" />\n    //           </Col>\n    //         </div>\n\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Password\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"password\" placeholder=\"Password\" />\n    //           </Col>\n    //         </div>\n\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Account access\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control\n    //               as=\"select\"\n    //               onBlur={(e) => managerFilterHandler(e.target.value)}\n    //             >\n    //               <option value=\"1\">Admin</option>\n    //               <option value=\"2\">HR</option>\n    //               <option value=\"3\">Employee</option>\n    //               <option value=\"4\">Manager</option>\n    //             </Form.Control>\n    //           </Col>\n    //         </div>\n\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Role\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control as=\"select\" name=\"role\">\n    //               <option disabled selected>\n    //                 Select your option\n    //               </option>\n    //               {roleData.map((data, index) => (\n    //                 <option key={index} value={data[\"_id\"]}>\n    //                   {data[\"RoleName\"]}\n    //                 </option>\n    //               ))}\n    //             </Form.Control>\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label as=\"legend\" column sm={6}>\n    //             Gender\n    //           </Form.Label>\n    //           <Col sm={10}>\n    //             <Form.Check\n    //               inline\n    //               type=\"radio\"\n    //               label=\"Male\"\n    //               value=\"male\"\n    //               name=\"gender\"\n    //               onChange={props.onGenderChange}\n    //             />\n    //             <Form.Check\n    //               inline\n    //               type=\"radio\"\n    //               label=\"Female\"\n    //               value=\"female\"\n    //               name=\"gender\"\n    //               onChange={props.onGenderChange}\n    //             />\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             First Name\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"text\" placeholder=\"First Name\" />\n    //           </Col>\n    //         </div>\n    //         {/* <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Middle Name\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"text\" placeholder=\"Middle Name\" />\n    //           </Col>\n    //         </div> */}\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Last Name\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"text\" placeholder=\"Last Name\" />\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             DOB\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"date\" placeholder=\"DOB\" />\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Contact No\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"text\" placeholder=\"Contact No \" />\n    //           </Col>\n    //         </div>\n    //         {/* <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Employee Code\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control\n    //               type=\"text\"\n    //               placeholder=\"Employee Code\"\n\n    //             />\n    //           </Col>\n    //         </div> */}\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Department\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control as=\"select\" name=\"department\">\n    //               <option value=\"\" disabled selected>\n    //                 Select your option\n    //               </option>\n    //               {departmentData.map((data, index) => (\n    //                 <option key={index} value={data[\"_id\"]}>\n    //                   {data[\"DepartmentName\"]}\n    //                 </option>\n    //               ))}\n    //             </Form.Control>\n    //           </Col>\n    //         </div>\n\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Position\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control as=\"select\" name=\"position\">\n    //               <option value=\"\" disabled selected>\n    //                 Select your option\n    //               </option>\n    //               {positionData.map((data, index) => (\n    //                 <option key={index} value={data[\"_id\"]}>\n    //                   {data[\"PositionName\"]}\n    //                 </option>\n    //               ))}\n    //             </Form.Control>\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Date Of Joining\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"date\" placeholder=\"Date Of Joining\" />\n    //           </Col>\n    //         </div>\n\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Profile Image\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control type=\"file\" />\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Reporting Manager\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control as=\"select\" name=\"role\">\n    //               <option selected>Select your option</option>\n    //               {filterManagerData.map((data, index) => (\n    //                 <option key={index} value={data[\"Email\"]}>\n    //                   {data[\"Email\"]}\n    //                 </option>\n    //               ))}\n    //             </Form.Control>\n    //           </Col>\n    //         </div>\n    //         <div className=\"form-group col-12 col-md-6\">\n    //           <Form.Label column sm={6}>\n    //             Reporting Hr\n    //           </Form.Label>\n    //           <Col sm={10} className=\"form-input\">\n    //             <Form.Control as=\"select\" name=\"role\">\n    //               <option selected>Select your option</option>\n    //               {filterHrData.map((data, index) => (\n    //                 <option key={index} value={data.Email}>\n    //                   {data.Email}\n    //                 </option>\n    //               ))}\n    //             </Form.Control>\n    //           </Col>\n    //         </div>\n\n    //         {/* <div className=\"form-group col-12 col-md-6\">\n    //         <label>\n    //           Terminate Date\n    //         </label>\n    //         <Col sm={10} className=\"form-input\">\n    //           <Form.Control\n    //             type=\"date\"\n    //             placeholder=\"Terminate Date\"\n    //           />\n    //         </Col>\n    //       </div> */}\n\n    //         <div\n    //           className=\"form-group col-12 d-flex  gap-5\"\n    //           id=\"form-submit-button\"\n    //         >\n    //           <Button className=\"mx-3\" type=\"submit\">\n    //             Submit\n    //           </Button>\n    //           <Button className=\"mx-3\" type=\"reset\" onClick={props.onFormClose}>\n    //             cancel\n    //           </Button>\n    //         </div>\n    //         <div\n    //           className=\"form-group col-12 col-md-6\"\n    //           id=\"form-cancel-button\"\n    //         ></div>\n    //       </div>\n    //     </div>\n    //   </Form>\n    // </div>\n  );\n};\n\nexport default EmployeeForm;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport \"./EmployeeFormEdit.css\";\nimport BASE_URL from \"../config/config\";\n\nconst EmployeeFormEdit = (props) => {\n  const [roleData, setRoleData] = useState([]);\n  const [positionData, setPositionData] = useState([]);\n  const [departmentData, setDepartmentData] = useState([]);\n  const [filterManagerData, setFilterManagerData] = useState([]);\n  const [filterHrData, setFilterHrData] = useState([]);\n  const [rowData, setRowData] = useState([]);\n\n  const [genderData, setGenderData] = useState(props.editData[\"Gender\"]);\n  const [emailData, setEmailData] = useState(props.editData[\"Email\"]);\n  const [firstNameData, setFirstNameData] = useState(\n    props.editData[\"FirstName\"]\n  );\n  // const [middleNameData, setMiddleNameData] = useState(\n  //   props.editData[\"MiddleName\"]\n  // );\n  const [lastNameData, setLastNameData] = useState(props.editData[\"LastName\"]);\n  const [dobData, setDobData] = useState(props.editData[\"DOB\"].slice(0, 10));\n  const [contactNoData, setContactNoData] = useState(\n    props.editData[\"ContactNo\"]\n  );\n  const [profile, setProfile] = useState(props.editData[\"profile\"]);\n  const [employeeCodeData, setEmployeeCodeData] = useState(\n    props.editData[\"EmployeeCode\"]\n  );\n  const [dateOfJoiningData, setDateOfJoiningData] = useState(\n    props.editData[\"DateOfJoining\"].slice(0, 10)\n  );\n\n  useEffect(() => {\n    loadRoleInfo();\n    loadPositionInfo();\n    loadDepartmentInfo();\n    loadEmployeeData();\n  }, []);\n\n  const loadEmployeeData = () => {\n    axios\n      .get(\"http://localhost:4000/api/employee\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        if (Array.isArray(response.data)) {\n          setRowData([]);\n          response.data.forEach((data) => {\n            let temp = {\n              Email: data[\"Email\"],\n              Account:\n                data[\"Account\"] === 1\n                  ? 1\n                  : data[\"Account\"] === 2\n                  ? 2\n                  : data[\"Account\"] === 3\n                  ? 3\n                  : data[\"Account\"] === 4\n                  ? 4\n                  : \"\",\n              FirstName: data[\"FirstName\"],\n              LastName: data[\"LastName\"],\n              empID: data[\"empID\"]\n            };\n\n            // Use set function to update state\n            setRowData((prevData) => [...prevData, temp]);\n          });\n        } else {\n          console.error(\"Data received is not an array:\", response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadRoleInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/role`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setRoleData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadPositionInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/position`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setPositionData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const loadDepartmentInfo = () => {\n    axios\n      .get(`${BASE_URL}/api/department`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        setDepartmentData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const managerFilterHandler = (value) => {\n    console.log(value);\n    if (+value === 2 || +value === 4 || +value === 1) {\n      const data = rowData.filter((val) => {\n        return +val.Account === 1;\n      });\n\n      setFilterManagerData(data);\n    } else if (+value === 3) {\n      const data = rowData.filter((val) => {\n        return +val.Account === 4;\n      });\n\n      setFilterManagerData(data);\n    }\n    const hrData = rowData.filter((val) => {\n      return val.Account === 2;\n    });\n    setFilterHrData(hrData);\n  };\n  console.log(filterHrData);\n\n  const onEmailDataChange = (e) => {\n    setEmailData(e.target.value);\n  };\n\n  const onFirstNameDataChange = (e) => {\n    setFirstNameData(e.target.value);\n  };\n\n  // const onMiddleNameDataChange = (e) => {\n  //   setMiddleNameData(e.target.value);\n  // };\n\n  const onLastNameDataChange = (e) => {\n    setLastNameData(e.target.value);\n  };\n\n  const onContactNoDataChange = (e) => {\n    setContactNoData(e.target.value);\n  };\n\n  const onEmployeeCodeDataChange = (e) => {\n    setEmployeeCodeData(e.target.value);\n  };\n\n  const onGenderChange = (e) => {\n    setGenderData(e.target.value);\n    props.onGenderChange(e);\n  };\n\n  const onDOBDataChange = (e) => {\n    setDobData(e.target.value);\n  };\n\n  const onDateOfJoiningDataChange = (e) => {\n    setDateOfJoiningData(e.target.value);\n  };\n\n  const onProfileDataChange = (e) => {\n    setProfile(e.target.files[0]);\n  };\n\n  const onFormSubmit = (e) => {\n    props.onEmployeeEditUpdate(props.editData, e);\n  };\n\n  const onFormClose = () => {\n    props.onFormEditClose();\n  };\n\n  return (\n    <React.Fragment\n      style={{ height: \"100vh\", width: \"100%\" }}\n      className=\"registration-page py-4\"\n    >\n      <h2\n        id=\"role-form-title\"\n        className=\"text-center text-black text-uppercase fw-bold my-4\"\n      >\n        Edit Employee Details\n      </h2>\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) => props.onEmployeeEditUpdate(props.editData, e)}\n        >\n          <div className=\"d-flex w-100 flex-column gap-2 rounded \">\n            <div className=\"row row-gap-3 \">\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Email\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={emailData}\n                    disabled\n                    onChange={(value) => onEmailDataChange(value)}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Account access\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    as=\"select\"\n                    required\n                    onBlur={(e) => managerFilterHandler(e.target.value)}\n                  >\n                    <option value=\"1\" selected={props.editData[\"Account\"] == 1}>\n                      Admin\n                    </option>\n                    <option value=\"2\" selected={props.editData[\"Account\"] == 2}>\n                      HR\n                    </option>\n                    <option value=\"3\" selected={props.editData[\"Account\"] == 3}>\n                      Employee\n                    </option>\n                    <option value=\"4\" selected={props.editData[\"Account\"] == 4}>\n                      Manager\n                    </option>\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Role\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"role\">\n                    <option disabled selected>\n                      Select your option\n                    </option>\n                    {roleData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={\n                          props.editData[\"role\"][0][\"_id\"] == data[\"_id\"]\n                        }\n                      >\n                        {data[\"RoleName\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label as=\"legend\" column sm={6}>\n                  Gender\n                </Form.Label>\n                <Col sm={10}>\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Male\"\n                    value=\"male\"\n                    name=\"gender\"\n                    onChange={onGenderChange}\n                    checked={genderData == \"male\"}\n                    required\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Female\"\n                    value=\"female\"\n                    name=\"gender\"\n                    onChange={onGenderChange}\n                    checked={genderData == \"female\"}\n                    required\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  First Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    required\n                    value={firstNameData}\n                    onChange={(value) => onFirstNameDataChange(value)}\n                  />\n                </Col>\n              </div>\n              {/* <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Middle Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Middle Name\"\n                    required\n                    value={middleNameData}\n                    onChange={(value) => onMiddleNameDataChange(value)}\n                  />\n                </Col>\n              </div> */}\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Last Name\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    required\n                    value={lastNameData}\n                    onChange={(value) => onLastNameDataChange(value)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  DOB\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"DOB\"\n                    required\n                    //   value={this.props.editData[\"DOB\"].slice(0, 10)}\n                    value={dobData}\n                    onChange={(value) => onDOBDataChange(value)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Contact No\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Contact No \"\n                    required\n                    value={contactNoData}\n                    onChange={(value) => onContactNoDataChange(value)}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Department\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"department\" required>\n                    <option value=\"\" disabled selected>\n                      Select your option\n                    </option>\n                    {departmentData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={\n                          props.editData[\"department\"][0][\"_id\"] == data[\"_id\"]\n                        }\n                      >\n                        {data[\"DepartmentName\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Position\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"position\" required>\n                    <option value=\"\" disabled selected>\n                      Select your option\n                    </option>\n                    {positionData.map((data, index) => (\n                      <option\n                        key={index}\n                        value={data[\"_id\"]}\n                        selected={\n                          props.editData[\"position\"][0][\"_id\"] == data[\"_id\"]\n                        }\n                      >\n                        {data[\"PositionName\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Date Of Joining\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Date Of Joining\"\n                    required\n                    // value={this.props.editData[\"DateOfJoining\"].slice(0, 10)}\n                    value={dateOfJoiningData}\n                    onChange={(value) => onDateOfJoiningDataChange(value)}\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Label column sm={6}>\n                  Profile Image\n                </Form.Label>\n                <Col sm={10} className=\"form-input\">\n                  <Form.Control\n                    type=\"file\"\n                    //  value={profile}\n                    //  onChange={(value) => onProfileDataChange(value)}\n                    // required\n                  />\n                </Col>\n              </div>\n\n              <div className=\"form-group col-12 col-md-6 p-0\">\n                <Form.Label column sm={12}>\n                  Reporting Manager\n                </Form.Label>\n                <Col sm={12} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"role\">\n                    <option selected>Select your option</option>\n                    {filterManagerData.map((data, index) => (\n                      <option key={index} value={data[\"Email\"]}>\n                        {data[\"Email\"]}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n              <div className=\"form-group col-12 col-md-6 p-0\">\n                <Form.Label column sm={12}>\n                  Reporting Hr\n                </Form.Label>\n                <Col sm={12} className=\"form-input\">\n                  <Form.Control as=\"select\" name=\"role\">\n                    <option selected>Select your option</option>\n                    {filterHrData.map((data, index) => (\n                      <option key={index} value={data.Email}>\n                        {data.Email}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Col>\n              </div>\n\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-submit-button\"\n              >\n                <Col sm={{ span: 10, offset: 2 }}>\n                  <Button type=\"submit\">Submit</Button>\n                </Col>\n              </div>\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-cancel-button\"\n              >\n                <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                  <Button type=\"reset\" onClick={onFormClose}>\n                    cancel\n                  </Button>\n                </Col>\n              </div>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default EmployeeFormEdit;\n","import React, { Component } from \"react\";\nimport \"./EmployeeInfo.css\";\nimport { Button, Col } from \"react-bootstrap\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./EmployeeInfo.css\";\n\nexport class EmployeeInfo extends Component {\n  render() {\n    return (\n      <div>\n        <div\n          onClick={\n            this.props.onBack\n            // console.log(\"back1\")\n          }\n        >\n          {\" \"}\n          <Button variant=\"primary\" id=\"add-button\">\n            Back\n          </Button>\n        </div>\n\n        <h2 id=\"role-title\">\n          Employee Information of{\" \"}\n          {this.props.data[\"FirstName\"] + \" \" + this.props.data[\"LastName\"]}\n        </h2>\n        <div id=\"outer-empingo-div\">\n          <Link to=\"/hr/employee/info/personal-info\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Personal Information\n            </Button>\n          </Link>\n          <Link to=\"/hr/employee/info/education\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Education\n            </Button>\n          </Link>\n          <Link to=\"/hr/employee/info/family-info\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Dependents\n            </Button>\n          </Link>\n          <Link to=\"/hr/employee/info/work-experience\">\n            <Button\n              variant=\"outline-primary\"\n              size=\"lg\"\n              block\n              className=\"empinfo-button\"\n            >\n              Work Experience\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeInfo;\n","export default __webpack_public_path__ + \"static/media/FloralAbstract.033bb0de.jpg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegEdit } from \"react-icons/fa\";\n\nimport InnerDashContainer from \"../../InnerDashContainer\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst EducationTable = (props) => {\n  const [educationData, setEducationData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    const loadEducationData = () => {\n      axios\n        // .get(`http://localhost:4000/api/education/${props.data[\"_id\"]}`,\n        .get(\n          \"http://localhost:4000/api/education/\" + localStorage.getItem(\"_id\"),\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        )\n        .then((response) => {\n          const educationObj = response.data;\n          console.log(\"response\", response.data);\n          setEducationData(educationObj);\n          setLoading(false);\n\n          const rowDataT = educationObj.education.map((data) => ({\n            data,\n            SchoolUniversity: data[\"SchoolUniversity\"],\n            Degree: data[\"Degree\"],\n            Grade: data[\"Grade\"],\n            PassingOfYear: data[\"PassingOfYear\"]\n          }));\n\n          setRowData(rowDataT);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    loadEducationData();\n  }, [localStorage.getItem(\"_id\")]);\n  // [props.data[\"_id\"]]);\n\n  const onEducationDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`http://localhost:4000/api/education/${e1}/${e2}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then(() => {\n          educationData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const renderButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() =>\n          onEducationDelete(props.data[\"_id\"], params.data.data[\"_id\"])\n        }\n      />\n    );\n  };\n\n  const renderEditButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditEducation(params.data.data)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <InnerDashContainer>\n        <div className=\"py-1\">\n          <Button variant=\"primary\" onClick={props.onAddEducation}>\n            <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n            Add Details\n          </Button>\n        </div>\n\n        <div id=\"clear-both\" />\n\n        {!loading ? (\n          <div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                  >\n                    School/University\n                  </th>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                  >\n                    Degree\n                  </th>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                  >\n                    Grade\n                  </th>\n                  <th\n                    style={{\n                      background: \"var(--primaryDashColorDark)\",\n                      color: \"var(--primaryDashMenuColor)\"\n                    }}\n                    className=\"text-center\"\n                  >\n                    Passing Year\n                  </th>\n                  <th\n                    style={{\n                      background:\n                        \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                      color: \"white\"\n                    }}\n                  >\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {rowData.map((items, index) => (\n                  <tr key={index}>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold\"\n                    >\n                      {items.SchoolUniversity}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold\"\n                    >\n                      {items.Degree}\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold\"\n                    >\n                      <button className=\"btn btn-success w-100 fw-bold py-0 rounded-5\">\n                        {items.Grade}\n                      </button>\n                    </td>\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      className=\"text-uppercase fw-bold text-center\"\n                    >\n                      {items.PassingOfYear}\n                    </td>\n                    <td style={{ verticalAlign: \"middle\" }}>\n                      <button\n                        onClick={() => props.onEditEducation(items.data)}\n                        style={{\n                          zIndex: \"1\",\n                          cursor: \"pointer\"\n                        }}\n                        className=\"d-flex btn py-0 px-3 shadow-sm justify-content-around align-items-center\"\n                      >\n                        <FaRegEdit className=\"fs-4 text-primary bg-white p-1 rounded-5\" />\n                        <span className=\"fw-bold text-muted\">Update</span>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div id=\"loading-bar\">\n            <RingLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={50}\n              color={\"#0000ff\"}\n              loading={true}\n            />\n          </div>\n        )}\n      </InnerDashContainer>\n    </div>\n  );\n};\n\nexport default EducationTable;\n","// import React, { Component } from \"react\";\n// import \"./EducationForm.css\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n// import axios from \"axios\";\n\n// class EducationForm extends Component {\n//   state = {};\n//   componentWillMount() {}\n//   render() {\n//     return (\n//       <div>\n//         <h2 id=\"role-form-title\">Add Education Details</h2>\n//         <div id=\"role-form-outer-div\">\n//           <Form id=\"form\" onSubmit={this.props.onEducationSubmit}>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 School / University\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"Text\"\n//                   placeholder=\"School / University \"\n//                   required\n//                 />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Degree\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"Text\" placeholder=\"Degree \" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Grade\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"Text\" placeholder=\"Grade\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Passing Of Year\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"Text\"\n//                   placeholder=\"Passing Of Year\"\n//                   required\n//                 />\n//               </Col>\n//             </Form.Group>\n\n//             <Form.Group as={Row} id=\"form-submit-button\">\n//               <Col sm={{ span: 10, offset: 2 }}>\n//                 <Button type=\"submit\">Submit</Button>\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row} id=\"form-cancel-button\">\n//               <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n//                 <Button type=\"reset\" onClick={this.props.onFormClose}>\n//                   cancel\n//                 </Button>\n//               </Col>\n//             </Form.Group>\n//           </Form>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default EducationForm;\n\nimport React from \"react\";\nimport \"./EducationForm.css\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst EducationForm = (props) => {\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Add Education Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form id=\"form\" onSubmit={props.onEducationSubmit}>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              School / University\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"School / University \"\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Degree\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Degree \" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Grade\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Grade\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Passing Of Year\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Passing Of Year\"\n                required\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Submit</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default EducationForm;\n","// import React, { Component } from \"react\";\n// // import \"./EducationFormEdit.css\";\n// // import { Form,Button } from \"react-bootstrap\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n// import axios from \"axios\";\n\n// class EducationForm extends Component {\n//   state = {\n//     // EducationData: this.props.editData[\"EducationName\"],\n\n//     SchoolUniversityData: this.props.editData[\"SchoolUniversity\"],\n//     DegreeData: this.props.editData[\"Degree\"],\n//     GradeData: this.props.editData[\"Grade\"],\n//     PassingOfYearData: this.props.editData[\"PassingOfYear\"]\n//   };\n//   onSchoolUniversityDataChange(e) {\n//     this.setState({ SchoolUniversityData: e.target.value });\n//   }\n//   onDegreeDataChange(e) {\n//     this.setState({ DegreeData: e.target.value });\n//   }\n//   onGradeDataChange(e) {\n//     this.setState({ GradeData: e.target.value });\n//   }\n//   onPassingOfYearDataChange(e) {\n//     this.setState({ PassingOfYearData: e.target.value });\n//   }\n\n//   componentWillMount() {\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h2 id=\"role-form-title\">Edit Education Details</h2>\n\n//         <div id=\"role-form-outer-div\">\n//           <Form\n//             id=\"form\"\n//             onSubmit={e =>\n//               this.props.onEducationEditUpdate(this.props.editData, e)\n//             }\n//           >\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 School / University\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"Text\"\n//                   placeholder=\"School / University \"\n//                   required\n//                   value={this.state.SchoolUniversityData}\n//                   onChange={value => this.onSchoolUniversityDataChange(value)}\n//                 />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Degree\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"Text\"\n//                   placeholder=\"Degree \"\n//                   required\n//                   value={this.state.DegreeData}\n//                   onChange={value => this.onDegreeDataChange(value)}\n//                 />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Grade\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"Text\"\n//                   placeholder=\"Grade\"\n//                   required\n//                   value={this.state.GradeData}\n//                   onChange={value => this.onGradeDataChange(value)}\n//                 />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Passing Of Year\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control\n//                   type=\"Text\"\n//                   placeholder=\"Passing Of Year\"\n//                   required\n//                   value={this.state.PassingOfYearData}\n//                   onChange={value => this.onPassingOfYearDataChange(value)}\n//                 />\n//               </Col>\n//             </Form.Group>\n\n//             <Form.Group as={Row} id=\"form-submit-button\">\n//               <Col sm={{ span: 10, offset: 2 }}>\n//                 <Button type=\"submit\">Update</Button>\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row} id=\"form-cancel-button\">\n//               <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n//                 <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n//                   cancel\n//                 </Button>\n//               </Col>\n//             </Form.Group>\n//           </Form>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default EducationForm;\n\nimport React, { useState } from \"react\";\n// import \"./EducationFormEdit.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst EducationForm = (props) => {\n  const [state, setState] = useState({\n    SchoolUniversityData: props.editData[\"SchoolUniversity\"],\n    DegreeData: props.editData[\"Degree\"],\n    GradeData: props.editData[\"Grade\"],\n    PassingOfYearData: props.editData[\"PassingOfYear\"]\n  });\n\n  const onSchoolUniversityDataChange = (e) => {\n    setState({ ...state, SchoolUniversityData: e.target.value });\n  };\n\n  const onDegreeDataChange = (e) => {\n    setState({ ...state, DegreeData: e.target.value });\n  };\n\n  const onGradeDataChange = (e) => {\n    setState({ ...state, GradeData: e.target.value });\n  };\n\n  const onPassingOfYearDataChange = (e) => {\n    setState({ ...state, PassingOfYearData: e.target.value });\n  };\n\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Edit Education Details</h2>\n\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) => props.onEducationEditUpdate(props.editData, e)}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              School / University\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"School / University \"\n                required\n                value={state.SchoolUniversityData}\n                onChange={(e) => onSchoolUniversityDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Degree\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Degree \"\n                required\n                value={state.DegreeData}\n                onChange={(e) => onDegreeDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Grade\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Grade\"\n                required\n                value={state.GradeData}\n                onChange={(e) => onGradeDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Passing Of Year\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Passing Of Year\"\n                required\n                value={state.PassingOfYearData}\n                onChange={(e) => onPassingOfYearDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Update</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormEditClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default EducationForm;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Education.css\";\nimport EducationTable from \"./EducationTable.jsx\";\nimport EducationForm from \"./EducationForm.jsx\";\nimport EducationFormEdit from \"./EducationFormEdit.jsx\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\n\nconst Education = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleEducationSubmit = (event) => {\n    event.preventDefault();\n    setTable(true);\n\n    const body = {\n      SchoolUniversity: event.target[0].value,\n      Degree: event.target[1].value,\n      Grade: event.target[2].value,\n      PassingOfYear: event.target[3].value\n    };\n\n    axios\n      .post(`${BASE_URL}/api/education/${props.data[\"_id\"]}`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then(() => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddEducation = () => {\n    setTable(false);\n  };\n\n  const handleEditEducation = (e) => {\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    setEditForm(false);\n  };\n\n  const handleEducationEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n\n    const body = {\n      SchoolUniversity: newInfo.target[0].value,\n      Degree: newInfo.target[1].value,\n      Grade: newInfo.target[2].value,\n      PassingOfYear: newInfo.target[3].value\n    };\n\n    axios\n      .put(`${BASE_URL}/api/education/${info[\"_id\"]}`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then(() => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n\n  return (\n    <>\n      {table ? (\n        editForm ? (\n          <EducationFormEdit\n            onEducationEditUpdate={handleEducationEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <EducationTable\n            onAddEducation={handleAddEducation}\n            onEditEducation={handleEditEducation}\n            data={props.data}\n            back={props.back}\n          />\n        )\n      ) : (\n        <EducationForm\n          onEducationSubmit={handleEducationSubmit}\n          onFormClose={handleFormClose}\n          // onGenderChange={handleAddFormGenderChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Education;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport \"./WorkExperienceTable.css\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst WorkExperienceTable = (props) => {\n  const [workExperienceData, setWorkExperienceData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n\n  // Removed const from here\n  let workExperienceObj = [];\n  let rowDataT = [];\n\n  const loadWorkExperienceData = () => {\n    axios\n      .get(`${BASE_URL}/api/work-experience/` + localStorage.getItem(\"_id\"), {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        workExperienceObj = response.data;\n        console.log(\"response\", response.data);\n        setWorkExperienceData(response.data);\n        setLoading(false);\n        rowDataT.length = 0;\n        workExperienceObj.workExperience.map((data) => {\n          let temp = {\n            data,\n            CompanyName: data[\"CompanyName\"],\n            Designation: data[\"Designation\"],\n            FromDate: data[\"FromDate\"].slice(0, 10),\n            ToDate: data[\"ToDate\"].slice(0, 10)\n          };\n\n          rowDataT.push(temp);\n        });\n        setRowData(rowDataT);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onWorkExperienceDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \") === true) {\n      axios\n        .delete(`${BASE_URL}/api/work-experience/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadWorkExperienceData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadWorkExperienceData();\n  }, []);\n\n  // Corrected function declaration\n  const renderButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() =>\n          onWorkExperienceDelete(props.data[\"_id\"], params.data.data[\"_id\"])\n        }\n      />\n    );\n  };\n\n  // Corrected function declaration\n  const renderEditButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditWorkExperience(params.data.data)}\n      />\n    );\n  };\n\n  return (\n    <div id=\"table-outer-div-scroll\">\n      <h2 id=\"role-title\">\n        Employee Work Experience Details{\" \"}\n        {props.back\n          ? \"of \" + props.data[\"FirstName\"] + \" \" + props.data[\"LastName\"]\n          : \"\"}\n      </h2>\n\n      {props.back ? (\n        <Link to=\"/hr/employee\">\n          <Button variant=\"primary\" id=\"add-button\">\n            Back\n          </Button>\n        </Link>\n      ) : (\n        <Button\n          variant=\"primary\"\n          id=\"add-button\"\n          onClick={props.onAddWorkExperience}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Add\n        </Button>\n      )}\n\n      <div id=\"clear-both\" />\n\n      {!loading ? (\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Company Name\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Designation\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                FromDate\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                ToDate\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {rowData.map((items, index) => (\n              <tr key={index}>\n                <td className=\"text-uppercase\">{items.CompanyName}</td>\n                <td className=\"text-uppercase\">{items.Designation}</td>\n                <td className=\"text-uppercase\">{items.FromDate}</td>\n                <td className=\"text-uppercase\">{items.ToDate}</td>\n                {/* <td>\n                  {\" \"}\n                  <button\n                    onClick={() => props.onEditWorkExperience(items.data)}\n                    style={{\n                      zIndex: \"1\",\n                      cursor: \"pointer\"\n                    }}\n                    className=\"btn\"\n                  >\n                    <FaRegEdit className=\"fs-4 text-primary bg-white p-1 rounded-5\" />\n                  </button>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkExperienceTable;\n","// import React, { Component } from \"react\";\n// import \"./WorkExperienceForm.css\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n// import axios from \"axios\";\n\n// class WorkExperienceForm extends Component {\n//   state = {};\n//   componentWillMount() {}\n//   render() {\n//     return (\n//       <div>\n//         <h2 id=\"role-form-title\">Add WorkExperience Details</h2>\n//         <div id=\"role-form-outer-div\">\n//           <Form id=\"form\" onSubmit={this.props.onWorkExperienceSubmit}>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Company Name\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"Text\" placeholder=\"CompanyName\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 Designation\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"Text\" placeholder=\"Designation\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 FromDate\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"date\" required />\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row}>\n//               <Form.Label column sm={2}>\n//                 ToDate\n//               </Form.Label>\n//               <Col sm={10} className=\"form-input\">\n//                 <Form.Control type=\"date\" placeholder=\"ToDate\" required />\n//               </Col>\n//             </Form.Group>\n\n//             <Form.Group as={Row} id=\"form-submit-button\">\n//               <Col sm={{ span: 10, offset: 2 }}>\n//                 <Button type=\"submit\">Submit</Button>\n//               </Col>\n//             </Form.Group>\n//             <Form.Group as={Row} id=\"form-cancel-button\">\n//               <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n//                 <Button type=\"reset\" onClick={this.props.onFormClose}>\n//                   cancel\n//                 </Button>\n//               </Col>\n//             </Form.Group>\n//           </Form>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default WorkExperienceForm;\n\nimport React from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./WorkExperienceForm.css\";\n\nconst WorkExperienceForm = (props) => {\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Add WorkExperience Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form id=\"form\" onSubmit={props.onWorkExperienceSubmit}>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Company Name\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"CompanyName\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Designation\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Designation\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              FromDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"date\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              ToDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"date\" placeholder=\"ToDate\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Submit</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkExperienceForm;\n","import React, { Component } from \"react\";\n// import \"./WorkExperienceFormEdit.css\";\n// import { Form,Button } from \"react-bootstrap\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass WorkExperienceForm extends Component {\n  state = {\n    // WorkExperienceData: this.props.editData[\"WorkExperienceName\"],\n\n    CompanyNameData: this.props.editData[\"CompanyName\"],\n    DesignationData: this.props.editData[\"Designation\"],\n    FromDateData: this.props.editData[\"FromDate\"].slice(0, 10),\n    ToDateData: this.props.editData[\"ToDate\"].slice(0, 10),\n  };\n  onCompanyNameDataChange(e) {\n    this.setState({ CompanyNameData: e.target.value });\n  }\n  onDesignationDataChange(e) {\n    this.setState({ DesignationData: e.target.value });\n  }\n  onFromDateDataChange(e) {\n    this.setState({ FromDateData: e.target.value });\n  }\n  onToDateDataChange(e) {\n    this.setState({ ToDateData: e.target.value });\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Edit WorkExperience Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form\n            id=\"form\"\n            onSubmit={e =>\n              this.props.onWorkExperienceEditUpdate(this.props.editData, e)\n            }\n          >\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              Company Name\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Company Name\"\n                  required\n                  value={this.state.CompanyNameData}\n                  onChange={value => this.onCompanyNameDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              Designation\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"Designation\"\n                  required\n                  value={this.state.DesignationData}\n                  onChange={value => this.onDesignationDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              FromDate\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"date\"\n                  required\n                  value={this.state.FromDateData}\n                  onChange={value => this.onFromDateDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n              ToDate\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"date\"\n                  required\n                  value={this.state.ToDateData}\n                  onChange={value => this.onToDateDataChange(value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Update</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormEditClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkExperienceForm;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WorkExperienceTable from \"./WorkExperienceTable.jsx\";\nimport WorkExperienceForm from \"./WorkExperienceForm.jsx\";\nimport WorkExperienceFormEdit from \"./WorkExperienceFormEdit.jsx\";\nimport \"./WorkExperience.css\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\n\nconst WorkExperience = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleWorkExperienceSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      CompanyName: event.target[0].value,\n      Designation: event.target[1].value,\n      FromDate: event.target[2].value,\n      ToDate: event.target[3].value\n    };\n\n    axios\n      .post(`${BASE_URL}/api/work-experience/` + props.data[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddWorkExperience = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditWorkExperience = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleWorkExperienceEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    let body = {\n      CompanyName: newInfo.target[0].value,\n      Designation: newInfo.target[1].value,\n      FromDate: newInfo.target[2].value,\n      ToDate: newInfo.target[3].value\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/work-experience/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n  const handleAddFormGenderChange = () => {};\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <WorkExperienceFormEdit\n            onWorkExperienceEditUpdate={handleWorkExperienceEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <WorkExperienceTable\n            onAddWorkExperience={handleAddWorkExperience}\n            onEditWorkExperience={handleEditWorkExperience}\n            data={props.data}\n            back={props.back}\n          />\n        )\n      ) : (\n        <WorkExperienceForm\n          onWorkExperienceSubmit={handleWorkExperienceSubmit}\n          onFormClose={handleFormClose}\n          onGenderChange={handleAddFormGenderChange}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default WorkExperience;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./FamilyInfoTable.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport BASE_URL from \"../../../Pages/config/config\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst FamilyInfoTable = (props) => {\n  const [familyInfoData, setFamilyInfoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n\n  const familyInfoObj = [];\n\n  const loadFamilyInfoData = () => {\n    axios\n      .get(`${BASE_URL}/api/family-info/` + localStorage.getItem(\"_id\"), {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        familyInfoObj.push(response.data);\n        console.log(\"response\", response.data);\n        setFamilyInfoData(response.data);\n        setLoading(false);\n        const tempRowData = response.data.familyInfo.map((data) => ({\n          data,\n          Name: data[\"Name\"],\n          Relationship: data[\"Relationship\"],\n          DOB: data[\"DOB\"].slice(0, 10),\n          Occupation: data[\"Occupation\"]\n        }));\n        setRowData(tempRowData);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onFamilyInfoDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \") === true) {\n      axios\n        .delete(`${BASE_URL}/api/family-info/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadFamilyInfoData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadFamilyInfoData();\n  }, []);\n\n  const renderButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() =>\n          onFamilyInfoDelete(props.data[\"_id\"], params.data.data[\"_id\"])\n        }\n      />\n    );\n  };\n\n  const renderEditButton = (params) => {\n    console.log(params);\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditFamilyInfo(params.data.data)}\n      />\n    );\n  };\n\n  return (\n    <InnerDashContainer>\n      <h2 id=\"role-title\">\n        Employee Family Details{\" \"}\n        {props.back\n          ? \"of \" + props.data[\"FirstName\"] + \" \" + props.data[\"LastName\"]\n          : \"\"}\n      </h2>\n\n      {props.back ? (\n        <Link to=\"/hr/employee\">\n          <Button variant=\"primary\" id=\"add-button\">\n            Back\n          </Button>\n        </Link>\n      ) : (\n        <Button\n          variant=\"primary\"\n          id=\"add-button\"\n          onClick={props.onAddFamilyInfo}\n        >\n          <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n          Add\n        </Button>\n      )}\n\n      <div id=\"clear-both\" />\n\n      {!loading ? (\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Name\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Relationship\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                DOB\n              </th>\n              <th\n                style={{\n                  background: \"linear-gradient(165deg, #700B97, 90%, #C84B31)\",\n                  color: \"white\"\n                }}\n              >\n                Occupation\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {rowData.map((items, index) => (\n              <tr key={index}>\n                <td className=\"text-uppercase\">{items.Name}</td>\n                <td className=\"text-uppercase\">{items.Relationship}</td>\n                <td className=\"text-uppercase\">{items.DOB}</td>\n                <td className=\"text-uppercase\">{items.Occupation}</td>\n                {/* <td>\n                  {\" \"}\n                  <button\n                    onClick={() => props.onEditFamilyInfo(items.data)}\n                    style={{\n                      zIndex: \"1\",\n                      cursor: \"pointer\"\n                    }}\n                    className=\"btn\"\n                  >\n                    <FaRegEdit className=\"fs-4 text-primary bg-white p-1 rounded-5\" />\n                  </button>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </InnerDashContainer>\n  );\n};\n\nexport default FamilyInfoTable;\n","import React from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst FamilyInfoForm = (props) => {\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Add FamilyInfo Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form id=\"form\" onSubmit={props.onFamilyInfoSubmit}>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Name\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Name\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Relationship\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Relationship\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              DOB\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"date\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Occupation\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Occupation\" required />\n            </Col>\n          </Form.Group>\n          {/* <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Contact No\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control type=\"Text\" placeholder=\"Contact No\" required />\n            </Col>\n          </Form.Group> */}\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Submit</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default FamilyInfoForm;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst FamilyInfoFormEdit = (props) => {\n  const [nameData, setNameData] = useState(props.editData[\"Name\"]);\n  const [relationshipData, setRelationshipData] = useState(\n    props.editData[\"Relationship\"]\n  );\n  const [dobData, setDOBData] = useState(props.editData[\"DOB\"].slice(0, 10));\n  const [occupationData, setOccupationData] = useState(\n    props.editData[\"Occupation\"]\n  );\n\n  const onNameDataChange = (e) => {\n    setNameData(e.target.value);\n  };\n\n  const onRelationshipDataChange = (e) => {\n    setRelationshipData(e.target.value);\n  };\n\n  const onOccupationDataChange = (e) => {\n    setOccupationData(e.target.value);\n  };\n\n  const onDOBDataChange = (e) => {\n    setDOBData(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Edit FamilyInfo Details</h2>\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) => props.onFamilyInfoEditUpdate(props.editData, e)}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Name\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Name\"\n                required\n                value={nameData}\n                onChange={(e) => onNameDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Relationship\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Relationship\"\n                required\n                value={relationshipData}\n                onChange={(e) => onRelationshipDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              DOB\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                placeholder=\"DOB\"\n                required\n                value={dobData}\n                onChange={(e) => onDOBDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Occupation\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Occupation\"\n                required\n                value={occupationData}\n                onChange={(e) => onOccupationDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Update</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormEditClose}>\n                Cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default FamilyInfoFormEdit;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FamilyInfoTable from \"./FamilyInfoTable.jsx\";\nimport FamilyInfoForm from \"./FamilyInfoForm.jsx\";\nimport FamilyInfoFormEdit from \"./FamilyInfoFormEdit.jsx\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\n\nconst FamilyInfo = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n\n  const handleFamilyInfoSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      Name: event.target[0].value,\n      Relationship: event.target[1].value,\n      DOB: event.target[2].value,\n      Occupation: event.target[3].value\n      // parentMobile: event.target[4].value\n    };\n\n    axios\n      .post(`${BASE_URL}/api/family-info/` + props.data[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddFamilyInfo = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditFamilyInfo = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleFamilyInfoEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    let body = {\n      Name: newInfo.target[0].value,\n      Relationship: newInfo.target[1].value,\n      DOB: newInfo.target[2].value,\n      Occupation: newInfo.target[3].value\n      // parentMobile: newInfo.target[4].value\n    };\n\n    console.log(\"update\", body);\n\n    axios\n      .put(`${BASE_URL}/api/family-info/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n  const handleAddFormGenderChange = () => {};\n\n  return (\n    <>\n      {table ? (\n        editForm ? (\n          <FamilyInfoFormEdit\n            onFamilyInfoEditUpdate={handleFamilyInfoEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <FamilyInfoTable\n            onAddFamilyInfo={handleAddFamilyInfo}\n            onEditFamilyInfo={handleEditFamilyInfo}\n            data={props.data}\n            back={props.back}\n          />\n        )\n      ) : (\n        <FamilyInfoForm\n          onFamilyInfoSubmit={handleFamilyInfoSubmit}\n          onFormClose={handleFormClose}\n          onGenderChange={handleAddFormGenderChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FamilyInfo;\n","import React, { useEffect, useState } from \"react\";\nimport \"./PersonalInfoTable.css\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nimport \"./profilePage.css\";\nimport {\n  FaCamera,\n  FaFileAudio,\n  FaFileImage,\n  FaRegFileImage,\n  FaRegFilePdf\n} from \"react-icons/fa\";\nimport { IoMdDownload } from \"react-icons/io\";\nimport FloralAbstract from \"./FloralAbstract.jpg\";\nimport { GoDotFill } from \"react-icons/go\";\nimport { IoArrowBackCircle, IoEye } from \"react-icons/io5\";\nimport Education from \"../EmpEducation/Education\";\nimport WorkExperience from \"../EmpWorkExp/WorkExperience\";\nimport FamilyInfo from \"../EmpFamily/FamilyInfo\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst PersonalInfoTable = (props) => {\n  const [personalInfoData, setPersonalInfoData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n  const [activeSection, setActiveSection] = useState(\"personalInfo\");\n  const [showDownloadbtn, setShowDownloadbtn] = useState(null);\n  const [visibleDocs, setVisibleDocs] = useState([]);\n  const loadPersonalInfoData = () => {\n    axios\n      .get(`${BASE_URL}/api/personal-info/${props.data[\"_id\"]}`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const data = response.data;\n        setPersonalInfoData(data);\n        setLoading(false);\n\n        const temp = {\n          data,\n          FirstName: data[\"FirstName\"] || \"Not Avaiable\",\n          MiddleName: data[\"MiddleName\"] || \"Not Avaiable\",\n          LastName: data[\"LastName\"] || \"Not Avaiable\",\n          empID: data[\"empID\"] || \"Not Avaiable\",\n          Gender: data[\"Gender\"] || \"Not Avaiable\",\n          ContactNo: data[\"ContactNo\"] || \"Not Avaiable\",\n          Email: data[\"Email\"] || \"Not Avaiable\",\n          PANcardNo: data[\"PANcardNo\"] || \"Not Avaiable\",\n          DOB: data[\"DOB\"].slice(0, 10) || \"Not Avaiable\",\n          BloodGroup: data[\"BloodGroup\"] || \"Not Avaiable\",\n          EmergencyContactNo: data[\"EmergencyContactNo\"] || \"Not Avaiable\",\n          Hobbies: data[\"Hobbies\"] || \"Not Avaiable\",\n          PresentAddress: data[\"PresentAddress\"] || \"Not Avaiable\",\n          PermanetAddress: data[\"PermanetAddress\"] || \"Not Avaiable\",\n          RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\n          DateOfJoining: data[\"DateOfJoining\"].slice(0, 10),\n          reportManager: data[\"reportManager\"] || \"Not Avaiable\",\n          reportHr: data[\"reportManager\"] || \"Not Avaiable\",\n          DepartmentName: data[\"department\"][0]\n            ? data[\"department\"][0][\"DepartmentName\"]\n            : \"\",\n          Account:\n            data[\"Account\"] === 1\n              ? \"Admin\"\n              : data[\"Account\"] === 2\n              ? \"HR\"\n              : data[\"Account\"] === 3\n              ? \"Employee\"\n              : data[\"Account\"] === 4\n              ? \"Manager\"\n              : \"\",\n          PositionName: data[\"position\"][0]\n            ? data[\"position\"][0][\"PositionName\"]\n            : \"\"\n        };\n\n        setRowData([temp]);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadPersonalInfoData();\n  }, [props.data]);\n\n  const onToggleSection = (section) => {\n    setActiveSection(section);\n  };\n\n  const onPersonalInfoDelete = (e) => {\n    console.log(e);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/personalInfo/${e}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then(() => {\n          loadPersonalInfoData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const renderEditButton = (params) => {\n    if (props.back) {\n      return <React.Fragment />;\n    }\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditPersonalInfo(params.data.data)}\n      />\n    );\n  };\n  const getBackgroundColor = (accountType) => {\n    switch (accountType) {\n      case \"Admin\":\n        return \"#8EAC50\";\n      case \"HR\":\n        return \"#0079FF\";\n      case \"Employee\":\n        return \"purple\";\n      default:\n        return \"#FF9B50\";\n    }\n  };\n\n  const documentDATA = [\n    {\n      docTitle: \"Aadhar Card\",\n      docURL:\n        \"https://aadhar-uidai.in/wp-content/uploads/2018/07/main-qimg-4a3032007d087580af4a6eff50634659.png\",\n      docNumber: \"123456789\",\n      docSize: \"1.02\"\n    },\n    {\n      docTitle: \"PAN Card\",\n      docURL:\n        \"https://images.livemint.com/img/2019/10/25/1600x900/pan_card_1565610340828_1572021543426.PNG\",\n      docNumber: \"ADNPT5873H\",\n      docSize: \"1.02\"\n    },\n    {\n      docTitle: \"10th MarkSheet\",\n      docURL:\n        \"https://www.pastcart.com/wp-content/uploads/2019/07/10th-marksheet-1024x813.jpg\",\n      docNumber: \"201535400\",\n      docSize: \"1.02\"\n    },\n    {\n      docTitle: \"12th MarkSheet\",\n      docURL:\n        \"https://cdn.slidesharecdn.com/ss_thumbnails/bac93f03-6b88-4390-8643-eddc0804e020-160807132546-thumbnail-4.jpg?cb=1470576360\",\n      docNumber: \"545421000\",\n      docSize: \"1.02\"\n    },\n    {\n      docTitle: \"Graduation MarkSheet\",\n      docURL: FloralAbstract,\n      docNumber: \"212101215\",\n      docSize: \"1.02\"\n    },\n    {\n      docTitle: \"Graduation MarkSheet\",\n      docURL: FloralAbstract,\n      docNumber: \"212101215\",\n      docSize: \"1.02\"\n    },\n    {\n      docTitle: \"Graduation MarkSheet\",\n      docURL: FloralAbstract,\n      docNumber: \"212101215\",\n      docSize: \"1.02\"\n    }\n  ];\n\n  return (\n    <div>\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div style={{ position: \"relative\" }} className=\"row\">\n          <div\n            style={{\n              height: \"25rem\",\n              background:\n                \"url(https://images.unsplash.com/photo-1621947081720-86970823b77a?q=80&w=1932&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n              marginTop: \"-.5rem\"\n            }}\n            className=\"col-12\"\n          >\n            {\" \"}\n            <Link to=\"/hr/employee\">\n              <button\n                className=\"btn fw-bold d-flex gap-3 \"\n                style={{ background: \"white\", color: \"black\" }}\n                id=\"add-button\"\n              >\n                <IoArrowBackCircle className=\"my-auto fs-5\" />{\" \"}\n                <span my-auto>Back</span>\n              </button>\n            </Link>\n          </div>\n          <div\n            style={{\n              height: \"35rem\",\n              position: \"fixed\",\n              top: \"20%\",\n              zIndex: \"1\"\n            }}\n            className=\"col-12 row mx-auto justify-content-center gap-4 w-100\"\n          >\n            <div\n              style={{\n                height: \"33rem\",\n                background: `url(${FloralAbstract})`,\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                overflow: \"hidden\"\n              }}\n              className=\"col-12 m-0 p-0 rounded-3 col-lg-3 bg-white shadow\"\n            >\n              {rowData.map((items, index) => {\n                return (\n                  <div\n                    style={{\n                      backgroundColor: \"rgba(258,258,258,.95)\",\n                      position: \"relative\"\n                    }}\n                    className=\"d-flex flex-column gap-3 py-2 h-100\"\n                    key={index}\n                  >\n                    <div\n                      className=\"d-flex flex-column gap-2\"\n                      style={{ width: \"100%\", padding: \"1rem 1rem\" }}\n                    >\n                      <div\n                        className=\"mx-auto\"\n                        style={{\n                          height: \"120px\",\n                          width: \"120px\",\n                          border: \"6px solid #39A7FF\",\n                          borderRadius: \"50%\",\n                          position: \"relative\"\n                        }}\n                      >\n                        <img\n                          style={{\n                            height: \"100%\",\n                            width: \"100%\",\n                            borderRadius: \"50%\",\n                            objectFit: \"cover\"\n                          }}\n                          src={\n                            items?.data?.profile?.image_url\n                              ? items?.data?.profile?.image_url\n                              : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\n                          }\n                          alt=\"employee\"\n                        />\n                        <button\n                          style={{\n                            height: \"30px\",\n                            width: \"30px\",\n                            borderRadius: \"50%\",\n                            border: \"3px solid white\",\n                            position: \"absolute\",\n                            bottom: \"0\",\n                            right: \"0\"\n                          }}\n                          className=\"btn btn-primary text-white d-flex p-1 \"\n                        >\n                          <FaCamera className=\"m-auto\" />\n                        </button>\n                      </div>\n                      <p\n                        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n                        className=\"btn btn-success px-2 py-0 m-2 rounded-5 fw-bold shadow\"\n                      >\n                        {items.empID}\n                      </p>\n                      {/* <p className=\"m-auto fw-bold fs-6\">{items.empID}</p> */}\n                      <h3 className=\"text-capitalize my-0 fw-bold text-muted text-center\">\n                        {items.FirstName} {personalInfoData.LastName}\n                      </h3>\n                      <p className=\"text-capitalize my-0 fw-bold text-center\">\n                        {items.RoleName} {items.DepartmentName}\n                      </p>\n                    </div>\n                    <div className=\"d-flex flex-column justify-content-between gap-2\">\n                      <div className=\"p-2 fw-bold mx-3 d-flex bg-white justify-content-between shadow rounded-5\">\n                        <span\n                          style={{ alignItems: \"center\" }}\n                          className=\"my-auto d-flex gap-2 \"\n                        >\n                          <GoDotFill className=\"text-primary fs-4\" />\n                          Total Assigned Task\n                        </span>{\" \"}\n                        <span className=\"fw-bold  text-primary my-auto\">\n                          123\n                        </span>\n                      </div>\n                      <div className=\"p-2 fw-bold mx-3 d-flex bg-white justify-content-between shadow rounded-5\">\n                        <span\n                          style={{ alignItems: \"center\" }}\n                          className=\"my-auto d-flex gap-2 \"\n                        >\n                          <GoDotFill className=\"text-warning fs-4\" />\n                          Total Active Task\n                        </span>{\" \"}\n                        <span className=\"fw-bold text-warning my-auto\">\n                          123\n                        </span>\n                      </div>\n                      <div className=\"p-2 fw-bold mx-3 d-flex  bg-white justify-content-between shadow rounded-5\">\n                        <span\n                          style={{ alignItems: \"center\" }}\n                          className=\"my-auto d-flex gap-2 \"\n                        >\n                          {\" \"}\n                          <GoDotFill className=\"text-danger fs-4\" />\n                          Total Cancelled Task\n                        </span>{\" \"}\n                        <span className=\"fw-bold my-auto text-danger\">123</span>\n                      </div>\n                      <div className=\"p-2 fw-bold  bg-white mx-3 d-flex justify-content-between shadow rounded-5\">\n                        <span\n                          style={{ alignItems: \"center\" }}\n                          className=\"my-auto d-flex gap-2 \"\n                        >\n                          <GoDotFill className=\"text-success fs-4\" />\n                          Total Completed Task\n                        </span>{\" \"}\n                        <span className=\"fw-bold my-auto text-success\">\n                          123\n                        </span>\n                      </div>\n                    </div>\n                    <span\n                      onClick={() => props.onEditPersonalInfo(items.data)}\n                      style={{\n                        borderBottom:\n                          activeSection === \"documentDetails\"\n                            ? \"3px solid blue\"\n                            : \"none\",\n                        borderRadius: \"0\",\n                        position: \"absolute\",\n                        bottom: \"0\",\n                        left: \"0\",\n                        cursor: \"pointer\"\n                      }}\n                      className=\"btn px-3 w-100 fw-bold btn-primary \"\n                    >\n                      Update Details\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n            <div\n              id=\"personalinfo\"\n              style={{ height: \"33rem\", overflow: \"hidden\" }}\n              className=\"col-12 rounded col-lg-7 p-0 m-0 bg-white shadow\"\n            >\n              <div className=\"shift-pages w-100 shadow-sm d-flex gap-3 px-2 mb-1\">\n                <span\n                  onClick={() => onToggleSection(\"personalInfo\")}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderBottom:\n                      activeSection === \"personalInfo\"\n                        ? \"3px solid blue\"\n                        : \"none\",\n                    borderRadius: \"0\"\n                  }}\n                  className=\"btn py-3 px-2 fw-bold\"\n                >\n                  Personal Info\n                </span>\n                <span\n                  onClick={() => onToggleSection(\"companyInfo\")}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderBottom:\n                      activeSection === \"companyInfo\"\n                        ? \"3px solid blue\"\n                        : \"none\",\n                    borderRadius: \"0\"\n                  }}\n                  className=\"btn py-3 px-2 fw-bold\"\n                >\n                  Company Info\n                </span>\n                <span\n                  onClick={() => onToggleSection(\"Educationalinfo\")}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderBottom:\n                      activeSection === \"Educationalinfo\"\n                        ? \"3px solid blue\"\n                        : \"none\",\n                    borderRadius: \"0\"\n                  }}\n                  className=\"btn py-3 px-2 fw-bold\"\n                >\n                  Education Details\n                </span>\n                <span\n                  onClick={() => onToggleSection(\"documentDetails\")}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderBottom:\n                      activeSection === \"documentDetails\"\n                        ? \"3px solid blue\"\n                        : \"none\",\n                    borderRadius: \"0\"\n                  }}\n                  className=\"btn py-3 px-2 fw-bold\"\n                >\n                  Documents\n                </span>\n                <span\n                  onClick={() => onToggleSection(\"WorkExperience\")}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderBottom:\n                      activeSection === \"WorkExperience\"\n                        ? \"3px solid blue\"\n                        : \"none\",\n                    borderRadius: \"0\"\n                  }}\n                  className=\"btn py-3 px-2 fw-bold\"\n                >\n                  Work Experience{\" \"}\n                </span>\n                <span\n                  onClick={() => onToggleSection(\"otherInfo\")}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderBottom:\n                      activeSection === \"otherInfo\" ? \"3px solid blue\" : \"none\",\n                    borderRadius: \"0\"\n                  }}\n                  className=\"btn py-3 px-3 fw-bold\"\n                >\n                  Dependents\n                </span>\n              </div>\n              {activeSection === \"personalInfo\" && (\n                <div className=\"row\">\n                  <div\n                    className=\"pb-5\"\n                    id=\"companyinfo\"\n                    style={{\n                      overflow: \"hidden auto\",\n                      height: \"29rem\",\n                      scrollbarWidth: \"thin\"\n                    }}\n                  >\n                    {rowData.map((items, index) => {\n                      return (\n                        <div className=\"row justify-content-evenly py-3 row-gap-3\">\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              First Name\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.FirstName}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Last Name\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.LastName}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Phone Number\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.ContactNo}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Emergency Contact\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.EmergencyContactNo}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Email Address\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.Email}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Date of Birth\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.DOB.slice(0, 10)}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Blood Group\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.BloodGroup}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              PAN Number\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-uppercase\"\n                              value={items.PANcardNo}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Present Address\n                            </label>\n\n                            <textarea\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.PresentAddress}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Permanent Address\n                            </label>\n\n                            <textarea\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.PermanetAddress}\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n              {activeSection === \"companyInfo\" && (\n                <div className=\"row\">\n                  <div\n                    style={{\n                      overflow: \"hidden auto\",\n                      height: \"29rem\",\n                      scrollbarWidth: \"thin\"\n                    }}\n                  >\n                    {rowData.map((items, index) => {\n                      return (\n                        <div className=\"row justify-content-evenly py-3 row-gap-3\">\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Employee ID\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-uppercase\"\n                              value={items.empID}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Email\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.Email}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Role\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.RoleName}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Position\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.PositionName}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Department\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm text-capitalize\"\n                              value={items.DepartmentName}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Date of Joining\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.DateOfJoining}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Account Access\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.Account}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Reporting Manager\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.reportManager}\n                            />\n                          </div>\n                          <div className=\"col-12 col-sm-5 d-flex flex-column\">\n                            <label htmlFor=\"\" className=\" fw-bold text-muted\">\n                              Reporting HR\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control rounded-1 shadow-sm\"\n                              value={items.reportHr}\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n              {activeSection === \"Educationalinfo\" && (\n                <div className=\"w-100 container \">\n                  <Education />\n                </div>\n              )}\n              {activeSection === \"documentDetails\" && (\n                <div\n                  style={{\n                    overflow: \"hidden auto\",\n                    height: \"27rem\",\n                    scrollbarWidth: \"thin\"\n                  }}\n                >\n                  <div className=\"container-fluid\">\n                    <Button variant=\"primary\" onClick={props.onAddFamilyInfo}>\n                      <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n                      Add Document\n                    </Button>\n                  </div>\n\n                  <div className=\"row mx-2 pb-3 column-gap-4 row-gap-4\">\n                    {documentDATA.reverse().map((data, index) => (\n                      <div\n                        key={index}\n                        onMouseEnter={() => setShowDownloadbtn(\"name\")}\n                        onMouseLeave={() => setShowDownloadbtn(null)}\n                        className=\"d-flex flex-column gap-2 rounded px-2 py-1 shadow\"\n                        style={{ height: \"190px\", width: \"250px\" }}\n                      >\n                        <div\n                          style={{\n                            height: \"150px\",\n                            width: \"100%\",\n                            overflow: \"hidden\",\n                            background: `url(${data.docURL})`,\n                            backgroundPosition: \"center\",\n                            backgroundSize: \"cover\",\n                            opacity: \"85%\",\n                            boxShadow:\n                              \"0 0 10px 1px rgba(192, 185, 185, 0.758) inset\"\n                          }}\n                          className=\"bg-primary m-auto position-relative \"\n                        >\n                          <div\n                            style={{\n                              height: \"100%\",\n                              width: \"100%\",\n                              position: \"absolute\",\n                              top: \"0\",\n                              left: \"0\",\n                              background: \"rgba(0,0,0,.4)\",\n                              display: showDownloadbtn ? \"flex\" : \"none\",\n                              justifyContent: \"center\",\n                              alignItems: \"center\",\n                              gap: \"1rem\"\n                            }}\n                          >\n                            <a\n                              target=\"_blank\"\n                              href={data.docURL}\n                              style={{ height: \"40px\", width: \"40px\" }}\n                              className=\"btn p-0 btn bg-white text-primary shadow d-flex\"\n                            >\n                              <IoEye className=\"m-auto fs-4\" />\n                            </a>\n                            <a\n                              download={data.docURL}\n                              href={data.docURL}\n                              style={{ height: \"40px\", width: \"40px\" }}\n                              className=\"btn p-0 btn bg-white text-primary shadow d-flex\"\n                            >\n                              <IoMdDownload className=\"m-auto fs-4\" />\n                            </a>\n                          </div>\n                          <div\n                            style={{\n                              height: \"30px\",\n                              width: \"30px\",\n                              position: \"absolute\",\n                              bottom: \"0\",\n                              right: \"0\",\n                              opacity: \"100%\"\n                            }}\n                            className=\"bg-white d-flex shadow-sm text-danger\"\n                          >\n                            {data.docURL.toLowerCase().endsWith(\".pdf\") && (\n                              <FaRegFilePdf className=\"m-auto fs-3 text-black\" />\n                            )}\n                            {(data.docURL.toLowerCase().endsWith(\".jpeg\") ||\n                              data.docURL.toLowerCase().endsWith(\".jpg\")) && (\n                              <FaFileImage className=\"m-auto fs-3\" />\n                            )}\n                            {data.docURL.toLowerCase().endsWith(\".png\") && (\n                              <FaRegFileImage className=\"m-auto fs-3\" />\n                            )}\n                            {data.docURL.toLowerCase().endsWith(\".mp3\") && (\n                              <FaFileAudio className=\"m-auto fs-3\" />\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                          <p\n                            style={{ fontSize: \".9rem\" }}\n                            className=\"text-muted fw-bold m-0\"\n                          >\n                            {data.docTitle}\n                          </p>{\" \"}\n                          <p\n                            style={{ fontSize: \".7rem\" }}\n                            className=\"text-primary fw-bold m-0\"\n                          >\n                            {data.docSize} MB\n                          </p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n              {activeSection === \"WorkExperience\" && (\n                <div className=\"w-100 container \">\n                  <WorkExperience />\n                </div>\n              )}\n              {activeSection === \"otherInfo\" && (\n                <div className=\"w-100 container \">\n                  <FamilyInfo />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PersonalInfoTable;\n","export default __webpack_public_path__ + \"static/media/Personalinfo.309589af.svg\";","import React, { useState } from \"react\";\nimport \"./PersonalInfoFormEdit.css\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport personalinfoimage from \"./Personalinfo.svg\";\n\nconst PersonalInfoFormEdit = (props) => {\n  const [state, setState] = useState({\n    GenderData: props.editData[\"Gender\"],\n    EmailData: props.editData[\"Email\"],\n    FirstNameData: props.editData[\"FirstName\"],\n    MiddleNameData: props.editData[\"MiddleName\"],\n    LastNameData: props.editData[\"LastName\"],\n    DOBData: props.editData[\"DOB\"].slice(0, 10),\n    ContactNoData: props.editData[\"ContactNo\"],\n    EmergencyContactNoData: props.editData[\"EmergencyContactNo\"] || \"\",\n    PANcardNoData: props.editData[\"PANcardNo\"] || \"\",\n    HobbiesData: props.editData[\"Hobbies\"] || \"\",\n    PresentAddressData: props.editData[\"PresentAddress\"] || \"\",\n    PermanetAddressData: props.editData[\"PermanetAddress\"] || \"\",\n    presonalEmail: props.editData[\"presonalEmail\"] || \"\",\n    role: props.editData[\"role\"] || \"\"\n  });\n  const onEmailDataChange = (e) => {\n    setState({ ...state, EmailData: e.target.value });\n  };\n\n  const onFirstNameDataChange = (e) => {\n    setState({ ...state, FirstNameData: e.target.value });\n  };\n  const onMiddleNameDataChange = (e) => {\n    setState({ ...state, MiddleNameData: e.target.value });\n  };\n  const onLastNameDataChange = (e) => {\n    setState({ ...state, LastNameData: e.target.value });\n  };\n  const onContactNoDataChange = (e) => {\n    setState({ ...state, ContactNoData: e.target.value });\n  };\n  const onPANcardNoDataChange = (e) => {\n    setState({ ...state, PANcardNoData: e.target.value });\n  };\n  const onpresonalemailDataChange = (e) => {\n    setState({ presonalEmail: e.target.value });\n  };\n  const onEmergencyContactNoDataChange = (e) => {\n    setState({ ...state, EmergencyContactNoData: e.target.value });\n  };\n  const onHobbiesDataChange = (e) => {\n    setState({ ...state, HobbiesData: e.target.value });\n  };\n  const onPresentAddressDataChange = (e) => {\n    setState({ ...state, PresentAddressData: e.target.value });\n  };\n  const onPermanentAddressDataChange = (e) => {\n    setState({ ...state, PermanetAddressData: e.target.value });\n  };\n\n  const onGenderChange = (e) => {\n    setState({ ...state, GenderData: e.target.value });\n    props.onGenderChange(e);\n  };\n  const onDOBDataChange = (e) => {\n    console.log(e.target.value);\n    setState({ ...state, DOBData: e.target.value });\n  };\n\n  return (\n    <div className=\"container-fluid position-relative\">\n      <div\n        style={{ marginTop: \"-.5rem\", minHeight: \"95vh\" }}\n        className=\"row bg-light p-2\"\n      >\n        <div className=\"col-md-4 col-0\">\n          <img src={personalinfoimage} alt=\"\" />\n        </div>\n        <div className=\"col-md-8 col-0 \">\n          <div className=\"\">\n            <Form\n              style={{ overflow: \"auto\", maxHeight: \"600px\" }}\n              className=\"row row-gap-2 rounded-2 shadow-sm m-auto justify-content-between bg-white\"\n              onSubmit={(e) =>\n                props.onPersonalInfoEditUpdate(props.editData, e)\n              }\n            >\n              <h4\n                style={{ position: \"sticky\", top: \"0\", zIndex: \"2\" }}\n                className=\"fw-bold text-muted py-3 w-100 bg-light \"\n              >\n                Edit Employee info\n              </h4>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  First Name\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    required\n                    disabled\n                    value={state.FirstNameData}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Middle Name\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Middle Name\"\n                    required\n                    disabled\n                    value={state.MiddleNameData}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Last Name\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    disabled\n                    required\n                    value={state.LastNameData}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" as=\"legend\" column>\n                  Gender\n                </Form.Label>\n                <Col className=\"d-flex gap-3\">\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Male\"\n                    value=\"male\"\n                    name=\"gender\"\n                    className=\"d-flex gap-1 shadow-sm py-1 px-5 rounded-5\"\n                    onChange={onGenderChange}\n                    checked={state.GenderData == \"male\"}\n                    required\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"Female\"\n                    value=\"female\"\n                    name=\"gender\"\n                    className=\"d-flex gap-1 shadow-sm py-1 px-5 rounded-5\"\n                    onChange={onGenderChange}\n                    checked={state.GenderData == \"female\"}\n                    required\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Contact No\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Contact No \"\n                    required\n                    value={state.ContactNoData}\n                    onChange={(value) => onContactNoDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Emergency Contact\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Emergency Contact No\"\n                    required\n                    value={state.EmergencyContactNoData}\n                    onChange={(value) => onEmergencyContactNoDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Work Email\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    disabled\n                    required\n                    value={state.EmailData}\n                    onChange={(value) => onEmailDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  PAN Card No\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"PAN Card No\"\n                    required\n                    value={state.PANcardNoData}\n                    onChange={(value) => onPANcardNoDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Presonal Email\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Presonal Email\"\n                    required\n                    value={state.presonalEmail}\n                    onChange={(value) => onpresonalemailDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  DOB\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"DOB\"\n                    required\n                    //   value={props.editData[\"DOB\"].slice(0, 10)}\n                    value={state.DOBData}\n                    onChange={(value) => onDOBDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Blood Group\n                </Form.Label>\n\n                <Col className=\"form-input\">\n                  <Form.Control as=\"select\" required>\n                    <option value=\"\" disabled selected>\n                      Select your option\n                    </option>\n                    <option\n                      value=\"A+\"\n                      selected={props.editData[\"BloodGroup\"] == \"A+\"}\n                    >\n                      A+\n                    </option>\n                    <option\n                      value=\"A-\"\n                      selected={props.editData[\"BloodGroup\"] == \"A-\"}\n                    >\n                      A-\n                    </option>\n                    <option\n                      value=\"B+\"\n                      selected={props.editData[\"BloodGroup\"] == \"B+\"}\n                    >\n                      B+\n                    </option>\n                    <option\n                      value=\"B-\"\n                      selected={props.editData[\"BloodGroup\"] == \"B-\"}\n                    >\n                      B-\n                    </option>\n                    <option\n                      value=\"AB+\"\n                      selected={props.editData[\"BloodGroup\"] == \"AB+\"}\n                    >\n                      AB+\n                    </option>\n                    <option\n                      value=\"AB-\"\n                      selected={props.editData[\"BloodGroup\"] == \"AB-\"}\n                    >\n                      AB-\n                    </option>\n                    <option\n                      value=\"O+\"\n                      selected={props.editData[\"BloodGroup\"] == \"O+\"}\n                    >\n                      O+\n                    </option>\n                    <option\n                      value=\"O-\"\n                      selected={props.editData[\"BloodGroup\"] == \"O-\"}\n                    >\n                      O-\n                    </option>\n                  </Form.Control>\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Hobbies\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Hobbies\"\n                    required\n                    value={state.HobbiesData}\n                    onChange={(value) => onHobbiesDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Present Address\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    plassholder=\"Present Address\"\n                    required\n                    value={state.PresentAddressData}\n                    onChange={(value) => onPresentAddressDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group\n                className=\"col-12 col-md-6 d-flex flex-column gap-1\"\n                as={Row}\n              >\n                <Form.Label className=\"fw-bold text-muted\" column>\n                  Permanet Address\n                </Form.Label>\n                <Col className=\"form-input\">\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    plassholder=\" Permanet Address\"\n                    value={state.PermanetAddressData}\n                    onChange={(value) => onPermanentAddressDataChange(value)}\n                  />\n                </Col>\n              </Form.Group>\n\n              <div className=\"d-flex m-0 gap-3 py-2\">\n                <button className=\"btn btn-primary px-5\" type=\"submit\">\n                  Submit\n                </button>\n                <button\n                  className=\"btn btn-danger px-5\"\n                  type=\"reset\"\n                  onClick={props.onFormEditClose}\n                >\n                  cancel\n                </button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PersonalInfoFormEdit;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PersonalInfoTable from \"./PersonalInfoTable.jsx\";\nimport PersonalInfoFormEdit from \"./PersonalInfoFormEdit.jsx\";\nimport \"./PersonalInfo.css\";\nimport BASE_URL from \"../../../Pages/config/config.js\";\n\nconst PersonalInfo = ({ data, back }) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [editFormGender, setEditFormGender] = useState(\"\");\n\n  const handleEditPersonalInfo = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n    setEditFormGender(e[\"Gender\"]);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handlePersonalInfoEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    const body = {\n      Gender: editFormGender,\n      ContactNo: newInfo.target[5].value,\n      EmergencyContactNo: newInfo.target[6].value,\n      Email: newInfo.target[7].value,\n      PANcardNo: newInfo.target[8].value,\n      DOB: newInfo.target[9].value,\n      BloodGroup: newInfo.target[10].value,\n      Hobbies: newInfo.target[11].value,\n      PresentAddress: newInfo.target[12].value,\n      PermanetAddress: newInfo.target[13].value,\n      presonalEmail: newInfo.target[14].value\n    };\n    console.log(\"update\", body);\n    axios\n      .put(`${BASE_URL}/api/personal-info/${info[\"_id\"]}`, body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n\n  const handleEditFormGenderChange = (e) => {\n    setEditFormGender(e.currentTarget.value);\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <PersonalInfoFormEdit\n            onPersonalInfoEditUpdate={handlePersonalInfoEditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n            onGenderChange={handleEditFormGenderChange}\n          />\n        ) : (\n          <PersonalInfoTable\n            onAddPersonalInfo={handleEditPersonalInfo}\n            onEditPersonalInfo={handleEditPersonalInfo}\n            data={data}\n            back={back}\n          />\n        )\n      ) : (\n        <div />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default PersonalInfo;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Employee.css\";\n\nimport EmployeeTable from \"./EmployeeTable.jsx\";\nimport EmployeeForm from \"./EmployeeForm.jsx\";\nimport EmployeeFormEdit from \"./EmployeeFormEdit.jsx\";\nimport EmployeeInfo from \"./EmployeeInfo.jsx\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport PersonalInfo from \"../../Component/Employee/EmpPresonal/PersonalInfo.jsx\";\nimport Education from \"../../Component/Employee/EmpEducation/Education.jsx\";\nimport FamilyInfo from \"../../Component/Employee/EmpFamily/FamilyInfo.jsx\";\nimport WorkExperience from \"../../Component/Employee/EmpWorkExp/WorkExperience.jsx\";\nimport BASE_URL from \"../config/config.js\";\n\nconst Employee = () => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [addFormGender, setAddFormGender] = useState(\"\");\n  const [editFormGender, setEditFormGender] = useState(\"\");\n  const [empInfo, setEmpInfo] = useState({});\n  const [empInfoBool, setEmpInfoBool] = useState(false);\n\n  const handleEmpInfo = (e) => {\n    setEmpInfo(e);\n    setEmpInfoBool(true);\n  };\n\n  const handleBack = () => {\n    setEmpInfoBool(false);\n  };\n\n  // const handleEmployeeSubmit = async (event) => {\n  //   event.preventDefault();\n  //   setTable(true);\n\n  //   const fileInput = event.target[15];\n\n  //   // Read the file as a Data URL (base64)\n  //   const reader = new FileReader();\n  //   let profilePath;\n  //   reader.onloadend = () => {\n  //     profilePath = reader.result.split(',')[1];\n  //   }\n\n  //   const body = {\n  //     Email: event.target[0].value,\n  //     Password: event.target[1].value,\n  //     Account: event.target[2].value,\n  //     RoleID: event.target[3].value,\n  //     Gender: addFormGender,\n\n  //     FirstName: event.target[6].value,\n  //     MiddleName: event.target[7].value,\n  //     LastName: event.target[8].value,\n  //     DOB: event.target[9].value,\n  //     ContactNo: event.target[10].value,\n\n  //     EmployeeCode: event.target[11].value,\n  //     DepartmentID: event.target[12].value,\n  //     PositionID: event.target[13].value,\n  //     DateOfJoining: event.target[14].value,\n  //     profile : event.target[15].files[0],\n  //     // TerminateDate: event.target[15].value,\n  //   };\n\n  //   // console.log(body);\n  //   // let formData = new FormData();\n\n  //   // formData( \"Email\" , event.target[0].value,)\n  //   // formData( \"Password\" , event.target[1].value,)\n  //   // formData( \"Account\" , event.target[2].value,)\n  //   // formData( \"RoleID\" , event.target[3].value,)\n  //   // formData( \"Gender\" , addFormGender)\n\n  //   // formData( \"FirstName\" , event.target[6].value,)\n  //   // formData( \"MiddleName\" , event.target[7].value,)\n  //   // formData( \"LastName\" , event.target[8].value,)\n  //   // formData( \"DOB\" , event.target[9].value,)\n  //   // formData( \"ContactNo\" , event.target[10].value,)\n\n  //   // formData( \"EmployeeCode\" , event.target[11].value,)\n  //   // formData( \"DepartmentID\" , event.target[12].value,)\n  //   // formData( \"PositionID\" , event.target[13].value,)\n  //   // formData( \"DateOfJoining\" , event.target[14].value,)\n  //   // formData( \"profile\" , body.profile)\n\n  //   console.log(body);\n\n  //  await axios\n  //     .post(\"http://localhost:4000/api/employee\", body, {\n  //       headers: {\n  //         authorization: localStorage.getItem(\"token\") || \"\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       setTable(false);\n  //       setTable(true);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  const handleEmployeeSubmit = async (event) => {\n    event.preventDefault();\n    // setTable(true);\n\n    const formData = new FormData();\n\n    formData.append(\"Email\", event.target[0].value);\n    formData.append(\"Password\", event.target[1].value);\n    formData.append(\"Account\", event.target[2].value);\n    formData.append(\"RoleID\", event.target[3].value);\n    formData.append(\"Gender\", addFormGender);\n\n    formData.append(\"FirstName\", event.target[6].value);\n    // formData.append(\"MiddleName\", event.target[7].value);\n    formData.append(\"LastName\", event.target[7].value);\n    formData.append(\"DOB\", event.target[8].value);\n    formData.append(\"ContactNo\", event.target[9].value);\n\n    // formData.append(\"EmployeeCode\", event.target[11].value);\n    formData.append(\"DepartmentID\", event.target[10].value);\n    formData.append(\"PositionID\", event.target[11].value);\n    formData.append(\"DateOfJoining\", event.target[12].value);\n    formData.append(\"profile\", event.target[13].files[0]);\n    formData.append(\"reportManager\", event.target[14].value);\n    formData.append(\"reportHr\", event.target[15].value);\n    await axios\n      .post(`${BASE_URL}/api/employee`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        // setTable(false);\n        setTable(true);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.status === 400) {\n          alert(err.response.data);\n        }\n      });\n  };\n\n  const handleAddEmployee = () => {\n    setTable(false);\n  };\n\n  const handleEditEmployee = (e) => {\n    setEditForm(true);\n    setEditData(e);\n    setEditFormGender(e[\"Gender\"]);\n  };\n\n  const handleFormClose = () => {\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    setEditForm(false);\n  };\n\n  // const handleEmployeeEditUpdate = (info, newInfo) => {\n  //   newInfo.preventDefault();\n\n  //   const body = {\n  //     Email: newInfo.target[0].value,\n  //     Account: newInfo.target[1].value,\n  //     RoleID: newInfo.target[2].value,\n  //     Gender: editFormGender,\n  //     FirstName: newInfo.target[5].value,\n  //     MiddleName: newInfo.target[6].value,\n  //     LastName: newInfo.target[7].value,\n  //     DOB: newInfo.target[8].value,\n  //     ContactNo: newInfo.target[9].value,\n  //     EmployeeCode: newInfo.target[10].value,\n  //     DepartmentID: newInfo.target[11].value,\n  //     PositionID: newInfo.target[12].value,\n  //     DateOfJoining: newInfo.target[13].value,\n  //     profile: newInfo.target[14].files[0],\n  //     // TerminateDate: newInfo.target[14].value,\n  //   };\n\n  //   console.log(body);\n  //   axios\n  //     .put(`http://localhost:4000/api/employee/${info[\"_id\"]}`, body, {\n  //       headers: {\n  //         authorization: localStorage.getItem(\"token\") || \"\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       setTable(false);\n  //       setTable(true);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n\n  //   setEditForm(false);\n  // };\n\n  const handleEmployeeEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n\n    if (newInfo.target[9].value) {\n    }\n\n    const formData = new FormData();\n\n    formData.append(\"Email\", newInfo.target[0].value);\n    formData.append(\"Account\", newInfo.target[1].value);\n    formData.append(\"RoleID\", newInfo.target[2].value);\n    formData.append(\"Gender\", editFormGender);\n    formData.append(\"FirstName\", newInfo.target[5].value);\n    // formData.append(\"MiddleName\", newInfo.target[6].value);\n    formData.append(\"LastName\", newInfo.target[6].value);\n    formData.append(\"DOB\", newInfo.target[7].value);\n    formData.append(\"ContactNo\", newInfo.target[8].value);\n    // formData.append(\"EmployeeCode\", newInfo.target[10].value);\n    formData.append(\"DepartmentID\", newInfo.target[9].value);\n    formData.append(\"PositionID\", newInfo.target[10].value);\n    formData.append(\"DateOfJoining\", newInfo.target[11].value);\n    formData.append(\"profile\", newInfo.target[12].files[0]);\n    formData.append(\"reportManager\", newInfo.target[13].value);\n    // formData.append(\"TerminateDate\", newInfo.target[14].value);\n\n    axios\n      .put(`${BASE_URL}/api/employee/${info[\"_id\"]}`, formData, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\",\n          \"Content-Type\": \"multipart/form-data\" // Set content type explicitly for FormData\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n        setEditForm(false);\n      })\n      .catch((err) => {\n        if (err.response.status === 400) {\n          alert(err.response.data);\n        }\n      });\n  };\n\n  const handleAddFormGenderChange = (e) => {\n    setAddFormGender(e.currentTarget.value);\n  };\n\n  const handleEditFormGenderChange = (e) => {\n    setEditFormGender(e.currentTarget.value);\n  };\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/hr/employee\"\n        render={(props) => (\n          <>\n            {table ? (\n              editForm ? (\n                <EmployeeFormEdit\n                  onEmployeeEditUpdate={handleEmployeeEditUpdate}\n                  onFormEditClose={handleEditFormClose}\n                  editData={editData}\n                  onGenderChange={handleEditFormGenderChange}\n                />\n              ) : (\n                <>\n                  {!empInfoBool ? (\n                    <EmployeeTable\n                      onAddEmployee={handleAddEmployee}\n                      onEditEmployee={handleEditEmployee}\n                      onEmpInfo={handleEmpInfo}\n                    />\n                  ) : (\n                    <PersonalInfo data={empInfo} onBack={handleBack} />\n                  )}\n                </>\n              )\n            ) : (\n              <EmployeeForm\n                onEmployeeSubmit={handleEmployeeSubmit}\n                onFormClose={handleFormClose}\n                onGenderChange={handleAddFormGenderChange}\n              />\n            )}\n          </>\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/hr/employee/info/personal-info\"\n        render={(props) => <PersonalInfo data={empInfo} back={true} />}\n      />\n      <Route\n        exact\n        path=\"/hr/employee/info/education\"\n        render={(props) => <Education data={empInfo} back={true} />}\n      />\n      <Route\n        exact\n        path=\"/hr/employee/info/family-info\"\n        render={(props) => <FamilyInfo data={empInfo} back={true} />}\n      />\n      <Route\n        exact\n        path=\"/hr/employee/info/work-experience\"\n        render={(props) => <WorkExperience data={empInfo} back={true} />}\n      />\n    </Router>\n  );\n};\n\nexport default Employee;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { FaChartLine } from \"react-icons/fa\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst TaskChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadTaskData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n    loadTaskData();\r\n\r\n    return () => clearTimeout();\r\n  }, []);\r\n\r\n  const departmentCounts = {};\r\n  departmentData.forEach((department) => {\r\n    departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n  });\r\n\r\n  const taskStatusCounts = {\r\n    Total: tasks.length,\r\n    Completed: tasks.filter((task) => task.status === \"Completed\").length,\r\n    Rejected: tasks.filter((task) => task.status === \"Rejected\").length,\r\n    Canceled: tasks.filter((task) => task.status === \"Canceled\").length,\r\n    Active: tasks.filter((task) => task.status === \"Active\").length,\r\n    Pending: tasks.filter((task) => task.status === \"Pending\").length,\r\n    Overdue: tasks.filter((task) => task.status === \"Overdue\").length\r\n  };\r\n\r\n  const chartData = {\r\n    series: [\r\n      {\r\n        name: \"Total Employee\",\r\n        data: Object.values(departmentCounts)\r\n      }\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"40%\",\r\n          endingShape: \"rounded\"\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(departmentCounts),\r\n        title: {\r\n          text: \"Department Wise Employee\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Employee\"\r\n        }\r\n      },\r\n\r\n      fill: {\r\n        opacity: 1,\r\n        colors: [\"rgb(100, 150, 200)\"]\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \" \" + val + \"\";\r\n          }\r\n        },\r\n        markers: {\r\n          colors: \"yellow\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const taskStatusChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"task-status-chart\",\r\n        type: \"bar\"\r\n      },\r\n      fill: {\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(taskStatusCounts),\r\n        title: {\r\n          text: \"Task Status\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Tasks\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Task Status\",\r\n        data: Object.values(taskStatusCounts)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={taskStatusChartData.options}\r\n          series={taskStatusChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskChart;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"./LeaveApplicationHRTable.css\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { css } from \"@emotion/core\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst LeaveCount = (props) => {\r\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [totalLeaves, setTotalLeaves] = useState(0);\r\n  const [sortColumn, setSortColumn] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState(\"asc\");\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // ...\r\n\r\n  let leaveApplicationHRObj = [];\r\n  let rowDataT = [];\r\n\r\n  const loadLeaveApplicationHRData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        leaveApplicationHRObj = response.data;\r\n        console.log(\"response\", response.data);\r\n        setLeaveApplicationHRData(response.data);\r\n        setLoading(false);\r\n\r\n        rowDataT = [];\r\n\r\n        leaveApplicationHRObj.map((data) => {\r\n          let temp = {\r\n            data,\r\n            empID:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"empID\"],\r\n            Name:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"FirstName\"] +\r\n                \" \" +\r\n                data[\"employee\"][0][\"LastName\"],\r\n            Leavetype: data[\"Leavetype\"],\r\n            FromDate: data[\"FromDate\"].slice(0, 10),\r\n            ToDate: data[\"ToDate\"].slice(0, 10),\r\n            Reasonforleave: data[\"Reasonforleave\"],\r\n            Status: status(data[\"Status\"])\r\n          };\r\n\r\n          rowDataT.push(temp);\r\n        });\r\n\r\n        setRowData(rowDataT);\r\n\r\n        setTotalLeaves(response.data.length);\r\n        props.updateTotalLeaves(response.data.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // ...\r\n\r\n  const onLeaveApplicationHRDelete = (e1, e2) => {\r\n    console.log(e1, e2);\r\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/leave-application-hr/` + e1 + \"/\" + e2, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((res) => {\r\n          loadLeaveApplicationHRData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\r\n      // Set A4 landscape dimensions\r\n      const pdfWidth = 297; // A4 width in mm\r\n      const pdfHeight = 210; // A4 height in mm\r\n      const doc = new jsPDF({\r\n        orientation: \"landscape\",\r\n        unit: \"mm\",\r\n        format: [pdfWidth, pdfHeight]\r\n      });\r\n\r\n      doc.setFontSize(18);\r\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\r\n      const headers = [\r\n        \"Emp Id\",\r\n        \"Leave Type\",\r\n        \"Start Date\",\r\n        \"End Date\",\r\n        \"Remarks\",\r\n        \"Status\"\r\n      ];\r\n      const data = rowData.map((row) => [\r\n        row.empID,\r\n        row.Leavetype,\r\n        row.FromDate,\r\n        row.ToDate,\r\n        row.Reasonforleave,\r\n        row.Status,\r\n\r\n        \"\" // Action column - you can customize this based on your requirements\r\n      ]);\r\n      doc.setFontSize(12);\r\n      doc.autoTable({\r\n        head: [headers],\r\n        body: data,\r\n        startY: 25\r\n      });\r\n\r\n      doc.save(\"leaveApplication_data.pdf\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLeaveApplicationHRData();\r\n  }, []);\r\n\r\n  const renderButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faTrash}\r\n        onClick={() =>\r\n          onLeaveApplicationHRDelete(\r\n            params.data.data[\"employee\"][0][\"_id\"],\r\n            params.data.data[\"_id\"]\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => props.onEditLeaveApplicationHR(params.data.data)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const status = (s) => {\r\n    if (s == 1) {\r\n      return \"Pending\";\r\n    }\r\n    if (s == 2) {\r\n      return \"Approved\";\r\n    }\r\n    if (s == 3) {\r\n      return \"Rejected\";\r\n    }\r\n    // Add a default case or return a meaningful value for unknown status\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const renderSortIcon = (field) => {\r\n    if (sortColumn === field) {\r\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sortData = (columnName) => {\r\n    const newSortDirection =\r\n      sortColumn === columnName && sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n    const sortedData = [...rowData];\r\n\r\n    sortedData.sort((a, b) => {\r\n      const valueA = a[columnName];\r\n      const valueB = b[columnName];\r\n\r\n      let comparison = 0;\r\n\r\n      if (valueA > valueB) {\r\n        comparison = 1;\r\n      } else if (valueA < valueB) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return newSortDirection === \"desc\" ? comparison * -1 : comparison;\r\n    });\r\n\r\n    setRowData(sortedData);\r\n    setSortColumn(columnName);\r\n    setSortDirection(newSortDirection);\r\n  };\r\n\r\n  // Calculate the total length for each status\r\n  const pendingLeaves = rowData.filter(\r\n    (data) => data.Status === \"Pending\"\r\n  ).length;\r\n  const approvedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Approved\"\r\n  ).length;\r\n  const rejectedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Rejected\"\r\n  ).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    On Pending Leaves\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {pendingLeaves}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  className=\" moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/leaveApplication\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    On Approved Leaves{\" \"}\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {approvedLeaves}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  className=\" moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/leaveAccepted\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    On Rejected Leaves\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {rejectedLeaves}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  className=\" moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/leaveRejected\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveCount;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"./EmployeeTable.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faEdit,\r\n  faInfoCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst EmployeeCount = (props) => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : data[\"Account\"] === 4\r\n                  ? \"Manager\"\r\n                  : \"\",\r\n\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              // EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onEmployeeDelete = (e) => {\r\n    if (window.confirm(\"Are you sure to delete this record? \")) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/employee/${e}`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(() => {\r\n          loadEmployeeData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    window.confirm(\"Are you sure to download Employee record? \");\r\n    const doc = new jsPDF({\r\n      orientation: \"landscape\",\r\n      unit: \"mm\",\r\n      format: [297, 210]\r\n    });\r\n\r\n    doc.setFontSize(18);\r\n    doc.text(\"Employee Details\", 297 / 2, 15, \"center\");\r\n    const headers = [\r\n      \"Emp Id\",\r\n      \"Email\",\r\n      \"Account Access\",\r\n      \"First Name\",\r\n      \"Last Name\",\r\n      \"DOB\",\r\n      \"ContactNo\",\r\n      \"Role\",\r\n      \"Position\",\r\n      \"Department\",\r\n      \"D.O.J\"\r\n    ];\r\n    const data = rowData.map((row) => [\r\n      row.empID,\r\n      row.Email,\r\n      row.Account,\r\n      row.FirstName,\r\n      row.LastName,\r\n      row.DOB,\r\n      row.ContactNo,\r\n      row.RoleName,\r\n      row.PositionName,\r\n      row.DepartmentName,\r\n      row.DateOfJoining,\r\n      \"\"\r\n    ]);\r\n    doc.setFontSize(12);\r\n    doc.autoTable({\r\n      head: [headers],\r\n      body: data,\r\n      startY: 25\r\n    });\r\n\r\n    doc.save(\"employee_data.pdf \");\r\n  };\r\n\r\n  const renderInfoButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            onClick={() => props.onEmpInfo(params.data.data)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderButton = (params) => {\r\n    if (params.data && params.data.data && params.data.data[\"_id\"]) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faTrash}\r\n          onClick={() => onEmployeeDelete(params.data.data[\"_id\"])}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          onClick={() => props.onEditEmployee(params.data.data)}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getBackgroundColor = (accountType) => {\r\n    switch (accountType) {\r\n      case \"Admin\":\r\n        return \"#8EAC50\";\r\n      case \"HR\":\r\n        return \"#0079FF\";\r\n      case \"Employee\":\r\n        return \"purple\";\r\n      case \"Manager\":\r\n        return \"red\";\r\n      default:\r\n        return \"#FF9B50\";\r\n    }\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  const handleToggleIdSort = () => {\r\n    setIsIdSortAscending(!isIdSortAscending);\r\n  };\r\n\r\n  const sortById = (a, b) => {\r\n    const idA = a.empID.toLowerCase();\r\n    const idB = b.empID.toLowerCase();\r\n\r\n    if (isIdSortAscending) {\r\n      return idA.localeCompare(idB);\r\n    } else {\r\n      return idB.localeCompare(idA);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  let filteredData = rowData.filter((item) => {\r\n    const isMatchingId = isIdFilterActive\r\n      ? item.empID.toLowerCase() === searchInput.toLowerCase()\r\n      : true;\r\n\r\n    const isMatchingFirstName = item.FirstName.toLowerCase().includes(\r\n      searchInput.toLowerCase()\r\n    );\r\n\r\n    return isMatchingId && isMatchingFirstName;\r\n  });\r\n\r\n  filteredData = filteredData.sort(sortById);\r\n\r\n  // Calculate the total length for each status\r\n  const adminCount = filteredData.filter(\r\n    (data) => data.Account === \"Admin\"\r\n  ).length;\r\n  const hrCount = filteredData.filter((data) => data.Account === \"HR\").length;\r\n  const managerCount = filteredData.filter(\r\n    (data) => data.Account === \"Manager\"\r\n  ).length;\r\n  const employeeCount = filteredData.filter(\r\n    (data) => data.Account === \"Employee\"\r\n  ).length;\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-6 col-md-3 \">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    Total <br /> Admins\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {adminCount}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  className=\"moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    Total <br /> HR{\" \"}\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {hrCount}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  className=\"moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-6 col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    Total <br /> Manager\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {managerCount}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  className=\" moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-6 col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <div className=\"d-flex justify-content-between align-items-center  flex-nowrap\">\r\n                  <p className=\"fw-bold my-auto pt-2 text-muted\">\r\n                    Total <br /> Employee\r\n                  </p>\r\n                  <span\r\n                    className=\"fw-bolder text-info\"\r\n                    style={{ fontSize: \"35px\" }}\r\n                  >\r\n                    {employeeCount}\r\n                  </span>\r\n                </div>\r\n\r\n                <Link\r\n                  className=\" moreInfoLink text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-1  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeCount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport NoticeBadge from \"../../../img/NoticeBadge.svg\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst NoticeBoard = () => {\r\n  const [notice, setNotice] = useState([]);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.Notice);\r\n        setNotice(response.data.Notice);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"Socket:\", socket?.id);\r\n    if (socket) {\r\n      socket.on(\"notice\", (data) => {\r\n        setNotice((prev) => [data, ...prev]);\r\n      });\r\n      socket.on(\"noticeDelete\", (data) => {\r\n        if (data) {\r\n          loadEmployeeData();\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n  const pdfHandler = (path) => {\r\n    window.open(`${BASE_URL}/${path}`, \"_blank\", \"noreferrer\");\r\n    // window.open(path, \"_blank\")\r\n  };\r\n  return (\r\n    <div className=\"container box-shadow: 0 4px 10px 0 rgb(137 137 137 / 25%); p-0 h-100\">\r\n      <div className=\"birthday shadow position-relative\">\r\n        <h5\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center\"\r\n        >\r\n          Notice Board <span className=\"text-primary\">({notice.length})</span>\r\n        </h5>\r\n        <div\r\n          className=\"mainbirth\"\r\n          style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n        >\r\n          {notice.filter(\r\n            (val, i, ar) =>\r\n              ar.findIndex((item) => item.noticeId === val.noticeId) === i\r\n          ).length > 0 ? (\r\n            <table className=\"table table-striped mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"cursor-pointer\" style={{ width: \"100%\" }}>\r\n                    Notice\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {notice\r\n                  .filter(\r\n                    (val, i, ar) =>\r\n                      ar.findIndex((item) => item.noticeId === val.noticeId) ===\r\n                      i\r\n                  )\r\n                  .map((val) => (\r\n                    <tr key={val.noticeId} style={{ cursor: \"pointer\" }}>\r\n                      <td\r\n                        onClick={() => pdfHandler(val.attachments)}\r\n                      >{`${val.notice}`}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center aline-items-center gap-3\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ height: \"70%\", width: \"60%\" }}\r\n                className=\"mx-auto\"\r\n                src={NoticeBadge}\r\n                alt=\"Happy Birthday\"\r\n              />\r\n              <p\r\n                style={{ opacity: \"60%\", fontSize: \"13px\" }}\r\n                className=\"text-center w-75 mx-auto  fw-bold text-muted \"\r\n              >\r\n                Notice Not Assigned\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeBoard;\r\n","// import React from \"react\";\n// import UpcomingBirthdays from \"../../../Pages/AddEmployee/UpcomingBirthdays\";\n// import TaskChart from \"../../../Pages/Chart/TaskChart\";\n// import DepartmentChart from \"../../../Pages/Chart/DepartmentChart\";\n// import HolidayList from \"../../../Pages/LeaveCalendar/HolidayList\";\n// import LeaveCount from \"./CountData/LeavesCount\";\n// import EmplolyeeCount from \"./CountData/EmployeeCount\";\n// import InnerDashContainer from \"../../InnerDashContainer\";\n// import NoticeBoard from \"../Notification/NoticeBoard\";\n// import DailyAttendChart from \"../../../Pages/Chart/DailyAttendChart\";\n// import LoginstatusCount from \"./CountData/LoginstatusCount.jsx\";\n// const HRDash = () => {\n//   return (\n//     // <InnerDashContainer>\n//     <div className=\"main-container\">\n//       <div className=\"row gap-0 mx-0\">\n//         <div className=\"col-lg-9\">\n//           <EmplolyeeCount />\n//           <LeaveCount />\n\n//           <div className=\"row row_flex mt-5\">\n//             <div className=\"col-lg-6\">\n//               <DepartmentChart />\n//             </div>\n//             <div className=\"col-lg-6\">{/* <DailyAttendChart /> */}</div>\n//           </div>\n//           <div className=\"row row_flex mt-5\">\n//             <div className=\"col-lg-9\">\n//               <TaskChart />\n//             </div>\n//             <div className=\"col-lg-3\">\n//               <LoginstatusCount />\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col-lg-3\">\n//           <UpcomingBirthdays />\n//           <NoticeBoard />\n//           <div className=\"holiday mt-3\">\n//             <HolidayList />\n//           </div>\n//           <div className=\"col-md-9\"></div>\n//         </div>\n//       </div>\n//     </div>\n//     // </InnerDashContainer>\n//   );\n// };\n\n// export default HRDash;\n\n// // export default HRDash;\nimport React from \"react\";\nimport \"./HRDash.css\";\nimport UpcomingBirthdays from \"../../../Pages/AddEmployee/UpcomingBirthdays\";\nimport TaskChart from \"../../../Pages/Chart/TaskChart\";\nimport DepartmentChart from \"../../../Pages/Chart/DepartmentChart\";\nimport HolidayList from \"../../../Pages/LeaveCalendar/HolidayList\";\nimport LeaveCount from \"./CountData/LeavesCount\";\nimport EmployeeCount from \"./CountData/EmployeeCount\";\nimport DailyAttendChart from \"../../../Pages/Chart/DailyAttendChart\";\nimport NoticeBoard from \"../Notification/NoticeBoard\";\nimport { MdCreateNewFolder } from \"react-icons/md\";\n\nconst HRDash = () => {\n  return (\n    <div className=\"hrdashgrid-container container-fluid py-3\">\n      <div className=\"hrdashgrid dash-1\">\n        <EmployeeCount />\n      </div>\n      <div className=\"hrdashgrid dash-3\">\n        <LeaveCount />\n      </div>\n      <div className=\"hrdashgrid dash-7 px-3\">\n        <DailyAttendChart />\n      </div>\n      <div className=\"hrdashgrid dash-5 px-3\">\n        <DepartmentChart />\n      </div>\n      <div className=\"hrdashgrid dash-4 px-3\">\n        <TaskChart />\n      </div>\n      <div className=\"hrdashgrid dash-2\">\n        <NoticeBoard />\n      </div>\n      <div className=\"hrdashgrid dash-6\">\n        <HolidayList\n          title={\"Holiday List\"}\n          newFolderLink={\"/hr/holiday\"}\n          holidayIcons={<MdCreateNewFolder />}\n        />\n      </div>\n      <div className=\"hrdashgrid dash-8\">\n        <UpcomingBirthdays />\n      </div>\n    </div>\n  );\n};\n\nexport default HRDash;\n","export default __webpack_public_path__ + \"static/media/AttendanceNotAvailable.5519bd8b.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\r\nimport { HiOutlineLogin, HiOutlineLogout } from \"react-icons/hi\";\r\nimport { RxCounterClockwiseClock } from \"react-icons/rx\";\r\nimport { FaUserClock } from \"react-icons/fa6\";\r\nimport AttendanceNotAvailable from \"../../../img/AttendanceNotAvailable.svg\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = () => {\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      });\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeChange = (event) => {\r\n    setEmployeeId(event.target.value);\r\n  };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getLogStatus = (status) => {\r\n    switch (status) {\r\n      case \"login\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"green\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"green\"\r\n              }}\r\n            ></div>\r\n            Login\r\n          </span>\r\n        );\r\n      case \"logout\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"red\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"red\"\r\n              }}\r\n            ></div>\r\n            Logout\r\n          </span>\r\n        );\r\n      case \"Break\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"orange\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"orange\"\r\n              }}\r\n            ></div>\r\n            Break\r\n          </span>\r\n        );\r\n      case \"Login\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"green\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"green\"\r\n              }}\r\n            ></div>\r\n            Login\r\n          </span>\r\n        );\r\n      case \"Logout\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"red\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"red\"\r\n              }}\r\n            ></div>\r\n            Logout\r\n          </span>\r\n        );\r\n      case \"resume\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"green\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"green\"\r\n              }}\r\n            ></div>\r\n            Resume\r\n          </span>\r\n        );\r\n      case \"WO\":\r\n        return (\r\n          <span\r\n            className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n            style={{ color: \"red\", width: \"fit-content\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"12px\",\r\n                width: \"12px\",\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"red\"\r\n              }}\r\n            ></div>\r\n            Logout\r\n          </span>\r\n        );\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedMinutes}hrs: ${formattedSeconds}min: ${formattedMillisecond}sec`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"Half Day\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"Late\";\r\n      }\r\n    }\r\n    return loginTime ? \"Present\" : \"Absent\";\r\n  };\r\n\r\n  const GetDay = (s) => {\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    return days[s];\r\n  };\r\n\r\n  function convertMinutesToHoursAndMinutes(minutes) {\r\n    // Calculate hours\r\n    var hours = Math.floor(minutes / 60);\r\n    // Calculate remaining minutes\r\n    var remainingMinutes = minutes % 60;\r\n\r\n    return hours + \" Hrs \" + remainingMinutes + \" Min\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid d-flex py-3 flex-column gap-3\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <h5 className=\"fw-bold text-muted text-uppercase\">\r\n          Employee Wise Attendance\r\n        </h5>\r\n        <div className=\"d-flex gap-3 \">\r\n          <div>\r\n            <select\r\n              className=\"form-select w-100 shadow-sm text-muted\"\r\n              id=\"employeeId\"\r\n              value={employeeId}\r\n              onChange={handleEmployeeChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                --SELECT ANY EMPLOYEE--\r\n              </option>\r\n\r\n              {employees\r\n                .sort((a, b) => a.empID - b.empID)\r\n                .map((employee) => (\r\n                  <option\r\n                    className=\"text-uppercase\"\r\n                    key={employee._id}\r\n                    value={employee._id}\r\n                  >\r\n                    🪪 ({employee.empID}) {employee.FirstName.toUpperCase()}-\r\n                    {employee.LastName.toUpperCase()}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn shadow btn-dark fw-bolder\"\r\n            style={{ width: \"fit-content\" }}\r\n            onClick={handleFetchAttendance}\r\n          >\r\n            Fetch Attendance\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div className=\"w-25\">\r\n            <label htmlFor=\"year\">Select Year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"w-25\">\r\n            <label htmlFor=\"month\">Select Month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr\r\n                style={{ position: \"sticky\", top: \"0\", zIndex: \"3\" }}\r\n                className=\"shadow-sm\"\r\n              >\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  Date | Day\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  Status\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  <HiOutlineLogin />\r\n                  Login Time\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  Logout Time <HiOutlineLogout />\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  <RxCounterClockwiseClock />\r\n                  Log Count\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                >\r\n                  <FaUserClock />\r\n                  Total Login\r\n                </th>\r\n                {/* <th style={{\r\n                  background: \"var(--primaryDashColorDark)\",\r\n                  color: \"var(--primaryDashMenuColor)\",\r\n                  cursor: \"pointer\",\r\n                }}>Break</th> */}\r\n                {/* <th style={{\r\n                  background: \"var(--primaryDashColorDark)\",\r\n                  color: \"var(--primaryDashMenuColor)\",\r\n                  cursor: \"pointer\",\r\n                }}>Log Status</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`}\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"d-flex\">\r\n                            <div\r\n                              style={{\r\n                                overflow: \"hidden\",\r\n                                boxShadow:\r\n                                  \"0 0 3px 2px rgba(180, 179, 179, 0.863) inset\"\r\n                              }}\r\n                              className=\"d-flex rounded-5 justify-content-center align-items-center bg-white border\"\r\n                            >\r\n                              <span\r\n                                style={{ height: \"30px\", width: \"30px\" }}\r\n                                className=\"fw-bold d-flex justify-content-center align-items-center bg-primary shadow-sm text-white\"\r\n                              >\r\n                                {String(date.date).padStart(2, \"0\")}\r\n                              </span>\r\n                              <span\r\n                                style={{ width: \"3rem\" }}\r\n                                className=\"fw-bold px-1 text-muted\"\r\n                              >\r\n                                {GetDay(date.day)}\r\n                              </span>\r\n                            </div>\r\n                          </td>\r\n                          <td\r\n                            style={{ verticalAlign: \"middle\" }}\r\n                            className=\"text-start\"\r\n                          >\r\n                            <span\r\n                              style={{ fontSize: \".8rem\" }}\r\n                              className={`py-1 px-3 rounded-5 shadow-sm fw-bold ${\r\n                                getAttendanceMark(date) === \"Present\"\r\n                                  ? \"bg-success text-white\"\r\n                                  : getAttendanceMark(date) === \"Late\"\r\n                                  ? \"bg-info text-white\"\r\n                                  : getAttendanceMark(date) === \"Half Day\"\r\n                                  ? \"bg-warning text-white\"\r\n                                  : \"bg-danger text-white\"\r\n                              }`}\r\n                            >\r\n                              {getAttendanceMark(date)}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"fw-bold text-muted\"\r\n                              >\r\n                                ( {date.loginTime.length} )\r\n                              </span>\r\n                              <IoMdInformationCircleOutline\r\n                                style={{ fontSize: \"1.1rem\" }}\r\n                                className=\"text-dark \"\r\n                              />\r\n                            </div>\r\n                            <div\r\n                              style={{\r\n                                zIndex: \"5\",\r\n                                right: \"0%\",\r\n                                maxHeight: \"30vh\",\r\n                                overflow: \"auto\"\r\n                              }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering && hoveredDate === date.date && (\r\n                                <table className=\"table table-bordered table-striped\">\r\n                                  <thead>\r\n                                    <tr className=\"shadow-sm\">\r\n                                      <th\r\n                                        style={{\r\n                                          whiteSpace: \"pre\",\r\n                                          backgroundColor:\r\n                                            \"var(--primaryDashColorDark)\",\r\n                                          color: \"var(--primaryDashMenuColor)\"\r\n                                        }}\r\n                                      >\r\n                                        Login\r\n                                      </th>\r\n                                      <th\r\n                                        style={{\r\n                                          whiteSpace: \"pre\",\r\n                                          backgroundColor:\r\n                                            \"var(--primaryDashColorDark)\",\r\n                                          color: \"var(--primaryDashMenuColor)\"\r\n                                        }}\r\n                                      >\r\n                                        Logout\r\n                                      </th>\r\n                                      <th\r\n                                        style={{\r\n                                          whiteSpace: \"pre\",\r\n                                          backgroundColor:\r\n                                            \"var(--primaryDashColorDark)\",\r\n                                          color: \"var(--primaryDashMenuColor)\"\r\n                                        }}\r\n                                      >\r\n                                        Total Login\r\n                                      </th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {date.loginTime.map((loginTime, index) => (\r\n                                      <tr key={index}>\r\n                                        <td>{loginTime}</td>\r\n                                        <td>{date.logoutTime[index]}</td>\r\n                                        <td>\r\n                                          {convertMinutesToHoursAndMinutes(\r\n                                            date.LogData[index]\r\n                                          )}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ))}\r\n                                  </tbody>\r\n                                </table>\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                          <td>\r\n                            {convertMinutesToHoursAndMinutes(\r\n                              date.totalLogAfterBreak\r\n                            )}\r\n                          </td>\r\n                          {/* <td>{getLogStatus(date.status)}</td> */}\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          {/* <div className=\"fs-2 fw-bolder\">\r\n            <span className=\"spinner-border text-info\" />\r\n          </div> */}\r\n          <div style={{ height: \"15rem\", width: \"15rem\" }}>\r\n            <img\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n              src={AttendanceNotAvailable}\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { IoMdInformationCircleOutline } from \"react-icons/io\";\r\n// import { HiOutlineLogin, HiOutlineLogout } from \"react-icons/hi\";\r\n// import { RxCounterClockwiseClock } from \"react-icons/rx\";\r\n// import { FaUserClock } from \"react-icons/fa6\";\r\n// import BASE_URL from \"../../../Pages/config/config\";\r\n\r\n// const AttendanceDetails = () => {\r\n//   const [employeeId, setEmployeeId] = useState(\"\");\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [attendanceData, setAttendanceData] = useState(null);\r\n//   const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n//   const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n//   const [hoveredDate, setHoveredDate] = useState(null);\r\n//   const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n\r\n//   const handleMouseEnter = (date) => {\r\n//     setHoveredDate(date);\r\n//   };\r\n\r\n//   const handleMouseLeave = () => {\r\n//     setHoveredDate(null);\r\n//   };\r\n\r\n//   const handleInfoMouseEnter = () => {\r\n//     setIsInfoHovering(true);\r\n//   };\r\n\r\n//   const handleInfoMouseLeave = () => {\r\n//     setIsInfoHovering(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchEmployees();\r\n//   }, []);\r\n\r\n//   const fetchEmployees = async () => {\r\n//     try {\r\n//       const response = await axios.get(`${BASE_URL}/api/employee`, {\r\n//         headers: {\r\n//           authorization: localStorage.getItem(\"token\") || \"\"\r\n//         }\r\n//       });\r\n//       setEmployees(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching employees:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEmployeeChange = (event) => {\r\n//     setEmployeeId(event.target.value);\r\n//   };\r\n\r\n//   const handleFetchAttendance = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `${BASE_URL}/api/attendance/${employeeId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n//           }\r\n//         }\r\n//       );\r\n\r\n//       let singleUser = response.data.filter((val) => {\r\n//         return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n//       });\r\n\r\n//       setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching attendance data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const getTotalHolidays = () => {\r\n//     if (\r\n//       attendanceData &&\r\n//       attendanceData.user &&\r\n//       attendanceData.user.holidayObjID\r\n//     ) {\r\n//       return attendanceData.user.holidayObjID.holidays.length;\r\n//     }\r\n//     return 0;\r\n//   };\r\n\r\n//   const getMonthName = (monthNumber) => {\r\n//     switch (monthNumber) {\r\n//       case 1:\r\n//         return \"January\";\r\n//       case 2:\r\n//         return \"February\";\r\n//       case 3:\r\n//         return \"March\";\r\n//       case 4:\r\n//         return \"April\";\r\n//       case 5:\r\n//         return \"May\";\r\n//       case 6:\r\n//         return \"June\";\r\n//       case 7:\r\n//         return \"July\";\r\n//       case 8:\r\n//         return \"August\";\r\n//       case 9:\r\n//         return \"September\";\r\n//       case 10:\r\n//         return \"October\";\r\n//       case 11:\r\n//         return \"November\";\r\n//       case 12:\r\n//         return \"December\";\r\n//       default:\r\n//         return \"\";\r\n//     }\r\n//   };\r\n\r\n//   const getLogStatus = (status) => {\r\n//     switch (status) {\r\n//       case \"login\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"green\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"green\"\r\n//               }}\r\n//             ></div>\r\n//             Login\r\n//           </span>\r\n//         );\r\n//       case \"logout\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"red\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"red\"\r\n//               }}\r\n//             ></div>\r\n//             Logout\r\n//           </span>\r\n//         );\r\n//       case \"Break\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"orange\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"orange\"\r\n//               }}\r\n//             ></div>\r\n//             Break\r\n//           </span>\r\n//         );\r\n//       case \"Login\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"green\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"green\"\r\n//               }}\r\n//             ></div>\r\n//             Login\r\n//           </span>\r\n//         );\r\n//       case \"Logout\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"red\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"red\"\r\n//               }}\r\n//             ></div>\r\n//             Logout\r\n//           </span>\r\n//         );\r\n//       case \"resume\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"green\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"green\"\r\n//               }}\r\n//             ></div>\r\n//             Resume\r\n//           </span>\r\n//         );\r\n//       case \"WO\":\r\n//         return (\r\n//           <span\r\n//             className=\"d-flex flex-nowrap align-items-center gap-2 fw-bold justify-content-end rounded-5 py-1 px-3 shadow-sm \"\r\n//             style={{ color: \"red\", width: \"fit-content\" }}\r\n//           >\r\n//             <div\r\n//               style={{\r\n//                 height: \"12px\",\r\n//                 width: \"12px\",\r\n//                 borderRadius: \"50%\",\r\n//                 backgroundColor: \"red\"\r\n//               }}\r\n//             ></div>\r\n//             Logout\r\n//           </span>\r\n//         );\r\n//       default:\r\n//         return \"\";\r\n//     }\r\n//   };\r\n\r\n//   const getMonthsForYear = (year) => {\r\n//     if (year === new Date().getFullYear()) {\r\n//       return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n//     }\r\n//     return Array.from({ length: 12 }, (_, i) => i + 1);\r\n//   };\r\n\r\n//   const getYears = () => {\r\n//     if (attendanceData && attendanceData.years) {\r\n//       const currentYear = new Date().getFullYear();\r\n//       return attendanceData.years.filter((year) => year.year <= currentYear);\r\n//     }\r\n//     return [];\r\n//   };\r\n\r\n//   const millisecondsToTime = (milliseconds) => {\r\n//     const millisecond = Math.floor(milliseconds);\r\n//     const seconds = Math.floor(milliseconds / 1000);\r\n//     const minutes = Math.floor(seconds / 60);\r\n//     const hours = Math.floor(minutes / 60);\r\n\r\n//     const formattedHours = String(hours).padStart(2, \"0\");\r\n//     const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n//     const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n//     const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n//     return `${formattedMinutes}hrs: ${formattedSeconds}min: ${formattedMillisecond}sec`;\r\n//   };\r\n\r\n//   const getAttendanceMark = (date) => {\r\n//     const loginTime = date && date.loginTime[0];\r\n//     if (loginTime) {\r\n//       const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n//       if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n//         return \"Half Day\";\r\n//       } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//         return \"Late\";\r\n//       }\r\n//     }\r\n//     return loginTime ? \"Present\" : \"Absent\";\r\n//   };\r\n\r\n//   const GetDay = (s) => {\r\n//     const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n//     return days[s];\r\n//   };\r\n\r\n//   function convertMinutesToHoursAndMinutes(minutes) {\r\n//     // Calculate hours\r\n//     var hours = Math.floor(minutes / 60);\r\n//     // Calculate remaining minutes\r\n//     var remainingMinutes = minutes % 60;\r\n\r\n//     return hours + \" Hrs \" + remainingMinutes + \" Min\";\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"d-flex flex-column p-5 gap-3\">\r\n//       <div className=\"d-flex gap-3 \">\r\n//         <div>\r\n//           <select\r\n//             className=\"form-select w-100 shadow-sm text-muted\"\r\n//             id=\"employeeId\"\r\n//             value={employeeId}\r\n//             onChange={handleEmployeeChange}\r\n//           >\r\n//             <option value=\"\" disabled>\r\n//               --SELECT ANY EMPLOYEE--\r\n//             </option>\r\n\r\n//             {employees\r\n//               .sort((a, b) => a.empID - b.empID)\r\n//               .map((employee) => (\r\n//                 <option\r\n//                   className=\"text-uppercase\"\r\n//                   key={employee._id}\r\n//                   value={employee._id}\r\n//                 >\r\n//                   🪪 ({employee.empID}) {employee.FirstName.toUpperCase()}-\r\n//                   {employee.LastName.toUpperCase()}\r\n//                 </option>\r\n//               ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         <button\r\n//           className=\"btn shadow btn-dark fw-bolder\"\r\n//           style={{ width: \"fit-content\" }}\r\n//           onClick={handleFetchAttendance}\r\n//         >\r\n//           Fetch Attendance\r\n//         </button>\r\n//       </div>\r\n\r\n//       {attendanceData && (\r\n//         <div className=\"d-flex gap-3\">\r\n//           <div className=\"w-25\">\r\n//             <label htmlFor=\"year\">Select Year:</label>\r\n//             <select\r\n//               className=\"form-select shadow\"\r\n//               id=\"year\"\r\n//               value={selectedYear}\r\n//               onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n//             >\r\n//               {getYears().map((year) => (\r\n//                 <option key={year.year} value={year.year}>\r\n//                   {year.year}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"w-25\">\r\n//             <label htmlFor=\"month\">Select Month:</label>\r\n//             <select\r\n//               className=\"form-select shadow\"\r\n//               id=\"month\"\r\n//               value={selectedMonth}\r\n//               onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n//             >\r\n//               {getMonthsForYear(selectedYear).map((month) => (\r\n//                 <option key={month} value={month}>\r\n//                   {getMonthName(month)}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {attendanceData && (\r\n//         <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n//           <table className=\"table\">\r\n//             <thead>\r\n//               <tr\r\n//                 style={{ position: \"sticky\", top: \"0\", zIndex: \"3\" }}\r\n//                 className=\"shadow-sm\"\r\n//               >\r\n//                 <th\r\n//                   style={{\r\n//                     background: \"var(--primaryDashColorDark)\",\r\n//                     color: \"var(--primaryDashMenuColor)\",\r\n//                     cursor: \"pointer\"\r\n//                   }}\r\n//                 >\r\n//                   Date | Day\r\n//                 </th>\r\n//                 <th\r\n//                   style={{\r\n//                     background: \"var(--primaryDashColorDark)\",\r\n//                     color: \"var(--primaryDashMenuColor)\",\r\n//                     cursor: \"pointer\"\r\n//                   }}\r\n//                 >\r\n//                   Status\r\n//                 </th>\r\n//                 <th\r\n//                   style={{\r\n//                     background: \"var(--primaryDashColorDark)\",\r\n//                     color: \"var(--primaryDashMenuColor)\",\r\n//                     cursor: \"pointer\"\r\n//                   }}\r\n//                 >\r\n//                   <HiOutlineLogin />\r\n//                   Login Time\r\n//                 </th>\r\n//                 <th\r\n//                   style={{\r\n//                     background: \"var(--primaryDashColorDark)\",\r\n//                     color: \"var(--primaryDashMenuColor)\",\r\n//                     cursor: \"pointer\"\r\n//                   }}\r\n//                 >\r\n//                   Logout Time <HiOutlineLogout />\r\n//                 </th>\r\n//                 <th\r\n//                   style={{\r\n//                     background: \"var(--primaryDashColorDark)\",\r\n//                     color: \"var(--primaryDashMenuColor)\",\r\n//                     cursor: \"pointer\"\r\n//                   }}\r\n//                 >\r\n//                   <RxCounterClockwiseClock />\r\n//                   Log Count\r\n//                 </th>\r\n//                 <th\r\n//                   style={{\r\n//                     background: \"var(--primaryDashColorDark)\",\r\n//                     color: \"var(--primaryDashMenuColor)\",\r\n//                     cursor: \"pointer\"\r\n//                   }}\r\n//                 >\r\n//                   <FaUserClock />\r\n//                   Total Login\r\n//                 </th>\r\n//                 {/* <th style={{\r\n//                   background: \"var(--primaryDashColorDark)\",\r\n//                   color: \"var(--primaryDashMenuColor)\",\r\n//                   cursor: \"pointer\",\r\n//                 }}>Break</th> */}\r\n//                 {/* <th style={{\r\n//                   background: \"var(--primaryDashColorDark)\",\r\n//                   color: \"var(--primaryDashMenuColor)\",\r\n//                   cursor: \"pointer\",\r\n//                 }}>Log Status</th> */}\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {getYears().map((year) =>\r\n//                 year.months\r\n//                   .filter((month) => month.month === selectedMonth)\r\n//                   .map((month) =>\r\n//                     month.dates\r\n//                       .sort((a, b) => a.date - b.date)\r\n//                       .map((date) => (\r\n//                         <tr\r\n//                           className=\"shadow-sm\"\r\n//                           key={date.date}\r\n//                           id={`attendance-row-${date.date}`}\r\n//                           onMouseEnter={() => handleMouseEnter(date.date)}\r\n//                           onMouseLeave={() => handleMouseLeave()}\r\n//                         >\r\n//                           <td className=\"d-flex\">\r\n//                             <div\r\n//                               style={{\r\n//                                 overflow: \"hidden\",\r\n//                                 boxShadow:\r\n//                                   \"0 0 3px 2px rgba(180, 179, 179, 0.863) inset\"\r\n//                               }}\r\n//                               className=\"d-flex rounded-5 justify-content-center align-items-center bg-white border\"\r\n//                             >\r\n//                               <span\r\n//                                 style={{ height: \"30px\", width: \"30px\" }}\r\n//                                 className=\"fw-bold d-flex justify-content-center align-items-center bg-primary shadow-sm text-white\"\r\n//                               >\r\n//                                 {String(date.date).padStart(2, \"0\")}\r\n//                               </span>\r\n//                               <span\r\n//                                 style={{ width: \"3rem\" }}\r\n//                                 className=\"fw-bold px-1 text-muted\"\r\n//                               >\r\n//                                 {GetDay(date.day)}\r\n//                               </span>\r\n//                             </div>\r\n//                           </td>\r\n//                           <td\r\n//                             style={{ verticalAlign: \"middle\" }}\r\n//                             className=\"text-start\"\r\n//                           >\r\n//                             <span\r\n//                               style={{ fontSize: \".8rem\" }}\r\n//                               className={`py-1 px-3 rounded-5 shadow-sm fw-bold ${\r\n//                                 getAttendanceMark(date) === \"Present\"\r\n//                                   ? \"bg-success text-white\"\r\n//                                   : getAttendanceMark(date) === \"Late\"\r\n//                                   ? \"bg-info text-white\"\r\n//                                   : getAttendanceMark(date) === \"Half Day\"\r\n//                                   ? \"bg-warning text-white\"\r\n//                                   : \"bg-danger text-white\"\r\n//                               }`}\r\n//                             >\r\n//                               {getAttendanceMark(date)}\r\n//                             </span>\r\n//                           </td>\r\n//                           <td className=\"text-uppercase\">\r\n//                             {date.loginTime[0]}\r\n//                           </td>\r\n//                           <td className=\"text-uppercase\">\r\n//                             {date.logoutTime[date.logoutTime.length - 1]}\r\n//                           </td>\r\n//                           <td className=\"position-relative bg-white\">\r\n//                             <div\r\n//                               style={{\r\n//                                 display: \"flex \",\r\n//                                 justifyContent: \"start\",\r\n//                                 alignItems: \"center\"\r\n//                               }}\r\n//                               className=\"fs-6 gap-2 \"\r\n//                               onMouseEnter={handleInfoMouseEnter}\r\n//                               onMouseLeave={handleInfoMouseLeave}\r\n//                             >\r\n//                               <span\r\n//                                 style={{ fontSize: \".9rem\" }}\r\n//                                 className=\"fw-bold text-muted\"\r\n//                               >\r\n//                                 ( {date.loginTime.length} )\r\n//                               </span>\r\n//                               <IoMdInformationCircleOutline\r\n//                                 style={{ fontSize: \"1.1rem\" }}\r\n//                                 className=\"text-dark \"\r\n//                               />\r\n//                             </div>\r\n//                             <div\r\n//                               style={{\r\n//                                 zIndex: \"5\",\r\n//                                 right: \"0%\",\r\n//                                 maxHeight: \"30vh\",\r\n//                                 overflow: \"auto\"\r\n//                               }}\r\n//                               className=\"position-absolute\"\r\n//                             >\r\n//                               {isInfoHovering && hoveredDate === date.date && (\r\n//                                 <table className=\"table table-bordered table-striped\">\r\n//                                   <thead>\r\n//                                     <tr className=\"shadow-sm\">\r\n//                                       <th\r\n//                                         style={{\r\n//                                           whiteSpace: \"pre\",\r\n//                                           backgroundColor:\r\n//                                             \"var(--primaryDashColorDark)\",\r\n//                                           color: \"var(--primaryDashMenuColor)\"\r\n//                                         }}\r\n//                                       >\r\n//                                         Login\r\n//                                       </th>\r\n//                                       <th\r\n//                                         style={{\r\n//                                           whiteSpace: \"pre\",\r\n//                                           backgroundColor:\r\n//                                             \"var(--primaryDashColorDark)\",\r\n//                                           color: \"var(--primaryDashMenuColor)\"\r\n//                                         }}\r\n//                                       >\r\n//                                         Logout\r\n//                                       </th>\r\n//                                       <th\r\n//                                         style={{\r\n//                                           whiteSpace: \"pre\",\r\n//                                           backgroundColor:\r\n//                                             \"var(--primaryDashColorDark)\",\r\n//                                           color: \"var(--primaryDashMenuColor)\"\r\n//                                         }}\r\n//                                       >\r\n//                                         Total Login\r\n//                                       </th>\r\n//                                     </tr>\r\n//                                   </thead>\r\n//                                   <tbody>\r\n//                                     {date.loginTime.map((loginTime, index) => (\r\n//                                       <tr key={index}>\r\n//                                         <td>{loginTime}</td>\r\n//                                         <td>{date.logoutTime[index]}</td>\r\n//                                         <td>\r\n//                                           {convertMinutesToHoursAndMinutes(\r\n//                                             date.LogData[index]\r\n//                                           )}\r\n//                                         </td>\r\n//                                       </tr>\r\n//                                     ))}\r\n//                                   </tbody>\r\n//                                 </table>\r\n//                               )}\r\n//                             </div>\r\n//                           </td>\r\n//                           <td>\r\n//                             {convertMinutesToHoursAndMinutes(\r\n//                               date.totalLogAfterBreak\r\n//                             )}\r\n//                           </td>\r\n//                           {/* <td>{getLogStatus(date.status)}</td> */}\r\n//                         </tr>\r\n//                       ))\r\n//                   )\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       )}\r\n//       {attendanceData === null && (\r\n//         <div\r\n//           style={{\r\n//             height: \"80vh\",\r\n//             width: \"100%\",\r\n//             display: \"flex\",\r\n//             justifyContent: \"center\",\r\n//             alignItems: \"center\",\r\n//             wordSpacing: \"5px\",\r\n//             flexDirection: \"column\",\r\n//             gap: \"1rem\"\r\n//           }}\r\n//         >\r\n//           <div className=\"fs-2 fw-bolder\">\r\n//             <span className=\"spinner-border text-info\" />\r\n//           </div>\r\n//           <p className=\"text-muted\">\r\n//             User not selected. To view data, please select a user.\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceDetails;\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { MdCancel } from \"react-icons/md\";\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { toast } from \"react-hot-toast\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst ManagerNewTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [, setIsAccepted] = useState(false);\n  const [, setIsRejected] = useState(false);\n  const taskId = uuidv4();\n  const email = localStorage.getItem(\"Email\");\n  const { socket } = useContext(AttendanceContext);\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      console.log(response.data);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  const AcceptTask = async (taskID, taskName, adminMail) => {\n    try {\n      setIsAccepted(true);\n\n      // Prompt the user for Accept remarks\n      const AcceptTaskRemark = prompt(\"Enter remarks for Accept Task:\");\n\n      if (AcceptTaskRemark === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsAccepted(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskID}`, {\n        status: \"Pending\",\n        comment: AcceptTaskRemark\n      });\n\n      // Display success notification\n      toast.success(\"Task Accepteed successfully!\");\n      const data = {\n        taskId,\n        status: \"unseen\",\n        path: \"taskstatus\",\n        senderMail: email,\n        taskName,\n        message: `${taskName} Accepted by ${email}`,\n        adminMail,\n        Account: 1,\n        taskStatus: \"Accepted\"\n      };\n      // Update the UI by fetching the latest tasks;\n      socket.emit(\"adminTaskNotification\", data);\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsAccepted(false);\n    }\n  };\n  const RejectTask = async (taskId) => {\n    try {\n      setIsRejected(true);\n      const RejectRemarks = prompt(\"Enter remarks for Reject Task:\");\n\n      if (RejectRemarks === null) {\n        setIsRejected(false);\n        return;\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Rejected\",\n        comment: RejectRemarks\n      });\n\n      toast.success(\"Task Rejected\");\n\n      fetchData();\n    } catch (error) {\n      console.error(\"Error Rejecting task:\", error.message);\n      toast.error(\"Failed to Reject task. Please try again.\");\n    } finally {\n      setIsRejected(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">⭐ New Task</h1>\n      <p className=\"text-muted\">You can view all New task here!</p>{\" \"}\n      <h1 className=\"fs-3 fw-bolder text-uppercase \"></h1>\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter(\n            (task) => task.status === \"Assigned\" && task.managerEmail === email\n          )\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background:\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white \"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-info col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() =>\n                        AcceptTask(task._id, task.Taskname, task.adminMail)\n                      }\n                    >\n                      <IoCheckmarkDoneSharp />\n                      Accept\n                    </button>\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() =>\n                        RejectTask(task._id, task.Taskname, task.adminMail)\n                      }\n                    >\n                      <BsFiletypeDoc />\n                      View Docs\n                    </button>\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => RejectTask(task._id)}\n                    >\n                      <MdCancel />\n                      Reject\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerNewTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\nconst ManagerCencelledTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Cancelled\" }\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cancelled tasks:\", error.message);\n      setError(\"Error fetching cancelled tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchDataWithTimeout = async () => {\n      await fetchData();\n    };\n\n    fetchDataWithTimeout();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ❌ Cancelled Task\n      </h1>\n      <p className=\"text-muted\">You can view all Cancelled task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter((task) => task.status === \"Cancelled\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background:\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-danger fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-danger m-auto fw-bold\">Cancelled</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    c a n c e l l e d\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <div\n                    style={{ position: \"relative\" }}\n                    className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n                  >\n                    <div\n                      style={{\n                        width: \"99.4%\",\n                        height: \"100%\",\n                        zIndex: \"5\",\n                        backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                        textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                      }}\n                      className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                    >\n                      <h1 className=\"text-uppercase text-light fw-bolder\">\n                        c a n c e l l e d\n                      </h1>\n                    </div>\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"form-control\"\n                    >\n                      <p\n                        style={{ height: \"fit-content\" }}\n                        className=\"text-start fs-6 form-control\"\n                      >\n                        <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                        {task.description}\n                      </p>\n                      <div\n                        style={{ height: \"fit-content\" }}\n                        className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                      >\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Task Durations <br />{\" \"}\n                          <span>{task.duration} days</span>{\" \"}\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Created By <br /> <span> {task.managerEmail}</span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Start Date <br />{\" \"}\n                          <span>\n                            {new Date(task.startDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          End Date <br />{\" \"}\n                          <span>\n                            {new Date(task.endDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          <span>\n                            Task Status <br /> {task.status}\n                          </span>\n                        </p>\n                      </div>\n                      <div\n                        style={{ height: \"fit-content\" }}\n                        className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                      >\n                        <p>\n                          <span className=\"fw-bold\">Remarks : </span>{\" \"}\n                          {task.comment}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerCencelledTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\nconst ManagerCompletedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ✅ Completed Tasks (\n        {tasks.filter((task) => task.status === \"Completed\").length})\n      </h1>\n      <p className=\"text-muted\">You can view all Completed task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Completed\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background:\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-success m-auto fw-bold\">Completed</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(0, 128, 0, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    C O M P L E T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerCompletedTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst ManagerRejectedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        🔴 Rejected Tasks\n      </h1>\n      <p className=\"text-muted\">You can view all rejected task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Rejected\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{ height: \"fit-content\" }}\n                className=\"d-flex justify-content-between aline-center form-control bg-black text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div>\n                  <p className=\"btn btn-light m-auto py-1 px-3 fw-bold\">\n                    Rejected\n                  </p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(5, 128, 8, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    R E J E C T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span> {task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerRejectedTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PiInfoFill } from \"react-icons/pi\";\nimport { FaCheck } from \"react-icons/fa6\";\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { toast } from \"react-hot-toast\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Table from \"react-bootstrap/esm/Table\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst ManagerActiveTask = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [, setIsCompleting] = useState(false);\n  const [getEmployee, setGetEmployee] = useState([]);\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [originalEmployeeData, setOriginalEmployeeData] = useState([]);\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [selectAll, setSelectAll] = useState(false);\n  const [isForwardButtonDisabled, setIsForwardButtonDisabled] = useState(true);\n\n  const [employeeData, setEmployeeData] = useState([]);\n  const [searchData, setSearchData] = useState(\"\");\n  const [rowData, setRowData] = useState([]);\n  const [rowIndex, setRowIndex] = useState(null);\n  const [moreInfo, setMoreInfo] = useState(false);\n  const [taskDepartment, setTaskDepartment] = useState(\"\");\n  const loadEmployeeData = () => {\n    axios\n      .get(`http://localhost:4000/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const employeeObj = response.data;\n        console.log(\"response\", response.data);\n        setEmployeeData(employeeObj);\n        setLoading(false);\n        const rowDataT = employeeObj.map((data) => {\n          return {\n            data,\n            Email: data[\"Email\"],\n            department: data[\"department\"][0][\"DepartmentName\"],\n            FirstName: data[\"FirstName\"] + \"\" + data[\"LastName\"],\n            ContactNo: data[\"ContactNo\"],\n            PositionName: data[\"position\"][0]\n              ? data[\"position\"][0][\"PositionName\"]\n              : \"\"\n          };\n        });\n        console.log(rowDataT);\n        setRowData(rowDataT);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/api/tasks`);\n      // console.log(response.data)\n      setTasks(response.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"getEmployee:\", getEmployee);\n  }, [getEmployee]);\n\n  const forwordTaskToEmployee = async (taskId, dep) => {\n    let filteredData = rowData.filter((val) => {\n      return val.department === dep;\n    });\n    setRowData(filteredData);\n    setTaskDepartment(dep);\n    setSelectedTaskId(taskId);\n    setModalShow(true);\n  };\n\n  const forwardTaskToEmployees = async (selectedTaskId) => {\n    try {\n      for (const employee of selectedEmployees) {\n        try {\n          const employeeData = {\n            empname: employee.FirstName,\n            empemail: employee.Email,\n            empdesignation: employee.PositionName,\n            emptaskStatus: \"Task Assigned\"\n          };\n\n          await axios.post(\n            `${BASE_URL}/api/tasks/${selectedTaskId}/employees`,\n            {\n              employees: [employeeData]\n            }\n          );\n        } catch (error) {\n          console.error(\n            `Error forwarding task to ${employee.FirstName}:`,\n            error.message\n          );\n        }\n      }\n\n      fetchData();\n\n      setSelectedEmployees([]);\n      setModalShow(false);\n    } catch (error) {\n      console.error(\"Error forwarding task:\", error.message);\n      toast.error(\"Failed to forward task. Please try again.\");\n    }\n  };\n\n  const askStatus = async (taskId) => {};\n  const completeTask = async (taskId) => {\n    try {\n      setIsCompleting(true);\n\n      const CompleteRemarks = prompt(\"Enter remarks to Complete Task:\");\n\n      if (CompleteRemarks === null) {\n        setIsCompleting(false);\n        return;\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Completed\",\n        comment: CompleteRemarks\n      });\n\n      toast.success(\"Task completed successfully!\");\n\n      fetchData();\n    } catch (error) {\n      console.error(\"Error completing task:\", error.message);\n      test.error(\"Failed to complete task. Please try again.\");\n    } finally {\n      setIsCompleting(false);\n    }\n  };\n\n  const handleSearch = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n\n    if (searchValue === \"\") {\n      setGetEmployee(originalEmployeeData);\n    } else {\n      const filteredEmployees = originalEmployeeData.filter(\n        (employee) =>\n          employee.name.toLowerCase().includes(searchValue) ||\n          employee.email.toLowerCase().includes(searchValue) ||\n          employee.designation.toLowerCase().includes(searchValue)\n      );\n\n      setGetEmployee(filteredEmployees);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInputEmail(e.target.value);\n  };\n\n  const removeSelectedEmployee = (email) => {\n    setSelectedEmployees(\n      selectedEmployees.filter((employee) => employee.Email !== email)\n    );\n  };\n\n  const addSelectedEmployee = (employee) => {\n    const isChecked = selectedEmployees.some(\n      (emp) => emp.Email === employee.Email\n    );\n\n    if (isChecked) {\n      setSelectedEmployees((prevEmployees) =>\n        prevEmployees.filter((emp) => emp.Email !== employee.Email)\n      );\n    } else {\n      setSelectedEmployees([...selectedEmployees, employee]);\n    }\n    if (selectedEmployees.length < 0) {\n      setIsForwardButtonDisabled(true);\n    } else {\n      setIsForwardButtonDisabled(false); // Disable the button when there is at least one selected employee\n    }\n\n    setInputEmail(\"\");\n  };\n\n  const toggleSelectAll = () => {\n    setSelectAll(!selectAll);\n    setSelectedEmployees(selectAll ? [] : [...rowData]);\n  };\n\n  const calculateProgress = (task) => {\n    const totalEmployees =\n      task.employees.length -\n      task.employees.filter((emp) => emp.emptaskStatus === \"Rejected\").length;\n    const completedTasks = task.employees.filter(\n      (emp) => emp.emptaskStatus === \"Completed\"\n    ).length;\n    return (completedTasks / totalEmployees) * 100;\n  };\n  return (\n    <div className=\"py-2\">\n      <h1 className=\"fs-3 fw-bolder text-uppercase mb-4\">All Active Tasks</h1>\n\n      {loading && (\n        <div className=\"d-flex align-items-center gap-2\">\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n\n      {error && <p className=\"text-danger\">{error}</p>}\n\n      <div className=\"overflow-auto\" style={{ maxHeight: \"80vh\" }}>\n        {tasks\n          .filter((task) => task.status === \"Pending\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{ height: \"fit-content\" }}\n                className=\"d-flex justify-content-between aline-center form-control bg-dark  text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>\n                    <div className=\"row justify-between\">\n                      <div className=\"col-10\">{task.description}</div>\n                      <div\n                        className=\"col-2 d-flex\"\n                        style={{ width: \"6rem\", borderRadius: \"50%\" }}\n                      >\n                        <CircularProgressbar\n                          className=\"fw-bold\"\n                          value={calculateProgress(task)}\n                          text={`${calculateProgress(task).toFixed(2)}%`}\n                          styles={buildStyles({\n                            pathColor: \"#28a745\",\n                            textColor: \"#28a745\"\n                          })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <h6 className=\"fw-bold\">Forwarded Members Status</h6>\n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>S. No</th>\n                          <th>Name</th>\n                          <th>Email</th>\n                          <th>Designation</th>\n                          <th>Task Status</th>\n                          <th>Remarks</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {task.employees.map((taskemp, i) => (\n                          <tr key={i}>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {i + 1}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empname}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empemail}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empdesignation}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.emptaskStatus}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empTaskComment}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() =>\n                        forwordTaskToEmployee(task._id, task.department)\n                      }\n                    >\n                      <IoCheckmarkDoneSharp /> Forward Task\n                    </button>\n                    <button\n                      className=\"btn btn-warning col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => askStatus(task._id)}\n                    >\n                      <BsFiletypeDoc /> Ask Status\n                    </button>\n                    <button\n                      className=\"btn btn-success col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => completeTask(task._id)}\n                      disabled={calculateProgress(task) !== 100}\n                    >\n                      <FaCheck />\n                      Complete Task\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n\n      <Modal\n        fullscreen={true}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Forward Task to Employees</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <form className=\"d-flex col-8 flex-column gap-3\">\n              <input\n                className=\"w-100 py-1 px-2 rounded-5 border\"\n                type=\"search\"\n                name=\"\"\n                placeholder=\"Search...\"\n                id=\"\"\n                value={inputEmail}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  handleSearch(e);\n                }}\n              />\n              <div>\n                <div className=\" p-2\">\n                  {\" \"}\n                  <input\n                    type=\"checkbox\"\n                    name=\"\"\n                    id=\"\"\n                    onChange={toggleSelectAll}\n                    checked={selectAll}\n                  />{\" \"}\n                  <span>Select All</span>\n                </div>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Select</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Contact</th>\n                      <th scope=\"col\">Designation</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {rowData.map((row, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">\n                          <input\n                            type=\"checkbox\"\n                            name=\"\"\n                            id=\"\"\n                            onChange={() => addSelectedEmployee(row)}\n                            checked={selectedEmployees.some(\n                              (emp) => emp.Email === row.Email\n                            )}\n                          />\n                        </th>\n                        <td>{row.FirstName}</td>\n                        <td>{row.Email}</td>\n                        <td>{row.ContactNo}</td>\n                        <td>{row.PositionName}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </form>\n            <div className=\"d-flex flex-column col-4 gap-2\">\n              <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\n                <div>\n                  <span className=\"fw-bold\">Selected Employees:</span>\n                  {selectedEmployees.map((employee, index) => (\n                    <div key={index} className=\"d-flex\">\n                      <span\n                        style={{\n                          boxShadow: \"-3px 3px 5px rgba(204, 201, 201, 0.767)\",\n                          width: \"fit-content\"\n                        }}\n                        className=\"selected-employee-email d-flex btn gap-2 aline-center  btn-light py-1 px-2 m-1\"\n                        onClick={() => removeSelectedEmployee(employee.Email)}\n                      >\n                        {employee.FirstName} - {employee.PositionName}\n                        <span className=\"text-danger d-none\">\n                          <MdDeleteForever />\n                        </span>\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <button\n                className=\"btn  btn-primary\"\n                onClick={() =>\n                  forwardTaskToEmployees(selectedTaskId, selectedEmployees)\n                }\n                disabled={isForwardButtonDisabled}\n              >\n                Forward Task to Employees\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => setModalShow(false)}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ManagerActiveTask;\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst SelfAttendance = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const empMail = localStorage.getItem(\"Email\");\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     fetchEmployees();\r\n  //   }, []);\r\n\r\n  //   const fetchEmployees = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\"http://localhost:4000/api/employee\", {\r\n  //         headers: {\r\n  //           authorization: localStorage.getItem(\"token\") || \"\"\r\n  //         }\r\n  //       });\r\n  //       setEmployees(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching employees:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `http://localhost:4000/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  // setIsButtonClicked(true);\r\n  useEffect(() => {\r\n    const handleFetchAttendance = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:4000/api/attendance/${employeeId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n            }\r\n          }\r\n        );\r\n\r\n        let singleUser = response.data.filter((val) => {\r\n          return val.employeeObjID && val.employeeObjID.Email === empMail;\r\n        });\r\n\r\n        setAttendanceData(() => {\r\n          return singleUser.length > 0 ? singleUser[0] : null;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    handleFetchAttendance();\r\n  }, [employeeId, empMail]);\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      <div className=\"d-flex gap-3 justify-content-between\">\r\n        {/* <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  <p>\r\n                    🪪 ({employee.empID}) {employee.FirstName}\r\n                  </p>\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div> */}\r\n        {/* <button\r\n          disabled={!employeeId}\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \".5rem\" }}\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          <MdOutlineRefresh\r\n            className={`fs-4 ${isButtonClicked ? \"rotate\" : \"\"}`}\r\n          />{\" \"}\r\n          Get\r\n        </button> */}\r\n      </div>\r\n      <h1>Attendance List</h1>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SelfAttendance);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport Moment from \"moment\";\r\nimport SelfAttendance from \"./SelfAttendance\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nfunction Attendance(props) {\r\n  const [empName, setEmpName] = useState(null);\r\n\r\n  const {\r\n    employees,\r\n    setEmployees,\r\n    selectedEmployee,\r\n    setSelectedEmployee,\r\n    attencenceID,\r\n    setAttencenceID,\r\n    message,\r\n    setMessage\r\n  } = useContext(AttendanceContext);\r\n\r\n  useEffect(() => {\r\n    const loadEmployeeData = async (email) => {\r\n      await axios\r\n        .get(`${BASE_URL}/api/employee`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((response) => {\r\n          // Ensure that response.data is an array\r\n          let hr = response.data.filter((val) => {\r\n            return val.Account === 2;\r\n          });\r\n          setEmployees(hr);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    loadEmployeeData();\r\n  }, []);\r\n  // hello\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/personal-info/` + localStorage.getItem(\"_id\"),\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        console.log(response.data.FirstName);\r\n        setEmpName(response.data.FirstName);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  // hello\r\n  const handleUserChange = (employeeID) => {\r\n    const selectedEmployee = employees.find(\r\n      (employee) => employee._id === employeeID\r\n    );\r\n\r\n    if (selectedEmployee) {\r\n      setAttencenceID(selectedEmployee.attendanceObjID);\r\n      setSelectedEmployee(employeeID);\r\n      getMessage(employeeID);\r\n    }\r\n  };\r\n\r\n  const getMessage = async (employeeID) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeID}`\r\n      );\r\n      const lastEntry = response.data[response.data.length - 1];\r\n\r\n      if (lastEntry) {\r\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n      } else {\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n      // console.log(val.FirstName, empName);\r\n    });\r\n    console.log(data);\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select a user\");\r\n        return;\r\n      }\r\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n      const currentTime = Moment().format(\"LT\");\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        loginTime: [currentTime],\r\n        loginTimeMs: [currentTimeMs],\r\n        status: \"Login\"\r\n      });\r\n      setMessage(\"Login time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording login time:\", error);\r\n      setMessage(\"Error recording login time\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n      const currentTime = Moment().format(\"HH:mm:ss\");\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        logoutTime: [currentTime],\r\n        logoutTimeMs: [currentTimeMs],\r\n        status: \"Logout\"\r\n      });\r\n      setMessage(\"Logout time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording logout time:\", error);\r\n      setMessage(\"Error recording logout time\");\r\n    }\r\n  };\r\n\r\n  const handleResume = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().format(\"HH:mm:ss\");\r\n        const URcurrentTimeMs = new Date().getTime();\r\n        const currentTimeMs = Math.round(URcurrentTimeMs);\r\n\r\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n          employeeId: selectedEmployee,\r\n          year: new Date().getFullYear(),\r\n          month: new Date().getMonth() + 1,\r\n          date: new Date().getDate(),\r\n          ResumeTime: [currentTime],\r\n          resumeTimeMS: [currentTimeMs],\r\n          status: \"Login\"\r\n        });\r\n\r\n        setMessage(\"Resumed time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording resume time:\", error);\r\n        setMessage(\"Error recording resume time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBreak = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      console.log(email);\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().format(\"HH:mm:ss\");\r\n        const URcurrentTimeMs = new Date().getTime();\r\n        const currentTimeMs = Math.round(URcurrentTimeMs);\r\n\r\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n          employeeId: selectedEmployee,\r\n          year: new Date().getFullYear(),\r\n          month: new Date().getMonth() + 1,\r\n          date: new Date().getDate(),\r\n          breakTime: [currentTime],\r\n          breakTimeMs: [currentTimeMs],\r\n          status: \"Break\"\r\n        });\r\n        setMessage(\"Break time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording break time:\", error);\r\n        setMessage(\"Error recording break time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  return (\r\n    <div className=\"App row\">\r\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n      <div\r\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n        style={{ height: \"fit-content\" }}\r\n      >\r\n        <input value={empName} style={{ display: \"none\" }} />\r\n\r\n        <div className=\"d-flex gap-3\">\r\n          <button className=\"btn btn-success\" onClick={handleLogin}>\r\n            Mark Attendance\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n          <div className=\"d-flex gap-3\">\r\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n              Break\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleResume}>\r\n              Resume\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"view\">\r\n        <SelfAttendance />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Attendance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineMore } from \"react-icons/ai\";\r\nimport { RxCaretSort, RxCounterClockwiseClock } from \"react-icons/rx\";\r\nimport { MdNearbyError } from \"react-icons/md\";\r\nimport {\r\n  HiOutlineLogin,\r\n  HiOutlineLogout,\r\n  HiStatusOnline\r\n} from \"react-icons/hi\";\r\nimport { FaUserClock } from \"react-icons/fa6\";\r\nimport { IoCheckmarkDoneOutline } from \"react-icons/io5\";\r\nimport { SiMicrosoftexcel } from \"react-icons/si\";\r\nimport * as XLSX from \"xlsx\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst TodaysAttendance = () => {\r\n  const [activeCategory, setActiveCategory] = useState(null);\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [sortField, setSortField] = useState(null);\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    const fetchAttendanceData = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/api/todays-attendance`);\r\n        setAttendanceData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching today's attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAttendanceData();\r\n  }, []);\r\n\r\n  const today = new Date();\r\n  const yyyy = today.getFullYear();\r\n  let mm = today.getMonth() + 1;\r\n  let dd = today.getDate();\r\n  if (dd < 10) dd = \"0\" + dd;\r\n  if (mm < 10) mm = \"0\" + mm;\r\n  let dayCurrent = today.getDay();\r\n\r\n  const getAttendanceMark = (user) => {\r\n    // Check if user and attendance are defined\r\n    if (!user || !user.attendance) {\r\n      return \"Absent\";\r\n    }\r\n\r\n    const loginTime = user.attendance.loginTime && user.attendance.loginTime[0];\r\n\r\n    // Check if loginTime exists and is a string\r\n    if (typeof loginTime !== \"string\") {\r\n      return \"Absent\";\r\n    }\r\n\r\n    // Split loginTime only if it exists\r\n    const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n\r\n    // Check if loginHour and loginMinute are valid numbers\r\n    if (isNaN(loginHour) || isNaN(loginMinute)) {\r\n      return \"Absent\";\r\n    }\r\n\r\n    // Check login time against criteria\r\n    if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n      return \"Half Day\";\r\n    } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n      return \"Late\";\r\n    }\r\n\r\n    // If loginTime exists, consider the user present, otherwise absent\r\n    return loginTime ? \"Present\" : \"Absent\";\r\n  };\r\n\r\n  const status = (s) => {\r\n    const days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n    return days[s];\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    setSortField(field);\r\n    setSortOrder((prevOrder) =>\r\n      sortField === field ? (prevOrder === \"asc\" ? \"desc\" : \"asc\") : \"asc\"\r\n    );\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const renderSortIcon = (field) => {\r\n    if (sortField === field) {\r\n      return sortOrder === \"asc\" ? \"▴\" : \"▾\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sortedAndFilteredData = attendanceData\r\n    .slice()\r\n    .filter((item) =>\r\n      item.FirstName.toLowerCase().includes(searchQuery.toLowerCase())\r\n    )\r\n    .sort((a, b) => {\r\n      if (sortField) {\r\n        const aValue = a[sortField];\r\n        const bValue = b[sortField];\r\n\r\n        if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n          return sortOrder === \"asc\"\r\n            ? aValue.localeCompare(bValue)\r\n            : bValue.localeCompare(aValue);\r\n        } else {\r\n          return sortOrder === \"asc\" ? aValue - bValue : bValue - aValue;\r\n        }\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  function convertMinutesToHoursAndMinutes(minutes) {\r\n    // Calculate hours\r\n    var hours = Math.floor(minutes / 60);\r\n    // Calculate remaining minutes\r\n    var remainingMinutes = minutes % 60;\r\n\r\n    return hours + \" Hrs \" + remainingMinutes + \" Min\";\r\n  }\r\n\r\n  const exportToExcel = () => {\r\n    const dataToExport = attendanceData.map((user) => ({\r\n      \"Employee ID\": user.empID.toUpperCase(),\r\n      \"Employee Name\":\r\n        user.FirstName.toUpperCase() + \" \" + user.LastName.toUpperCase(),\r\n      \"Login Time (24Hrs)\": user.attendance\r\n        ? user.attendance.loginTime[0]\r\n        : \"--\",\r\n      \"Logout Time (24Hrs)\": user.attendance\r\n        ? user.attendance.logoutTime[user.attendance.logoutTime.length - 1]\r\n        : \"--\",\r\n      \"Total Login Time\": user.attendance\r\n        ? convertMinutesToHoursAndMinutes(\r\n            user.attendance.totalLogAfterBreak\r\n          ).toUpperCase()\r\n        : \"--\",\r\n      Mark: getAttendanceMark(user).toUpperCase()\r\n    }));\r\n\r\n    const worksheet = XLSX.utils.json_to_sheet(dataToExport);\r\n\r\n    // Add the caption at the top of the worksheet\r\n    XLSX.utils.sheet_add_aoa(worksheet, [[\"Kasper\", \"123 New Delhi 110044\"]], {\r\n      origin: -1\r\n    });\r\n\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Attendance\");\r\n\r\n    XLSX.writeFile(workbook, \"attendance.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid pb-5\">\r\n      <div className=\"d-flex justify-content-between py-3\">\r\n        <div>\r\n          <h4 className=\"fw-bolder my-auto text-success mb-2\">\r\n            Today's Attendance\r\n          </h4>\r\n          <div className=\"d-flex gap-2\">\r\n            <input\r\n              value={searchQuery}\r\n              onChange={handleInputChange}\r\n              type=\"search\"\r\n              className=\"form-control rounded-5\"\r\n              placeholder=\"Search by employee name\"\r\n            />{\" \"}\r\n            <button\r\n              style={{ whiteSpace: \"pre\" }}\r\n              className=\"btn p-0 px-3 shadow-sm rounded-5\"\r\n              onClick={exportToExcel}\r\n            >\r\n              {\" \"}\r\n              <SiMicrosoftexcel className=\"text-success\" /> Export XLSX\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <span className=\"p-0 fw-bolder fs-6 text-muted d-flex flex-column \">\r\n          <span className=\"m-0 p-0 fs-6 text-center bg-white shadow-sm rounded-5 px-2\">\r\n            {\" \"}\r\n            <span className=\"fw-bold\">{dd}</span>-\r\n            <span className=\"fw-bold\">{mm}</span>-\r\n            <span className=\"fw-bold\">{yyyy}</span>\r\n          </span>\r\n          <span className=\"text-uppercase m-0 p-0 text-primary fs-4 text-center\">\r\n            {status(dayCurrent)}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr style={{ position: \"sticky\", top: \"0\", zIndex: \"1\" }}>\r\n            <th\r\n              onClick={() => handleSort(\"FirstName\")}\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n            >\r\n              <RxCaretSort /> Employee {renderSortIcon(\"FirstName\")}\r\n            </th>\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n              className=\"text-center\"\r\n            >\r\n              {\" \"}\r\n              <HiOutlineLogin /> Login Time{\" \"}\r\n            </th>\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n              className=\"text-center\"\r\n            >\r\n              {\" \"}\r\n              Logout Time <HiOutlineLogout />{\" \"}\r\n            </th>\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n              className=\"text-center\"\r\n            >\r\n              {\" \"}\r\n              <RxCounterClockwiseClock /> Log Count{\" \"}\r\n            </th>\r\n            {/* <th style={{ background: \"var(--primaryDashColorDark)\", color: \"var(--primaryDashMenuColor)\" }} className=\"text-center\"> Total Break </th> */}\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n              className=\"text-center\"\r\n            >\r\n              {\" \"}\r\n              <FaUserClock /> Total Login{\" \"}\r\n            </th>\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n              className=\"text-center\"\r\n            >\r\n              {\" \"}\r\n              Status <HiStatusOnline />\r\n            </th>\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n              className=\"text-center\"\r\n            >\r\n              {\" \"}\r\n              <IoCheckmarkDoneOutline /> Mark{\" \"}\r\n            </th>\r\n            {/* <th style={{ background: \"var(--primaryDashColorDark)\", color: \"var(--primaryDashMenuColor)\" }} className=\"text-center\"> Break Count</th> */}\r\n            <th\r\n              style={{\r\n                background: \"var(--primaryDashColorDark)\",\r\n                color: \"var(--primaryDashMenuColor)\"\r\n              }}\r\n            ></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedAndFilteredData.length > 0 ? (\r\n            sortedAndFilteredData.map((user) => {\r\n              const mark = getAttendanceMark(user);\r\n              return (\r\n                <tr style={{ position: \"sticky\", top: \"0\" }} key={user.userId}>\r\n                  <td className=\"fw-bold\">\r\n                    <div className=\"d-flex w-100 align-items-center gap-2\">\r\n                      <div\r\n                        style={{\r\n                          height: \"43px\",\r\n                          width: \"43px\",\r\n                          overflow: \"hidden\"\r\n                        }}\r\n                      >\r\n                        <img\r\n                          style={{\r\n                            height: \"100%\",\r\n                            width: \"100%\",\r\n                            objectFit: \"cover\",\r\n                            overflow: \"hidden\",\r\n                            borderRadius: \"50%\"\r\n                          }}\r\n                          src=\"https://tse3.mm.bing.net/th?id=OIP.-d8GY5axNJZYoXsNOUJ4iwAAAA&pid=Api&P=0&h=180\"\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <p\r\n                          style={{ fontSize: \".75rem\" }}\r\n                          className=\"p-0 m-0 w-100 text-muted\"\r\n                        >\r\n                          {user.empID}\r\n                        </p>\r\n                        <p\r\n                          style={{ fontSize: \".80rem\" }}\r\n                          className=\"p-0 m-0 w-100 text-uppercase\"\r\n                        >\r\n                          {user.FirstName} {user.LastName}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{ verticalAlign: \"middle\" }}\r\n                    className=\"text-uppercase text-center\"\r\n                  >\r\n                    {user.attendance ? user.attendance.loginTime[0] : \"--\"}\r\n                  </td>\r\n                  <td\r\n                    style={{ verticalAlign: \"middle\" }}\r\n                    className=\"text-uppercase text-center\"\r\n                  >\r\n                    {user.attendance\r\n                      ? user.attendance.logoutTime[\r\n                          user.attendance.logoutTime.length - 1\r\n                        ]\r\n                      : \"--\"}\r\n                  </td>\r\n                  <td\r\n                    style={{ verticalAlign: \"middle\" }}\r\n                    className=\"text-uppercase text-center\"\r\n                  >\r\n                    {user.attendance ? user.attendance.logoutTime.length : \"--\"}\r\n                  </td>\r\n                  {/* <td style={{ verticalAlign: \"middle\", textAlign: 'center' }}><span >{user.attendance ? user.attendance.totalBreak : \"--\"}</span></td> */}\r\n                  <td style={{ verticalAlign: \"middle\", textAlign: \"center\" }}>\r\n                    {user.attendance\r\n                      ? convertMinutesToHoursAndMinutes(\r\n                          user.attendance.totalLogAfterBreak\r\n                        )\r\n                      : null}\r\n                  </td>\r\n                  <td\r\n                    className=\"text-capitalize text-center\"\r\n                    style={{ verticalAlign: \"middle\" }}\r\n                  >\r\n                    {user.attendance ? user.attendance.status : \"--\"}\r\n                  </td>\r\n                  <td\r\n                    style={{ verticalAlign: \"middle\" }}\r\n                    className=\"text-center\"\r\n                  >\r\n                    <span\r\n                      style={{ fontSize: \".8rem\" }}\r\n                      className={`py-1 px-3 rounded-5 shadow-sm fw-bold ${\r\n                        mark === \"Present\"\r\n                          ? \"bg-success text-white\"\r\n                          : mark === \"Late\"\r\n                          ? \"bg-info text-white\"\r\n                          : mark === \"Half Day\"\r\n                          ? \"bg-warning text-white\"\r\n                          : \"bg-danger text-white\"\r\n                      }`}\r\n                    >\r\n                      {mark}\r\n                    </span>\r\n                  </td>\r\n                  {/* <td style={{ verticalAlign: \"middle\", textAlign: 'center' }} className='text-center'>{user.attendance ? user.attendance.breakTime.length : '--'}</td> */}\r\n                  <td\r\n                    style={{ zIndex: \"1\", verticalAlign: \"middle\" }}\r\n                    className=\"text-center\"\r\n                  >\r\n                    <button\r\n                      onMouseEnter={() => setActiveCategory(user)}\r\n                      onMouseLeave={() => setActiveCategory(null)}\r\n                      className=\" btn p-0 fw-bold fs-5 position-relative\"\r\n                    >\r\n                      <AiOutlineMore />{\" \"}\r\n                      <span\r\n                        style={{\r\n                          display: activeCategory === user ? \"flex\" : \"none\"\r\n                        }}\r\n                      >\r\n                        <Link\r\n                          to=\"/hr/viewAttenDance\"\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            whiteSpace: \"pre\",\r\n                            right: \"70%\",\r\n                            bottom: \"-50%\",\r\n                            zIndex: \"2\"\r\n                          }}\r\n                          className=\"shadow px-2 py-0  fs-6 bg-white rounded-5\"\r\n                        >\r\n                          Detailed\r\n                        </Link>\r\n                      </span>\r\n                    </button>{\" \"}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td\r\n                colSpan=\"10\"\r\n                style={{ height: \"30vh\", width: \"94%\", position: \"absolute\" }}\r\n                className=\"d-flex flex-column justify-content-center align-items-center gap-1\"\r\n              >\r\n                <span className=\"fw-bolder \" style={{ fontSize: \"2rem\" }}>\r\n                  <MdNearbyError\r\n                    className=\"text-danger\"\r\n                    style={{ fontSize: \"2.3rem\" }}\r\n                  />{\" \"}\r\n                  OOPS!\r\n                </span>\r\n                <h6 className=\"p-0 m-0\">Record not found.</h6>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodaysAttendance;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { AiOutlineMore } from \"react-icons/ai\";\r\n// import { RxCaretSort, RxCounterClockwiseClock } from \"react-icons/rx\";\r\n// import { MdNearbyError } from \"react-icons/md\";\r\n// import {\r\n//   HiOutlineLogin,\r\n//   HiOutlineLogout,\r\n//   HiStatusOnline\r\n// } from \"react-icons/hi\";\r\n// import { FaUserClock } from \"react-icons/fa6\";\r\n// import { IoCheckmarkDoneOutline } from \"react-icons/io5\";\r\n// import { SiMicrosoftexcel } from \"react-icons/si\";\r\n// // import * as XLSX from 'xlsx';\r\n\r\n// const TodaysAttendance = () => {\r\n//   const [activeCategory, setActiveCategory] = useState(null);\r\n//   const [attendanceData, setAttendanceData] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [sortField, setSortField] = useState(null);\r\n//   const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchAttendanceData = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           \"http://localhost:4000/api/todays-attendance\"\r\n//         );\r\n//         setAttendanceData(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching today's attendance data:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchAttendanceData();\r\n//   }, []);\r\n\r\n//   const today = new Date();\r\n//   const yyyy = today.getFullYear();\r\n//   let mm = today.getMonth() + 1;\r\n//   let dd = today.getDate();\r\n//   if (dd < 10) dd = \"0\" + dd;\r\n//   if (mm < 10) mm = \"0\" + mm;\r\n//   let dayCurrent = today.getDay();\r\n\r\n//   const getAttendanceMark = (user) => {\r\n//     // Check if user and attendance are defined\r\n//     if (!user || !user.attendance) {\r\n//       return \"Absent\";\r\n//     }\r\n\r\n//     const loginTime = user.attendance.loginTime && user.attendance.loginTime[0];\r\n\r\n//     // Check if loginTime exists and is a string\r\n//     if (typeof loginTime !== \"string\") {\r\n//       return \"Absent\";\r\n//     }\r\n\r\n//     // Split loginTime only if it exists\r\n//     const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n\r\n//     // Check if loginHour and loginMinute are valid numbers\r\n//     if (isNaN(loginHour) || isNaN(loginMinute)) {\r\n//       return \"Absent\";\r\n//     }\r\n\r\n//     // Check login time against criteria\r\n//     if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n//       return \"Half Day\";\r\n//     } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//       return \"Late\";\r\n//     }\r\n\r\n//     // If loginTime exists, consider the user present, otherwise absent\r\n//     return loginTime ? \"Present\" : \"Absent\";\r\n//   };\r\n\r\n//   const status = (s) => {\r\n//     const days = [\r\n//       \"Sunday\",\r\n//       \"Monday\",\r\n//       \"Tuesday\",\r\n//       \"Wednesday\",\r\n//       \"Thursday\",\r\n//       \"Friday\",\r\n//       \"Saturday\"\r\n//     ];\r\n//     return days[s];\r\n//   };\r\n\r\n//   const handleSort = (field) => {\r\n//     setSortField(field);\r\n//     setSortOrder((prevOrder) =>\r\n//       sortField === field ? (prevOrder === \"asc\" ? \"desc\" : \"asc\") : \"asc\"\r\n//     );\r\n//   };\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setSearchQuery(event.target.value);\r\n//   };\r\n\r\n//   const renderSortIcon = (field) => {\r\n//     if (sortField === field) {\r\n//       return sortOrder === \"asc\" ? \"▴\" : \"▾\";\r\n//     }\r\n//     return null;\r\n//   };\r\n\r\n//   const sortedAndFilteredData = attendanceData\r\n//     .slice()\r\n//     .filter((item) =>\r\n//       item.FirstName.toLowerCase().includes(searchQuery.toLowerCase())\r\n//     )\r\n//     .sort((a, b) => {\r\n//       if (sortField) {\r\n//         const aValue = a[sortField];\r\n//         const bValue = b[sortField];\r\n\r\n//         if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n//           return sortOrder === \"asc\"\r\n//             ? aValue.localeCompare(bValue)\r\n//             : bValue.localeCompare(aValue);\r\n//         } else {\r\n//           return sortOrder === \"asc\" ? aValue - bValue : bValue - aValue;\r\n//         }\r\n//       }\r\n//       return 0;\r\n//     });\r\n\r\n//   function convertMinutesToHoursAndMinutes(minutes) {\r\n//     // Calculate hours\r\n//     var hours = Math.floor(minutes / 60);\r\n//     // Calculate remaining minutes\r\n//     var remainingMinutes = minutes % 60;\r\n\r\n//     return hours + \" Hrs \" + remainingMinutes + \" Min\";\r\n//   }\r\n\r\n//   // const exportToExcel = () => {\r\n//   //   const dataToExport = attendanceData.map(user => ({\r\n//   //     \"Employee ID\": user.empID.toUpperCase(),\r\n//   //     \"Employee Name\": user.FirstName.toUpperCase() + \" \" + user.LastName.toUpperCase(),\r\n//   //     \"Login Time (24Hrs)\": user.attendance ? user.attendance.loginTime[0] : \"--\",\r\n//   //     \"Logout Time (24Hrs)\": user.attendance ? user.attendance.logoutTime[user.attendance.logoutTime.length - 1] : \"--\",\r\n//   //     \"Total Login Time\": user.attendance ? convertMinutesToHoursAndMinutes(user.attendance.totalLogAfterBreak).toUpperCase() : \"--\",\r\n//   //     \"Mark\": getAttendanceMark(user).toUpperCase()\r\n//   //   }));\r\n\r\n//   //   const worksheet = XLSX.utils.json_to_sheet(dataToExport);\r\n\r\n//   //   // Add the caption at the top of the worksheet\r\n//   //   XLSX.utils.sheet_add_aoa(worksheet, [[\"Kasper\", \"123 New Delhi 110044\"]], { origin: -1 });\r\n\r\n//   //   const workbook = XLSX.utils.book_new();\r\n//   //   XLSX.utils.book_append_sheet(workbook, worksheet, \"Attendance\");\r\n\r\n//   //   XLSX.writeFile(workbook, \"attendance.xlsx\");\r\n//   // };\r\n\r\n//   return (\r\n//     <div className=\"container-fluid pb-5\">\r\n//       <div className=\"d-flex justify-content-between py-3\">\r\n//         <div>\r\n//           <h4 className=\"fw-bolder my-auto text-success mb-2\">\r\n//             Today's Attendance\r\n//           </h4>\r\n//           <div className=\"d-flex gap-2\">\r\n//             <input\r\n//               value={searchQuery}\r\n//               onChange={handleInputChange}\r\n//               type=\"search\"\r\n//               className=\"form-control rounded-5\"\r\n//               placeholder=\"Search by employee name\"\r\n//             />{\" \"}\r\n//             {/* <button\r\n//               style={{ whiteSpace: \"pre\" }}\r\n//               className=\"btn p-0 px-3 shadow-sm rounded-5\"\r\n//               onClick={exportToExcel}\r\n//             >\r\n//               {\" \"}\r\n//               <SiMicrosoftexcel className=\"text-success\" /> Export XLSX\r\n//             </button> */}\r\n//           </div>\r\n//         </div>\r\n//         <span className=\"p-0 fw-bolder fs-6 text-muted d-flex flex-column \">\r\n//           <span className=\"m-0 p-0 fs-6 text-center bg-white shadow-sm rounded-5 px-2\">\r\n//             {\" \"}\r\n//             <span className=\"fw-bold\">{dd}</span>-\r\n//             <span className=\"fw-bold\">{mm}</span>-\r\n//             <span className=\"fw-bold\">{yyyy}</span>\r\n//           </span>\r\n//           <span className=\"text-uppercase m-0 p-0 text-primary fs-4 text-center\">\r\n//             {status(dayCurrent)}\r\n//           </span>\r\n//         </span>\r\n//       </div>\r\n//       <table className=\"table\">\r\n//         <thead>\r\n//           <tr style={{ position: \"sticky\", top: \"0\", zIndex: \"1\" }}>\r\n//             <th\r\n//               onClick={() => handleSort(\"FirstName\")}\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//             >\r\n//               <RxCaretSort /> Employee {renderSortIcon(\"FirstName\")}\r\n//             </th>\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//               className=\"text-center\"\r\n//             >\r\n//               {\" \"}\r\n//               <HiOutlineLogin /> Login Time{\" \"}\r\n//             </th>\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//               className=\"text-center\"\r\n//             >\r\n//               {\" \"}\r\n//               Logout Time <HiOutlineLogout />{\" \"}\r\n//             </th>\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//               className=\"text-center\"\r\n//             >\r\n//               {\" \"}\r\n//               <RxCounterClockwiseClock /> Log Count{\" \"}\r\n//             </th>\r\n//             {/* <th style={{ background: \"var(--primaryDashColorDark)\", color: \"var(--primaryDashMenuColor)\" }} className=\"text-center\"> Total Break </th> */}\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//               className=\"text-center\"\r\n//             >\r\n//               {\" \"}\r\n//               <FaUserClock /> Total Login{\" \"}\r\n//             </th>\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//               className=\"text-center\"\r\n//             >\r\n//               {\" \"}\r\n//               Status <HiStatusOnline />\r\n//             </th>\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//               className=\"text-center\"\r\n//             >\r\n//               {\" \"}\r\n//               <IoCheckmarkDoneOutline /> Mark{\" \"}\r\n//             </th>\r\n//             {/* <th style={{ background: \"var(--primaryDashColorDark)\", color: \"var(--primaryDashMenuColor)\" }} className=\"text-center\"> Break Count</th> */}\r\n//             <th\r\n//               style={{\r\n//                 background: \"var(--primaryDashColorDark)\",\r\n//                 color: \"var(--primaryDashMenuColor)\"\r\n//               }}\r\n//             ></th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {sortedAndFilteredData.length > 0 ? (\r\n//             sortedAndFilteredData.map((user) => {\r\n//               const mark = getAttendanceMark(user);\r\n//               return (\r\n//                 <tr style={{ position: \"sticky\", top: \"0\" }} key={user.userId}>\r\n//                   <td className=\"fw-bold\">\r\n//                     <div className=\"d-flex w-100 align-items-center gap-2\">\r\n//                       <div\r\n//                         style={{\r\n//                           height: \"43px\",\r\n//                           width: \"43px\",\r\n//                           overflow: \"hidden\"\r\n//                         }}\r\n//                       >\r\n//                         <img\r\n//                           style={{\r\n//                             height: \"100%\",\r\n//                             width: \"100%\",\r\n//                             objectFit: \"cover\",\r\n//                             overflow: \"hidden\",\r\n//                             borderRadius: \"50%\"\r\n//                           }}\r\n//                           src=\"https://tse3.mm.bing.net/th?id=OIP.-d8GY5axNJZYoXsNOUJ4iwAAAA&pid=Api&P=0&h=180\"\r\n//                           alt=\"\"\r\n//                         />\r\n//                       </div>\r\n//                       <div>\r\n//                         <p\r\n//                           style={{ fontSize: \".75rem\" }}\r\n//                           className=\"p-0 m-0 w-100 text-muted\"\r\n//                         >\r\n//                           {user.empID}\r\n//                         </p>\r\n//                         <p\r\n//                           style={{ fontSize: \".80rem\" }}\r\n//                           className=\"p-0 m-0 w-100 text-uppercase\"\r\n//                         >\r\n//                           {user.FirstName} {user.LastName}\r\n//                         </p>\r\n//                       </div>\r\n//                     </div>\r\n//                   </td>\r\n//                   <td\r\n//                     style={{ verticalAlign: \"middle\" }}\r\n//                     className=\"text-uppercase text-center\"\r\n//                   >\r\n//                     {user.attendance ? user.attendance.loginTime[0] : \"--\"}\r\n//                   </td>\r\n//                   <td\r\n//                     style={{ verticalAlign: \"middle\" }}\r\n//                     className=\"text-uppercase text-center\"\r\n//                   >\r\n//                     {user.attendance\r\n//                       ? user.attendance.logoutTime[\r\n//                           user.attendance.logoutTime.length - 1\r\n//                         ]\r\n//                       : \"--\"}\r\n//                   </td>\r\n//                   <td\r\n//                     style={{ verticalAlign: \"middle\" }}\r\n//                     className=\"text-uppercase text-center\"\r\n//                   >\r\n//                     {user.attendance ? user.attendance.logoutTime.length : \"--\"}\r\n//                   </td>\r\n//                   {/* <td style={{ verticalAlign: \"middle\", textAlign: 'center' }}><span >{user.attendance ? user.attendance.totalBreak : \"--\"}</span></td> */}\r\n//                   <td style={{ verticalAlign: \"middle\", textAlign: \"center\" }}>\r\n//                     {user.attendance\r\n//                       ? convertMinutesToHoursAndMinutes(\r\n//                           user.attendance.totalLogAfterBreak\r\n//                         )\r\n//                       : null}\r\n//                   </td>\r\n//                   <td\r\n//                     className=\"text-capitalize text-center\"\r\n//                     style={{ verticalAlign: \"middle\" }}\r\n//                   >\r\n//                     {user.attendance ? user.attendance.status : \"--\"}\r\n//                   </td>\r\n//                   <td\r\n//                     style={{ verticalAlign: \"middle\" }}\r\n//                     className=\"text-center\"\r\n//                   >\r\n//                     <span\r\n//                       style={{ fontSize: \".8rem\" }}\r\n//                       className={`py-1 px-3 rounded-5 shadow-sm fw-bold ${\r\n//                         mark === \"Present\"\r\n//                           ? \"bg-success text-white\"\r\n//                           : mark === \"Late\"\r\n//                           ? \"bg-info text-white\"\r\n//                           : mark === \"Half Day\"\r\n//                           ? \"bg-warning text-white\"\r\n//                           : \"bg-danger text-white\"\r\n//                       }`}\r\n//                     >\r\n//                       {mark}\r\n//                     </span>\r\n//                   </td>\r\n//                   {/* <td style={{ verticalAlign: \"middle\", textAlign: 'center' }} className='text-center'>{user.attendance ? user.attendance.breakTime.length : '--'}</td> */}\r\n//                   <td\r\n//                     style={{ zIndex: \"1\", verticalAlign: \"middle\" }}\r\n//                     className=\"text-center\"\r\n//                   >\r\n//                     <button\r\n//                       onMouseEnter={() => setActiveCategory(user)}\r\n//                       onMouseLeave={() => setActiveCategory(null)}\r\n//                       className=\" btn p-0 fw-bold fs-5 position-relative\"\r\n//                     >\r\n//                       <AiOutlineMore />{\" \"}\r\n//                       <span\r\n//                         style={{\r\n//                           display: activeCategory === user ? \"flex\" : \"none\"\r\n//                         }}\r\n//                       >\r\n//                         <Link\r\n//                           to=\"/hr/viewAttenDance\"\r\n//                           style={{\r\n//                             position: \"absolute\",\r\n//                             whiteSpace: \"pre\",\r\n//                             right: \"70%\",\r\n//                             bottom: \"-50%\",\r\n//                             zIndex: \"2\"\r\n//                           }}\r\n//                           className=\"shadow px-2 py-0  fs-6 bg-white rounded-5\"\r\n//                         >\r\n//                           Detailed\r\n//                         </Link>\r\n//                       </span>\r\n//                     </button>{\" \"}\r\n//                   </td>\r\n//                 </tr>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <tr>\r\n//               <td\r\n//                 colSpan=\"10\"\r\n//                 style={{ height: \"30vh\", width: \"94%\", position: \"absolute\" }}\r\n//                 className=\"d-flex flex-column justify-content-center align-items-center gap-1\"\r\n//               >\r\n//                 <span className=\"fw-bolder \" style={{ fontSize: \"2rem\" }}>\r\n//                   <MdNearbyError\r\n//                     className=\"text-danger\"\r\n//                     style={{ fontSize: \"2.3rem\" }}\r\n//                   />{\" \"}\r\n//                   OOPS!\r\n//                 </span>\r\n//                 <h6 className=\"p-0 m-0\">Record not found.</h6>\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TodaysAttendance;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nfunction ManualAttendance() {\r\n  // const [employees, setEmployees] = useState([]);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  // const [attencenceID, setAttencenceID] = useState(\"\");\r\n  // const [message, setMessage] = useState(\"\");\r\n\r\n  const {\r\n    employees,\r\n    setEmployees,\r\n    selectedEmployee,\r\n    setSelectedEmployee,\r\n    attencenceID,\r\n    setAttencenceID,\r\n    message,\r\n    setMessage\r\n  } = useContext(AttendanceContext);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/api/employee`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        });\r\n        setEmployees(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleUserChange = (employeeID) => {\r\n    const selectedEmployee = employees.find(\r\n      (employee) => employee._id === employeeID\r\n    );\r\n\r\n    if (selectedEmployee) {\r\n      setAttencenceID(selectedEmployee.attendanceObjID);\r\n      setSelectedEmployee(employeeID);\r\n      getMessage(employeeID);\r\n    }\r\n  };\r\n\r\n  const getMessage = async (employeeID) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeID}`\r\n      );\r\n      const lastEntry = response.data[response.data.length - 1];\r\n\r\n      if (lastEntry) {\r\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n      } else {\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      if (!selectedEmployee) {\r\n        setMessage(\"Please select a user\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = new Date().toLocaleTimeString();\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        loginTime: [currentTime],\r\n        status: \"login\"\r\n      });\r\n      setMessage(\"Login time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording login time:\", error);\r\n      setMessage(\"Error recording login time\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      if (!selectedEmployee) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = new Date().toLocaleTimeString();\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        logoutTime: [currentTime],\r\n        status: \"logout\"\r\n      });\r\n      setMessage(\"Logout time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording logout time:\", error);\r\n      setMessage(\"Error recording logout time\");\r\n    }\r\n  };\r\n\r\n  const handleResume = async () => {\r\n    try {\r\n      if (!selectedEmployee) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = new Date().toLocaleTimeString();\r\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        ResumeTime: [currentTime],\r\n        resumeTimeMS: [currentTimeMs],\r\n        status: \"resume\"\r\n      });\r\n\r\n      setMessage(\"Resumed time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording resume time:\", error);\r\n      setMessage(\"Error recording resume time\");\r\n    }\r\n  };\r\n\r\n  const handleBreak = async () => {\r\n    try {\r\n      if (!selectedEmployee) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = new Date().toLocaleTimeString();\r\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        breakTime: [currentTime],\r\n        breakTimeMs: [currentTimeMs],\r\n        status: \"break\"\r\n      });\r\n      setMessage(\"Break time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording break time:\", error);\r\n      setMessage(\"Error recording break time\");\r\n    }\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  return (\r\n    <div className=\"App row\">\r\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n      <div\r\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n        style={{ height: \"fit-content\" }}\r\n      >\r\n        <select\r\n          className=\"form-select mx-2 w-25 \"\r\n          onChange={(e) => handleUserChange(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select User --</option>\r\n          {employees.map((employee) => (\r\n            <option key={employee._id} value={employee._id}>\r\n              {employee.FirstName}\r\n              {employee.empID}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"d-flex gap-3\">\r\n          <button className=\"btn btn-success\" onClick={handleLogin}>\r\n            Login\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n          <div className=\"d-flex gap-3\">\r\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n              Break\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleResume}>\r\n              Resume\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManualAttendance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nfunction AttendanceRegister() {\r\n  const currentDate = new Date();\r\n  const currentYear = currentDate.getFullYear();\r\n  const currentMonth = currentDate.getMonth() + 1;\r\n  const [filterMonth, setFilterMonth] = useState(currentMonth);\r\n  const [filterYear, setFilterYear] = useState(currentYear);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [employee, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAttendanceData();\r\n  }, [filterYear, filterMonth]);\r\n\r\n  const fetchAttendanceData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/attendance`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n        }\r\n      });\r\n      setAttendance(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const daysInMonth = new Date(filterYear, filterMonth, 0).getDate();\r\n\r\n  const markAttendance = (loginTime) => {\r\n    if (!loginTime || loginTime.length === 0) {\r\n      return { status: \"--\", color: \"rgba(219, 216, 216, .8)\" };\r\n    } else {\r\n      const loginHour = parseInt(loginTime.split(\":\")[0]);\r\n      const loginMinute = parseInt(loginTime.split(\":\")[1]);\r\n\r\n      if (loginHour < 9 || (loginHour === 9 && loginMinute < 30)) {\r\n        return { status: \"P\", color: \"#6BCB77\" };\r\n      } else if (loginHour === 9 && loginMinute < 45) {\r\n        return { status: \"L\", color: \"#41C9E2\" };\r\n      } else if (loginHour < 14 || (loginHour === 14 && loginMinute === 0)) {\r\n        return { status: \"H\", color: \"#FDA403\" };\r\n      } else {\r\n        return { status: \"A\", color: \"#EF4040\" };\r\n      }\r\n    }\r\n  };\r\n\r\n  const uniqueYears = Array.from(\r\n    new Set(\r\n      attendance.flatMap((employee) => employee.years.map((year) => year.year))\r\n    )\r\n  );\r\n\r\n  const uniqueMonths = Array.from(\r\n    new Set(\r\n      attendance.flatMap((employee) =>\r\n        employee.years\r\n          .filter((year) => year.year === filterYear)\r\n          .flatMap((year) => year.months.map((month) => month.month))\r\n      )\r\n    )\r\n  );\r\n\r\n  const getUserStatusColor = (month) => {\r\n    switch (month) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const calculateTotal = (status) => {\r\n    let total = 0;\r\n    attendance.forEach((employee) => {\r\n      const yearIndex = employee.years.findIndex(\r\n        (year) => year.year === filterYear\r\n      );\r\n      const monthIndex = employee.years[yearIndex]?.months.findIndex(\r\n        (month) => month.month === filterMonth\r\n      );\r\n      const dates = employee.years[yearIndex]?.months[monthIndex]?.dates || [];\r\n      dates.forEach((date) => {\r\n        const loginTime = date.loginTime[0];\r\n        if (markAttendance(loginTime).status === status) {\r\n          total++;\r\n        }\r\n      });\r\n    });\r\n    return total;\r\n  };\r\n\r\n  console.log(attendance[0]);\r\n\r\n  return (\r\n    <div className=\"container-fluid pb-5\">\r\n      <div className=\"d-flex justify-content-between py-3\">\r\n        <h5 className=\"my-auto\">Employee Monthly Attendance</h5>\r\n        <div className=\"d-flex gap-3\">\r\n          <div className=\"\">\r\n            <label>Filter Year</label>\r\n            <select\r\n              className=\"form-select\"\r\n              value={filterYear}\r\n              onChange={(e) => setFilterYear(parseInt(e.target.value))}\r\n            >\r\n              <option value=\"\">--Select Year--</option>\r\n              {uniqueYears\r\n                .sort(function (a, b) {\r\n                  return a - b;\r\n                })\r\n                .map((year, index) => (\r\n                  <option key={index} value={year}>\r\n                    {year}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"\">\r\n            <label>Filter Month</label>\r\n            <select\r\n              className=\"form-select\"\r\n              value={filterMonth}\r\n              onChange={(e) => setFilterMonth(parseInt(e.target.value))}\r\n            >\r\n              <option value=\"\">--Select Month--</option>\r\n              {uniqueMonths\r\n                .sort(function (a, b) {\r\n                  return a - b;\r\n                })\r\n                .map((month, index) => (\r\n                  <option key={index} value={month}>\r\n                    {getUserStatusColor(month)}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          overflow: \"scroll auto\",\r\n          maxHeight: \"80vh\",\r\n          position: \"relative\"\r\n        }}\r\n        className=\"border border-1 employee-attendence-table mt-3\"\r\n      >\r\n        <table className=\"table table-bordered table-striped\">\r\n          <thead>\r\n            <tr style={{ position: \"sticky\", top: \"-2px\" }}>\r\n              <th\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  backgroundColor: \"var(--primaryDashColorDark)\",\r\n                  color: \"var(--primaryDashMenuColor)\",\r\n                  position: \"sticky\",\r\n                  left: \"0\",\r\n                  top: \"0\"\r\n                }}\r\n              >\r\n                S.No\r\n              </th>\r\n              <th\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  backgroundColor: \"var(--primaryDashColorDark)\",\r\n                  color: \"var(--primaryDashMenuColor)\",\r\n                  position: \"sticky\",\r\n                  left: \"0\",\r\n                  top: \"0\"\r\n                }}\r\n              >\r\n                Employee ID\r\n              </th>\r\n              <th\r\n                style={{\r\n                  whiteSpace: \"pre\",\r\n                  backgroundColor: \"var(--primaryDashColorDark)\",\r\n                  color: \"var(--primaryDashMenuColor)\",\r\n                  position: \"sticky\",\r\n                  left: \"-1px\",\r\n                  top: \"0\"\r\n                }}\r\n              >\r\n                Employee Name\r\n              </th>\r\n              {/* Render days of the month */}\r\n              {[...Array(daysInMonth)].map((_, day) => (\r\n                <th\r\n                  style={{\r\n                    background: \"var(--primaryDashColorDark)\",\r\n                    color: \"var(--primaryDashMenuColor)\"\r\n                  }}\r\n                  className=\"text-center\"\r\n                  key={day}\r\n                >\r\n                  {(day + 1).toString().padStart(2, \"0\")}\r\n                </th>\r\n              ))}\r\n              <th\r\n                className=\"text-white\"\r\n                style={{ whiteSpace: \"pre\", backgroundColor: \"#EF4040\" }}\r\n              >\r\n                Total Absent\r\n              </th>\r\n              <th\r\n                className=\"text-white\"\r\n                style={{ whiteSpace: \"pre\", backgroundColor: \"#6BCB77\" }}\r\n              >\r\n                Total Present\r\n              </th>\r\n              <th\r\n                className=\"text-white\"\r\n                style={{ whiteSpace: \"pre\", backgroundColor: \"#41C9E2\" }}\r\n              >\r\n                Total Late\r\n              </th>\r\n              <th\r\n                className=\"text-white\"\r\n                style={{ whiteSpace: \"pre\", backgroundColor: \"#FDA403\" }}\r\n              >\r\n                Total Halfday\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {attendance.map((employee, index) => (\r\n              <tr key={employee.userId}>\r\n                <td className=\"text-center\">\r\n                  {(index + 1).toString().padStart(2, \"0\")}\r\n                </td>\r\n                <td>{employee.employeeObjID.empID}</td>\r\n                <td>\r\n                  {employee.employeeObjID.FirstName}{\" \"}\r\n                  {employee.employeeObjID.LastName}\r\n                </td>\r\n                {/* Calculate attendance for each day */}\r\n                {[...Array(daysInMonth)].map((_, day) => {\r\n                  const yearIndex = uniqueYears.indexOf(filterYear);\r\n                  const monthIndex = uniqueMonths.indexOf(filterMonth);\r\n                  const loginTimeForDay =\r\n                    employee.years[yearIndex]?.months[monthIndex]?.dates[day]\r\n                      ?.loginTime[0];\r\n                  const { status, color } = markAttendance(loginTimeForDay);\r\n                  return (\r\n                    <td\r\n                      className=\"fw-bold\"\r\n                      style={{\r\n                        whiteSpace: \"pre\",\r\n                        backgroundColor: color,\r\n                        color: \"white\"\r\n                      }}\r\n                      key={day}\r\n                    >\r\n                      {status}\r\n                    </td>\r\n                  );\r\n                })}\r\n                <td className=\"text-center\">{calculateTotal(\"Absent\")}</td>\r\n                <td className=\"text-center\">{calculateTotal(\"Present\")}</td>\r\n                <td className=\"text-center\">{calculateTotal(\"Late\")}</td>\r\n                <td className=\"text-center\">{calculateTotal(\"Halfday\")}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AttendanceRegister;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport \"./notification.css\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst Notification = () => {\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedNotification, setSelectedNotification] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const email = localStorage.getItem(\"Email\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setNotification(response.data.Notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"taskNotificationReceived\", () => {\r\n        loadEmployeeData();\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    // Check if all notifications are selected and update the \"Select All\" checkbox accordingly\r\n    setSelectAll(\r\n      notification && selectedNotification.length === notification.length\r\n    );\r\n  }, [selectedNotification, notification]);\r\n\r\n  const addSelectedNotification = (val) => {\r\n    const isChecked = selectedNotification.some(\r\n      (noti) => noti.taskId === val.taskId\r\n    );\r\n\r\n    if (isChecked) {\r\n      setSelectedNotification((prevNotification) =>\r\n        prevNotification.filter((noti) => noti.taskId !== val.taskId)\r\n      );\r\n    } else {\r\n      setSelectedNotification([...selectedNotification, val]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    setSelectAll(!selectAll);\r\n    setSelectedNotification(selectAll ? [] : [...notification]);\r\n  };\r\n  const clearAllHandler = () => {\r\n    if (notification.length > 0) {\r\n      console.log(\"clearALL\");\r\n      axios\r\n        .post(\r\n          `${BASE_URL}/api/selectedNotificationDelete`,\r\n          { email },\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setNotification(response.data.result.Notification);\r\n          socket.emit(\"notificationPageUpdate\", true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const multiNotificationDeleteHandler = () => {\r\n    if (selectedNotification.length > 0) {\r\n      const taskIDArray = selectedNotification.map((val) => val.taskId);\r\n      const data = {\r\n        employeeMail: email,\r\n        tasks: taskIDArray\r\n      };\r\n      if (selectAll) {\r\n        clearAllHandler();\r\n      } else {\r\n        axios\r\n          .post(`${BASE_URL}/api/multiSelectedNotificationDelete`, data, {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          })\r\n          .then((response) => {\r\n            setNotification(response.data.result.Notification);\r\n            setSelectedNotification([]);\r\n            console.log(\"emittted\");\r\n            socket.emit(\"notificationPageUpdate\", true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const notificationDeleteHandler = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .post(\r\n        `${BASE_URL}/api/notificationDeleteHandler/${id}`,\r\n        { email },\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setNotification(response.data.result.Notification);\r\n        setSelectedNotification([]);\r\n        console.log(\"emittted\");\r\n        socket.emit(\"notificationPageUpdate\", true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(notification);\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <form className=\"d-flex col-8 flex-column gap-3\">\r\n          <div>\r\n            <div className=\"p-2\">\r\n              {\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"\"\r\n                id=\"\"\r\n                onChange={toggleSelectAll}\r\n                checked={selectAll}\r\n              />{\" \"}\r\n              <span>Select All</span>\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Select</th>\r\n                  <th scope=\"col\">task Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {notification &&\r\n                  notification.map((val, index) => (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={() => addSelectedNotification(val)}\r\n                          checked={selectedNotification.some(\r\n                            (noti) => noti.taskId === val.taskId\r\n                          )}\r\n                        />\r\n                      </th>\r\n                      <td>{val.taskName}</td>\r\n                      <td>{val.senderMail}</td>\r\n                      {val.status === \"unseen\" ? (\r\n                        <td>Unread</td>\r\n                      ) : (\r\n                        <td>read</td>\r\n                      )}\r\n                      <td>\r\n                        <ImBin\r\n                          onClick={() => notificationDeleteHandler(val.taskId)}\r\n                          className=\"bin\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <button\r\n        className=\"Notification_delete\"\r\n        onClick={multiNotificationDeleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","// MainContent.jsx\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes, Switch } from \"react-router-dom\";\nimport Role from \"../../Pages/Department/Role.jsx\";\nimport Position from \"../../Pages/Department/Position.jsx\";\nimport Department from \"../../Pages/Department/Department.jsx\";\nimport Country from \"../../Pages/Location/Country.jsx\";\nimport State from \"../../Pages/Location/State.jsx\";\nimport City from \"../../Pages/Location/City.jsx\";\nimport Company from \"../../Pages/Company/Company.jsx\";\nimport Employee from \"../../Pages/AddEmployee/Employee.jsx\";\nimport Salary from \"../../Pages/Salary/Salary.jsx\";\nimport LeaveApplicationHR from \"../HrManager/LeaveStatus/LeaveApplicationHR.jsx\";\nimport NotFound404 from \"../../Pages/PageNot/NotFound404.jsx\";\nimport Dashboard from \"../HrManager/Dashboard/HRDash.jsx\";\nimport ViewAttendance from \"../HrManager/attendance/ViewAttendance.jsx\";\n// task management\nimport ManagerNewTask from \"../HrManager/ManagerTaskManagement/ManagerNewTask.jsx\";\nimport ManagerCencelledTask from \"../HrManager/ManagerTaskManagement/ManagerCencelledTask.jsx\";\nimport ManagerCompletedTask from \"../HrManager/ManagerTaskManagement/ManagerCompletedTask.jsx\";\nimport ManagerRejectedTask from \"../HrManager/ManagerTaskManagement/ManagerRejectedTask.jsx\";\nimport ManagerActiveTask from \"./ManagerTaskManagement/ManagerActiveTask.jsx\";\nimport Attendance from \"../HrManager/attendance/Attendance.jsx\";\nimport InnerDashContainer from \"../InnerDashContainer.jsx\";\nimport LeaveCalendar from \"../../Pages/LeaveCalendar/LeaveCalendar.jsx\";\nimport TodaysAttendance from \"../../Pages/DailyAttendance/TodaysAttendance.jsx\";\nimport LeaveApplication from \"../../Pages/ApplyLeave/LeaveApplication.jsx\";\nimport LeaveApplicationHRAccept from \"./LeaveStatus/LeaveApplicationHRAccept.jsx\";\nimport LeaveApplicationHRReject from \"./LeaveStatus/LeaveApplicationHRReject.jsx\";\nimport ManualAttendance from \"./attendance/ManualAttendance.jsx\";\n// import Main from \"../../Pages/Profile/Main.jsx\";\nimport AttendanceRegister from \"./attendance/AttendanceRegister.jsx\";\n\nimport Notification from \"./Notification/Notification.jsx\";\nimport PersonalInfo from \"../Employee/EmpPresonal/PersonalInfo.jsx\";\nconst MainContent = () => {\n  return (\n    <InnerDashContainer>\n      <div id=\"main-area\">\n        <div id=\"sidebar-top-content\" />\n        <Switch>\n          <Route path=\"/hr/employee\" component={Employee} />\n          <Route path=\"/hr/salary\" exact component={Salary} />\n          <Route path=\"/hr/company\" exact component={Company} />\n          <Route path=\"/hr/role\" component={Role} />\n          <Route path=\"/hr/position\" exact component={Position} />\n          <Route path=\"/hr/department\" exact component={Department} />\n          <Route path=\"/hr/country\" exact component={Country} />\n          <Route path=\"/hr/state\" exact component={State} />\n          <Route path=\"/hr/city\" exact component={City} />\n          <Route\n            path=\"/hr/leaveApplication\"\n            exact\n            component={LeaveApplicationHR}\n          />\n\n          <Route path=\"/hr/city\" exact component={City} />\n          <Route path=\"/hr/dashboard\" exact component={Dashboard} />\n          {/* <Route path=\"/hr/task\" exact component={TaskAssign} /> */}\n          <Route path=\"/hr/newTask\" exact component={ManagerNewTask} />\n          <Route path=\"/hr/ActiveTask\" exact component={ManagerActiveTask} />\n          <Route path=\"/hr/taskcancle\" exact component={ManagerCencelledTask} />\n          <Route\n            path=\"/hr/taskcomplete\"\n            exact\n            component={ManagerCompletedTask}\n          />\n          <Route path=\"/hr/rejectTask\" exact component={ManagerRejectedTask} />\n          <Route path=\"/hr/attenDance\" exact component={Attendance} />\n          <Route path=\"/hr/viewAttenDance\" exact component={ViewAttendance} />\n          <Route\n            path=\"/hr/AttendanceRegister\"\n            exact\n            component={AttendanceRegister}\n          />\n\n          <Route path=\"/hr/holiday\" exact component={LeaveCalendar} />\n          <Route\n            path=\"/hr/todaysAttendance\"\n            exact\n            component={TodaysAttendance}\n          />\n          <Route path=\"/hr/hrLeave\" exact component={LeaveApplication} />\n          <Route\n            path=\"/hr/leaveAccepted\"\n            exact\n            component={LeaveApplicationHRAccept}\n          />\n          <Route\n            path=\"/hr/leaveRejected\"\n            exact\n            component={LeaveApplicationHRReject}\n          />\n          <Route path=\"/hr/notification\" exact component={Notification} />\n          <Route path=\"/hr/manualAttand\" exact component={ManualAttendance} />\n          <Route\n            exact\n            path=\"/hr/:id/profile\"\n            render={(props) => <PersonalInfo />}\n          />\n          {/* <Route path=\"/hr/profile\" exact component={Main} /> */}\n          {/* attendance */}\n          <Route render={() => <NotFound404 />} />\n        </Switch>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default MainContent;\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create the context\r\nconst SidebarContext = createContext();\r\n\r\n// Create the provider component\r\nexport const SidebarProvider = ({ children }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleSidebar = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <SidebarContext.Provider value={{ isOpen, toggleSidebar }}>\r\n            {children}\r\n        </SidebarContext.Provider>\r\n    );\r\n};\r\n\r\n// Create a custom hook to use the context\r\nexport const useSidebar = () => useContext(SidebarContext);\r\n","import React, { useState } from \"react\";\nimport \"./DashboardHR.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar.jsx\";\nimport MainContent from \"./Router.jsx\";\nimport NavBar from \"../../Pages/Navbar/NavBar.jsx\";\nimport DashContainer from \"../DashContainer.jsx\";\nimport { useSidebar } from \"../../Context/AttendanceContext/smallSidebarcontext.jsx\";\nimport SidebarSmallScreen from \"./SidebarSmallScreen.jsx\";\n\nconst DashboardHR = (props) => {\n  const [checked, setChecked] = useState(true);\n  const { isOpen } = useSidebar();\n\n  const handleChange = () => {\n    console.log(\"switch\");\n\n    if (checked) {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-none\");\n    } else {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-block\");\n    }\n\n    setChecked(!checked);\n  };\n\n  return (\n    <DashContainer>\n      <Router>\n        <div>\n          <div>\n            <NavBar\n              loginInfo={props.data}\n              checked={checked}\n              handleChange={handleChange}\n              onLogout={props.onLogout}\n            />{\" \"}\n          </div>\n          <div className=\"d-flex\">\n            <Sidebar />\n            <div className=\"p-0 w-100\">\n              <MainContent />\n            </div>\n          </div>\n        </div>\n      </Router>\n    </DashContainer>\n  );\n};\n\nexport default DashboardHR;\n","// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// const Sidebar = ({ navigation }) => {\n//   return (\n//     <div\n//       style={{ height: \"100%\" }}\n//       className=\"empSidebar bg-dark p-3 d-flex flex-column gap-4\"\n//     >\n//       {navigation.map((item) => (\n//         <Link\n//           className=\"text-white text-decoration-none fw-bold d-flex justify-content-between\"\n//           key={item.Linkrute}\n//           to={item.Linkrute}\n//         >\n//           <div style={{ width: \"fit-content\" }} className=\"d-flex gap-2\">\n//             <p\n//               style={{ height: \"20px\", width: \"20px\", alignItems: \"center\" }}\n//               className=\"m-auto d-flex rounded-5 justify-content-center\"\n//             >\n//               {item.icon}\n//             </p>\n//             <p style={{ whiteSpace: \"pre\" }} className=\"my-auto fw-normal\">\n//               {item.LinkName}\n//             </p>\n//           </div>\n//           <span className=\"my-auto fs-4\">+</span>\n//         </Link>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Sidebar;\n\nimport React, { useState } from \"react\";\nimport { BsBuildingsFill } from \"react-icons/bs\";\nimport { FaAddressBook } from \"react-icons/fa\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { FaCalendarCheck } from \"react-icons/fa6\";\nimport { MdDashboard, MdMenuOpen, MdTaskAlt } from \"react-icons/md\";\nimport { TbDeviceIpadMinus } from \"react-icons/tb\";\nimport { MdHolidayVillage } from \"react-icons/md\";\nimport { FcLeave } from \"react-icons/fc\";\n\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Link } from \"react-router-dom\";\n\nconst Sidebar = ({ navigation }) => {\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [extended, setExtended] = useState(true);\n\n  const ExtendClick = () => {\n    setExtended(extended ? false : true);\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        maxHeight: \"100%\",\n        overflowY: \"auto\",\n        overflow: \"inherit\",\n        width: \"fit-content\",\n        backgroundColor: \"var(--primaryDashColorDark)\"\n      }}\n      className=\"d-flex  flex-column gap-2 p-3\"\n    >\n      <h3\n        style={{ borderBottom: \"3px solid green\" }}\n        className=\"fw-bolder text-success justify-content-between py-2 d-flex gap-2\"\n      >\n        <p\n          style={{ display: !extended ? \"none\" : \"block\" }}\n          className=\"my-auto\"\n        >\n          EMPLOYEE\n        </p>{\" \"}\n        <span\n          onClick={ExtendClick}\n          style={{\n            border: \"none\",\n            outline: \"none\",\n            cursor: \"pointer\",\n            transform: `rotate(${!extended ? \"180deg\" : \"0deg\"})`\n          }}\n          className=\"my-auto p-0 fs-2 text-white\"\n        >\n          <MdMenuOpen />\n        </span>\n      </h3>\n\n      {navigation.map(({ icon, name, navLinks }) => (\n        <div\n          key={name}\n          onMouseEnter={() => setActiveCategory(name)}\n          onMouseLeave={() => setActiveCategory(null)}\n          className=\"position-relative\"\n        >\n          <button\n            style={buttonStyle}\n            className=\"btn p-0 text-white text-start fw-bold gap-2 justify-between w-100 d-flex justify-content-between\"\n          >\n            <div\n              style={{ width: \"fit-content\" }}\n              className=\"d-flex my-auto gap-2\"\n            >\n              <p\n                style={{\n                  height: \"30px\",\n                  width: \"30px\",\n                  alignItems: \"center\",\n                  color: activeCategory === name ? \"#FF9209\" : \"white\"\n                }}\n                className=\"m-auto d-flex rounded-5  justify-content-center fs-3\"\n              >\n                {icon}\n              </p>\n              <p\n                style={{ display: !extended ? \"none\" : \"block\" }}\n                className=\"my-auto\"\n              >\n                {name}\n              </p>\n            </div>\n            <span\n              style={{\n                transform: `rotate(${\n                  activeCategory === name ? \"135deg\" : \"0deg\"\n                })`,\n                transition: \"1s ease\",\n                display: !extended ? \"none\" : \"block\"\n              }}\n              className=\"my-auto fs-4\"\n            >\n              +\n            </span>\n          </button>\n\n          <div\n            style={{\n              ...dropdownStyle,\n              display: activeCategory === name ? \"flex\" : \"none\",\n              backgroundColor: \"var(--primaryDashColorDark)\",\n              width: \"fit-content\"\n            }}\n            className=\"flex-column position-absolute top-0 start-100 py-2 px-2 gap-2 mt-2  \"\n          >\n            {navLinks.map((link) => (\n              <Link className=\"text-decoration-none\" key={link.to} to={link.to}>\n                <div className=\"text-decoration-none flex-nowrap text-start fw-bolder gap-3 text-white d-flex justify-content-between \">\n                  <div\n                    style={{ borderBottom: \"1px solid white\" }}\n                    className=\"d-flex gap-1 flex-nowrap\"\n                  >\n                    <p className=\"m-0\">{link.icon}</p>\n                    <p style={{ whiteSpace: \"pre\" }} className=\"m-auto\">\n                      {link.label}\n                    </p>\n                  </div>\n                  <span style={{}} className=\"my-auto \">\n                    ›\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst buttonStyle = {\n  outline: \"none\",\n  border: \"none\",\n  height: \"3rem\"\n};\n\nconst dropdownStyle = {\n  width: \"250px\",\n  zIndex: \"5\",\n  borderLeft: \"5px solid white\"\n};\n\nexport default Sidebar;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport { Button, Table } from \"react-bootstrap\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationEmpTable = (props) => {\n  const [leaveApplicationEmpData, setLeaveApplicationEmpData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowData, setRowData] = useState([]);\n  const userId = props.data && props.data._id;\n\n  const loadLeaveApplicationEmpData = () => {\n    axios\n      .get(`${BASE_URL}/api/leave-application-emp/${props.data[\"_id\"]}`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const leaveApplicationEmpObj = response.data;\n        console.log(\"response\", response.data);\n        setLeaveApplicationEmpData(response.data);\n        setLoading(false);\n\n        const newRowsData = leaveApplicationEmpObj.leaveApplication.map(\n          (data) => {\n            return {\n              data,\n              Leavetype: data[\"Leavetype\"],\n              FromDate: data[\"FromDate\"].slice(0, 10),\n              ToDate: data[\"ToDate\"].slice(0, 10),\n              Reasonforleave: data[\"Reasonforleave\"],\n              Status: data[\"Status\"]\n            };\n          }\n        );\n\n        setRowData(newRowsData);\n\n        props.updateTotalLeaves(newRowsData.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onLeaveApplicationEmpDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \")) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-emp/${e1}/${e2}`, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationEmpData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n    return \"Unknown Status\";\n  };\n\n  const onEdit = (data) => {\n    if (data[\"Status\"] === 1) {\n      props.onEditLeaveApplicationEmp(data);\n    } else {\n      window.alert(\n        \"You cannot edit the application after it's approved or rejected\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationEmpData();\n  }, [props.leaveRequestDone]);\n\n  // const getTotalLeaveCount = () => {\n  //   // Check if leaveApplicationEmpData is defined before accessing its properties\n  //   return leaveApplicationEmpData && leaveApplicationEmpData.leaveApplication\n  //     ? leaveApplicationEmpData.leaveApplication.length\n  //     : 0;\n  // };\n  // // In LeaveApplicationEmpTable component\n  // useEffect(() => {\n  //   if (typeof props.updateTotalEmployeeLeave !== \"function\") {\n  //     console.error(\"updateTotalEmployeeLeave is not a function\");\n  //   }\n  // }, [props.updateTotalEmployeeLeave]);\n\n  return (\n    <InnerDashContainer>\n      <h2 id=\"role-title\"> Leave Application</h2>\n      <Button\n        variant=\"primary\"\n        id=\"add-button\"\n        onClick={props.onAddLeaveApplicationEmp}\n      >\n        <FontAwesomeIcon icon={faPlus} id=\"plus-icon\" />\n        Add\n      </Button>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div>\n          <Table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th className=\"bg-success text-white\">Leave Type</th>\n                <th className=\"bg-success text-white\">Start Date</th>\n                <th className=\"bg-success text-white\">End Date</th>\n                <th className=\"bg-success text-white\">Remarks</th>\n                <th className=\"bg-success text-white\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rowData.map((data, index) => (\n                <tr key={index}>\n                  <td>{data.Leavetype}</td>\n                  <td>{data.FromDate}</td>\n                  <td>{data.ToDate}</td>\n                  <td>{data.Reasonforleave}</td>\n                  <td>{status(data.Status)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </InnerDashContainer>\n  );\n};\n\nexport default LeaveApplicationEmpTable;\n","export default __webpack_public_path__ + \"static/media/Leave.cde90f6b.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./LeaveApplicationEmpForm.css\";\nimport LeaveImg from \"./Leave.svg\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst LeaveApplicationEmpForm = (props) => {\n  const id = localStorage.getItem(\"_id\");\n  const [empData, setEmpData] = useState([]);\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        console.log(response.data);\n        setEmpData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n  return (\n    // <div\n    //   style={{ height: \"100vh\", width: \"100%\" }}\n    //   className=\"registration-page py-4\"\n    // >\n    //   <h2\n    //     id=\"role-form-title\"\n    //     className=\"text-center text-black text-uppercase fw-bold my-4\"\n    //   >\n    //     Add LeaveApplicationEmp Details\n    //   </h2>\n\n    //   <div id=\"role-form-outer-div\">\n    //     <Form id=\"form\" onSubmit={props.onLeaveApplicationEmpSubmit}>\n    //       <div className=\"d-flex w-100 flex-column gap-2 rounded \">\n    //         <div className=\"row row-gap-3 \">\n    //           <div className=\"form-group col-12 col-md-6\">\n    //             <Form.Label column sm={6}>\n    //               Leave Type\n    //             </Form.Label>\n    //             <Col sm={10} className=\"form-input\">\n    //               <Form.Control as=\"select\" required>\n    //                 <option value=\"\" disabled selected>\n    //                   Select your option\n    //                 </option>\n    //                 <option value=\"Sick Leave\">Sick Leave</option>\n    //                 <option value=\"Casual Leave\">Casual Leave</option>\n    //                 <option value=\"Privilege Leave\">Privilege Leave</option>\n    //               </Form.Control>\n    //             </Col>\n    //           </div>\n    //           <div className=\"form-group col-12 col-md-6\">\n    //             <Form.Label column sm={6}>\n    //               FromDate\n    //             </Form.Label>\n    //             <Col sm={10} className=\"form-input\">\n    //               <Form.Control type=\"date\" required />\n    //             </Col>\n    //           </div>\n    //           <div className=\"form-group col-12 col-md-6\">\n    //             <Form.Label column sm={6}>\n    //               ToDate\n    //             </Form.Label>\n    //             <Col sm={10} className=\"form-input\">\n    //               <Form.Control type=\"date\" placeholder=\"ToDate\" required />\n    //             </Col>\n    //           </div>\n\n    //           <div className=\"form-group col-12 col-md-6\">\n    //             <Form.Label column sm={6}>\n    //               Leave Status\n    //             </Form.Label>\n    //             <Col sm={10} className=\"form-input\">\n    //               <Form.Control as=\"select\" required>\n    //                 <option value=\"1\" selected>\n    //                   Pending\n    //                 </option>\n    //               </Form.Control>\n    //             </Col>\n    //           </div>\n\n    //           <div className=\"form-group col-12\">\n    //             <Form.Label column sm={6}>\n    //               Reason for leave\n    //             </Form.Label>\n    //             <Col sm={11} className=\"form-input\">\n    //               <Form.Control\n    //                 as=\"textarea\"\n    //                 rows={3}\n    //                 required\n    //                 className=\"form-control\"\n    //                 placeholder=\"Please Describe your reasion....\"\n    //               />\n    //             </Col>\n    //           </div>\n\n    //           <div\n    //             className=\"form-group col-12 col-md-6\"\n    //             id=\"form-submit-button\"\n    //           >\n    //             <Col sm={{ span: 10, offset: 2 }}>\n    //               <Button type=\"submit\">Submit</Button>\n    //             </Col>\n    //           </div>\n    //           <div\n    //             className=\"form-group col-12 col-md-6\"\n    //             id=\"form-cancel-button\"\n    //           >\n    //             <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n    //               <Button type=\"reset\" onClick={props.onFormClose}>\n    //                 cancel\n    //               </Button>\n    //             </Col>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     </Form>\n    //   </div>\n    // </div>\n\n    <InnerDashContainer>\n      <div style={{ overflow: \"auto\" }} className=\"row\">\n        <div className=\"col-5\">\n          <img style={{ width: \"130%\" }} src={LeaveImg} alt=\"\" />\n        </div>\n        <div className=\"col-6\">\n          <form\n            className=\"text-white shadow bg-dark px-3 py-4 rounded row\"\n            onSubmit={props.onLeaveApplicationEmpSubmit}\n          >\n            <h4 className=\"fw-bolder text-white mb-5\">Create Leave Request</h4>\n\n            <div className=\"mb-3 col-12\">\n              <label htmlFor=\"leaveType\" className=\"form-label\">\n                Select Leave Type\n              </label>\n              <select\n                className=\"form-select\"\n                id=\"leaveType\"\n                name=\"leaveType\"\n                // value={formData.leaveType}\n                // onChange={handleInputChange}\n              >\n                <option value=\"\" disabled selected>\n                  -- Select --\n                </option>\n                <option value=\"Sick Leave\">Sick Leave</option>\n                <option value=\"Casual Leave\">Casual Leave</option>\n                <option value=\"Privilege Leave\">Privilege Leave</option>\n              </select>\n            </div>\n            <div className=\"mb-3 col-6\">\n              <label htmlFor=\"startDate\" className=\"form-label\">\n                Start Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"startDate\"\n                name=\"startDate\"\n                // value={formData.startDate}\n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"mb-3 col-6\">\n              <label htmlFor=\"endDate\" className=\"form-label\">\n                End Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"endDate\"\n                name=\"endDate\"\n                // value={formData.endDate}\n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"mb-3 col-12\">\n              <label htmlFor=\"leaveType\" className=\"form-label\">\n                Leave Status\n              </label>\n              <select\n                className=\"form-select\"\n                id=\"leaveStatus\"\n                name=\"leaveStatus\"\n              >\n                <option value=\"1\" selected>\n                  Pending\n                </option>\n              </select>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"manager\" className=\"form-label\">\n                Reporting Manager:\n              </label>\n              <input\n                className=\"form-control\"\n                id=\"manager\"\n                name=\"manager\"\n                value={empData.reportManager}\n                // onChange={handleInputChange}\n                required\n                disabled\n                placeholder={empData.reportManager}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"hr\" className=\"form-label\">\n                Reporting Hr:\n              </label>\n              <input\n                className=\"form-control\"\n                id=\"hr\"\n                name=\"hr\"\n                value={empData.reportHr}\n                // onChange={handleInputChange}\n                required\n                disabled\n                placeholder={empData.reportHr}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"reason\" className=\"form-label\">\n                Reason:\n              </label>\n              <textarea\n                className=\"form-control\"\n                id=\"reason\"\n                name=\"reason\"\n                // value={formData.reason}\n                // onChange={handleInputChange}\n                required\n                placeholder=\"Please mention the reason for leave\"\n              />\n            </div>\n\n            <div className=\"row mt-3 mx-1 justify-content-between\">\n              <button type=\"submit\" className=\"btn btn-primary col-5 \">\n                Submit\n              </button>\n              <button\n                type=\"reset\"\n                className=\"btn btn-danger col-5\"\n                onClick={props.onFormClose}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default LeaveApplicationEmpForm;\n","import React, { useState } from \"react\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst LeaveApplicationEmpForm = (props) => {\n  const [FromDateData, setFromDateData] = useState(\n    props.editData[\"FromDate\"].slice(0, 10)\n  );\n  const [ToDateData, setToDateData] = useState(\n    props.editData[\"ToDate\"].slice(0, 10)\n  );\n  const [ReasonforleaveData, setReasonforleaveData] = useState(\n    props.editData[\"Reasonforleave\"]\n  );\n\n  const onFromDateDataChange = (e) => {\n    setFromDateData(e.target.value);\n  };\n\n  const onToDateDataChange = (e) => {\n    setToDateData(e.target.value);\n  };\n\n  const onReasonforleaveDataChange = (e) => {\n    setReasonforleaveData(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2 id=\"role-form-title\">Edit LeaveApplicationEmp Details</h2>\n\n      <div id=\"role-form-outer-div\">\n        <Form\n          id=\"form\"\n          onSubmit={(e) =>\n            props.onLeaveApplicationEmpEditUpdate(props.editData, e)\n          }\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Leave Type\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control as=\"select\" required>\n                <option value=\"\" disabled selected>\n                  Select your option\n                </option>\n                <option\n                  value=\"Sick Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Sick Leave\"}\n                >\n                  Sick Leave\n                </option>\n                <option\n                  value=\"Casual Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Casual Leave\"}\n                >\n                  Casual Leave\n                </option>\n                <option\n                  value=\"Privilege Leave\"\n                  selected={props.editData[\"Leavetype\"] === \"Privilege Leave\"}\n                >\n                  Privilege Leave\n                </option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              FromDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                required\n                value={FromDateData}\n                onChange={(e) => onFromDateDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              ToDate\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"date\"\n                required\n                value={ToDateData}\n                onChange={(e) => onToDateDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Reason for leave\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control\n                type=\"Text\"\n                placeholder=\"Reason for leave\"\n                required\n                value={ReasonforleaveData}\n                onChange={(e) => onReasonforleaveDataChange(e)}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Leave Status\n            </Form.Label>\n            <Col sm={10} className=\"form-input\">\n              <Form.Control as=\"select\" required>\n                <option value=\"1\" selected disabled>\n                  Pending\n                </option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} id=\"form-submit-button\">\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Update</Button>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} id=\"form-cancel-button\">\n            <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n              <Button type=\"reset\" onClick={props.onFormEditClose}>\n                cancel\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaveApplicationEmpForm;\n","import React, { useState, useContext } from \"react\";\nimport \"./LeaveApplicationEmp.css\";\nimport axios from \"axios\";\nimport LeaveApplicationEmpTable from \"./LeaveApplicationEmpTable.jsx\";\nimport LeaveApplicationEmpForm from \"./LeaveApplicationEmpForm.jsx\";\nimport LeaveApplicationEmpFormEdit from \"./LeaveApplicationEmpFormEdit.jsx\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport { v4 as uuid } from \"uuid\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst LeaveApplicationEmp = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [leaveRequestDone, setLeaveRequestDone] = useState(false);\n  const email = localStorage.getItem(\"Email\");\n  const { socket } = useContext(AttendanceContext);\n  const handleLeaveApplicationEmpSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      Leavetype: event.target[0].value,\n      FromDate: event.target[1].value,\n      ToDate: event.target[2].value,\n      Status: event.target[3].value,\n      managerEmail: event.target[4].value,\n      hrEmail: event.target[5].value,\n      Reasonforleave: event.target[6].value\n    };\n    console.log(body);\n    axios\n      .post(\n        `${BASE_URL}/api/leave-application-emp/` + props.data[\"_id\"],\n        body,\n        {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        }\n      )\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n        setLeaveRequestDone(!leaveRequestDone);\n        const taskId = uuid();\n        const data = {\n          taskId,\n          managerEmail: body.managerEmail,\n          hrEmail: body.hrEmail,\n          message: `Leave request by ${email}`,\n          status: \"unseen\",\n          path: \"leaveApplication\"\n        };\n        socket.emit(\"leaveNotification\", data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddLeaveApplicationEmp = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditLeaveApplicationEmp = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleLeaveApplicationEmpEditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    let body = {\n      Leavetype: newInfo.target[0].value,\n      FromDate: newInfo.target[1].value,\n      ToDate: newInfo.target[2].value,\n      Status: newInfo.target[3].value,\n      managerEmail: newInfo.target[4].value,\n      hrEmail: newInfo.target[5].value,\n      Reasonforleave: newInfo.target[6].value\n    };\n\n    console.log(\"update\", body);\n\n    axios\n      .put(`${BASE_URL}/api/leave-application-emp/` + info[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    setEditForm(false);\n  };\n  const handleAddFormGenderChange = () => {};\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <LeaveApplicationEmpFormEdit\n            onLeaveApplicationEmpEditUpdate={\n              handleLeaveApplicationEmpEditUpdate\n            }\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <LeaveApplicationEmpTable\n            onAddLeaveApplicationEmp={handleAddLeaveApplicationEmp}\n            onEditLeaveApplicationEmp={handleEditLeaveApplicationEmp}\n            data={props.data}\n            leaveRequestDone={leaveRequestDone}\n          />\n        )\n      ) : (\n        <LeaveApplicationEmpForm\n          onLeaveApplicationEmpSubmit={handleLeaveApplicationEmpSubmit}\n          onFormClose={handleFormClose}\n          onGenderChange={handleAddFormGenderChange}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LeaveApplicationEmp;\n\n// import React, { Component } from \"react\";\n// import \"./LeaveApplicationEmp.css\";\n// import axios from \"axios\";\n// import LeaveApplicationEmpTable from \"./LeaveApplicationEmpTable.jsx\";\n// import LeaveApplicationEmpForm from \"./LeaveApplicationEmpForm.jsx\";\n// import LeaveApplicationEmpFormEdit from \"./LeaveApplicationEmpFormEdit.jsx\";\n// class LeaveApplicationEmp extends Component {\n//   state = {\n//     table: true,\n//     editForm: false,\n//     editData: {},\n\n//   };\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         {/* <h1>iiiiiiiiiinnnnnnnnnnnnnn{\n//           JSON.stringify(this.props.data)}</h1> */}\n\n//         {this.state.table ? (\n//           this.state.editForm ? (\n//             <LeaveApplicationEmpFormEdit\n//               onLeaveApplicationEmpEditUpdate={this.handleLeaveApplicationEmpEditUpdate}\n//               onFormEditClose={this.handleEditFormClose}\n//               editData={this.state.editData}\n//             />\n//           ) : (\n//               <LeaveApplicationEmpTable\n//                 onAddLeaveApplicationEmp={this.handleAddLeaveApplicationEmp}\n//                 onEditLeaveApplicationEmp={this.handleEditLeaveApplicationEmp}\n//                 data={this.props.data}\n//               />\n//             )\n//         ) : (\n//             <LeaveApplicationEmpForm\n//               onLeaveApplicationEmpSubmit={this.handleLeaveApplicationEmpSubmit}\n//               onFormClose={this.handleFormClose}\n//               onGenderChange={this.handleAddFormGenderChange}\n//             />\n//           )}\n//       </React.Fragment>\n//     );\n//   }\n//   handleLeaveApplicationEmpSubmit = event => {\n//     event.preventDefault();\n//     console.log(\"id\", event.target[0].value, event.target[1].value);\n//     this.setState({ table: true });\n\n//     let body = {\n\n//       //  CompanyName: event.target[0].value,\n//       //  Designation:  event.target[1].value,\n//       //  FromDate:  event.target[2].value,\n//       //  ToDate:  event.target[3].value,\n\n//       Leavetype: event.target[0].value,\n//       FromDate: event.target[1].value,\n//       ToDate: event.target[2].value,\n//       Status: event.target[3].value,\n//       Reasonforleave: event.target[4].value,\n\n//     };\n//     axios\n//       .post(\"http://localhost:4000/api/leave-application-emp/\" + this.props.data[\"_id\"], body, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then(res => {\n//         this.setState({ table: false });\n//         this.setState({ table: true });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n//   handleAddLeaveApplicationEmp = () => {\n//     console.log(\"clicked1\");\n//     this.setState({ table: false });\n//   };\n//   handleEditLeaveApplicationEmp = e => {\n//     console.log(e);\n//     console.log(\"clicked6\");\n//     this.setState({ editForm: true });\n//     this.setState({ editData: e });\n//     this.setState({ editFormGender: e[\"Gender\"] })\n//   };\n//   handleFormClose = () => {\n//     console.log(\"clicked1\");\n//     this.setState({ table: true });\n//   };\n//   handleEditFormClose = () => {\n//     console.log(\"clicked5\");\n//     this.setState({ editForm: false });\n//   };\n//   // handleFormClose = () => {\n//   //   console.log(\"clicked1\");\n//   //   this.setState({ table: true });\n//   // };\n//   handleLeaveApplicationEmpEditUpdate = (info, newInfo) => {\n//     newInfo.preventDefault();\n//     console.log(\"zero data\", newInfo.target[0].value);\n//     let body = {\n//       Leavetype: newInfo.target[0].value,\n//       FromDate: newInfo.target[1].value,\n//       ToDate: newInfo.target[2].value,\n//       Status: newInfo.target[3].value,\n//       Reasonforleave: newInfo.target[4].value,\n\n//     };\n//     console.log(\"update\", body);\n//     axios\n//       .put(\n//         \"http://localhost:4000/api/leave-application-emp/\" + info[\"_id\"],\n//         body, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       }\n//       )\n//       .then(res => {\n//         this.setState({ table: false });\n//         this.setState({ table: true });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n\n//     this.setState({ editForm: false });\n//   };\n\n// }\n\n// export default LeaveApplicationEmp;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport Table from \"react-bootstrap/Table\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport BASE_URL from \"../../../Pages/config/config\";\nimport { v4 as uuid } from \"uuid\";\n\nconst EmployeeNewTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [email, setEmail] = useState(null);\n  const empMail = localStorage.getItem(\"Email\");\n  const taskId = uuid();\n  const { socket } = useContext(AttendanceContext);\n\n  const id = localStorage.getItem(\"_id\");\n  // console.log(id)\n  useEffect(() => {\n    const loadPersonalInfoData = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/api/personal-info/` + id,\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        );\n        setEmail(response.data.Email);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    loadPersonalInfoData();\n  }, []);\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n  }, []);\n\n  const acceptTask = async (taskId, empEmail, task) => {\n    try {\n      const empRemarks = prompt(\"Enter remarks for accepting the task:\");\n\n      if (empRemarks === null) {\n        return; // If the user clicks Cancel in the prompt, do nothing\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}/employees/${empEmail}`, {\n        emptaskStatus: \"Accepted\",\n        empTaskComment: empRemarks\n      });\n\n      toast.success(\"Task accepted successfully!\");\n      const employeeNotificationArr = task.employees.map((val) => {\n        if (val.emptaskStatus !== \"Rejected\" && val.empemail !== email) {\n          return val.empemail;\n        }\n      });\n      const employeeTaskNotification = {\n        senderMail: empMail,\n        employeesEmail: [...employeeNotificationArr, task.managerEmail],\n        taskId,\n        status: \"unseen\",\n        taskName: task.Taskname,\n        message: `${task.Taskname} is Accepted by ${empMail}`,\n        taskStatus: \"Accepted\",\n        Account: 3,\n        path: \"activeTask\"\n      };\n\n      socket.emit(\"employeeTaskUpdateNotification\", employeeTaskNotification);\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error accepting task:\", error.message);\n      toast.error(\"Failed to accept task. Please try again.\");\n    }\n  };\n\n  const rejectTask = async (taskId, empEmail, task) => {\n    try {\n      const empRemarks = prompt(\"Enter remarks for rejecting the task:\");\n\n      if (empRemarks === null) {\n        return; // If the user clicks Cancel in the prompt, do nothing\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}/employees/${empEmail}`, {\n        emptaskStatus: \"Rejected\",\n        empTaskComment: empRemarks\n      });\n\n      toast.success(\"Task rejected successfully!\");\n      const employeeTaskNotification = {\n        senderMail: empMail,\n        employeesEmail: [task.managerEmail],\n        taskId,\n        status: \"unseen\",\n        taskName: task.Taskname,\n        message: `${task.Taskname} is Rejected by ${empMail}`,\n        taskStatus: \"Rejected\",\n        Account: 3,\n        path: \"activeTask\"\n      };\n      console.log(employeeTaskNotification);\n      socket.emit(\"employeeTaskUpdateNotification\", employeeTaskNotification);\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error rejecting task:\", error.message);\n      toast.error(\"Failed to reject task. Please try again.\");\n    }\n  };\n\n  const completeTask = async (taskId, empEmail, task) => {\n    try {\n      const empRemarks = prompt(\"Enter remarks for complete the task:\");\n\n      if (empRemarks === null) {\n        return; // If the user clicks Cancel in the prompt, do nothing\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}/employees/${empEmail}`, {\n        emptaskStatus: \"Completed\",\n        empTaskComment: empRemarks\n      });\n\n      toast.success(\"Task Completed successfully!\");\n      const employeeNotificationArr = task.employees.map((val) => {\n        if (val.emptaskStatus !== \"Rejected\" && val.empemail !== email) {\n          return val.empemail;\n        }\n      });\n      const employeeTaskNotification = {\n        senderMail: empMail,\n        employeesEmail: [...employeeNotificationArr, task.managerEmail],\n        taskId,\n        status: \"unseen\",\n        taskName: task.Taskname,\n        taskStatus: \"Completed\",\n        message: `${task.Taskname} is Completed by ${empMail}`,\n        Account: 3,\n        path: \"activeTask\"\n      };\n      console.log(employeeTaskNotification);\n      socket.emit(\"employeeTaskUpdateNotification\", employeeTaskNotification);\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error Completing task:\", error.message);\n      toast.error(\"Failed to Complete task. Please try again.\");\n    }\n  };\n\n  const totalTaskAssigned = tasks.filter((task) =>\n    task.employees.some((taskemp) => taskemp.emptaskStatus === \"Task Assigned\")\n  ).length;\n\n  console.log(\"Total Task Assigned: \", totalTaskAssigned);\n\n  return (\n    <div>\n      <h1 className=\"fs-3 fw-bolder text-uppercase \">🌟New Task ({}) </h1>\n\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      {error && <p className=\"text-danger\">{error}</p>}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {email &&\n          tasks\n            .filter(\n              (task) =>\n                task.status === \"Pending\" &&\n                task.employees.some((taskemp) => taskemp.empemail === email)\n            )\n            .reverse()\n            .map((task, index) => (\n              <details\n                style={{\n                  boxShadow: \"-1px 1px 10px gray\"\n                }}\n                className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n                key={task.id}\n              >\n                <summary\n                  style={{ height: \"fit-content\" }}\n                  className=\"d-flex justify-content-between aline-center form-control bg-danger \"\n                >\n                  <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                    # Task {index + 1} : {task.Taskname}\n                  </div>\n                  <div\n                    style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                    className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                  >\n                    {task.department}\n                  </div>\n                  <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                    {calculateRemainingTime(task.endDate).delay ? (\n                      <div>\n                        <div className=\"text-center d-none\">\n                          <div className=\"form-control  fw-bold p-0\">\n                            {calculateRemainingTime(task.endDate).days}{\" \"}\n                          </div>{\" \"}\n                          <div>Day</div>\n                        </div>\n                        <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">\n                          Late\n                        </h5>\n                      </div>\n                    ) : (\n                      <div className=\"text-center\">\n                        <div\n                          style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                          className=\"form-control fw-bold px-1 py-0\"\n                        >\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                    )}\n                    {calculateRemainingTime(task.endDate).delay ? (\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).hours}{\" \"}\n                        </div>{\" \"}\n                        <div>Min</div>\n                      </div>\n                    ) : (\n                      <div className=\"text-center\">\n                        <div\n                          style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                          className=\"form-control fw-bold px-1 py-0\"\n                        >\n                          {calculateRemainingTime(task.endDate).hours}{\" \"}\n                        </div>{\" \"}\n                        <div>Hrs</div>\n                      </div>\n                    )}\n                    {calculateRemainingTime(task.endDate).delay ? (\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                        </div>{\" \"}\n                        <div>Min</div>\n                      </div>\n                    ) : (\n                      <div className=\"text-center\">\n                        <div\n                          style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                          className=\"form-control fw-bold px-1 py-0\"\n                        >\n                          {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                        </div>{\" \"}\n                        <div>Min</div>\n                      </div>\n                    )}\n                  </div>\n                </summary>\n                <div\n                  style={{ position: \"relative\" }}\n                  className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n                >\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"form-control\"\n                  >\n                    <p\n                      style={{ height: \"fit-content\" }}\n                      className=\"text-start fs-6 form-control\"\n                    >\n                      <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                      {task.description}\n                    </p>\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                    >\n                      <p\n                        style={{ fontSize: \"1rem\" }}\n                        className=\"col-6 col-sm-6 col-md-2\"\n                      >\n                        <b>Task Durations</b> <br />{\" \"}\n                        <span>{task.duration} days</span>{\" \"}\n                      </p>\n                      <p\n                        style={{ fontSize: \"1rem\" }}\n                        className=\"col-6 col-sm-6 col-md-2\"\n                      >\n                        <b> Manager</b> <br /> <span>{task.managerEmail}</span>\n                      </p>\n                      <p\n                        style={{ fontSize: \"1rem\" }}\n                        className=\"col-6 col-sm-6 col-md-2\"\n                      >\n                        <b>Start Date</b> <br />{\" \"}\n                        <span>\n                          {new Date(task.startDate).toLocaleDateString()}\n                        </span>\n                      </p>\n                      <p\n                        style={{ fontSize: \"1rem\" }}\n                        className=\"col-6 col-sm-6 col-md-2\"\n                      >\n                        <b>End Date</b> <br />{\" \"}\n                        <span>\n                          {new Date(task.endDate).toLocaleDateString()}\n                        </span>\n                      </p>\n                      <p\n                        style={{ fontSize: \"1rem\" }}\n                        className=\"col-6 col-sm-6 col-md-2\"\n                      >\n                        <span>\n                          <b>Task Status</b> <br /> {task.status}\n                        </span>\n                      </p>\n                    </div>\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"row form-control d-flex my-1 pt-3 rounded mx-1 justify-content-between\"\n                    >\n                      <h6 className=\"fw-bold\">Project Members</h6>\n                      <Table striped bordered hover>\n                        <thead>\n                          <tr>\n                            <th className=\"bg-dark text-white\">S. No</th>\n                            <th className=\"bg-dark text-white\">Name</th>\n                            <th className=\"bg-dark text-white\">Email</th>\n                            <th className=\"bg-dark text-white\">Designation</th>\n                            <th className=\"bg-dark text-white\">Action</th>\n                            <th className=\"bg-dark text-white\">Task Status</th>\n                            <th className=\"bg-dark text-white\">Remarks</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {email &&\n                            task.employees\n                              .filter((taskemp) => taskemp.empemail === email)\n                              .map((taskemp, i) => (\n                                <tr key={i}>\n                                  <td>{i + 1}</td>\n                                  <td>{taskemp.empname}</td>\n                                  <td>{taskemp.empemail}</td>\n                                  <td>{taskemp.empdesignation}</td>\n                                  <td className=\"row justify-content-center gap-2 \">\n                                    <button\n                                      className=\"btn col-3 btn-primary py-1\"\n                                      onClick={() =>\n                                        acceptTask(\n                                          task._id,\n                                          taskemp.empemail,\n                                          task\n                                        )\n                                      }\n                                      disabled={\n                                        taskemp.emptaskStatus === \"Accepted\" ||\n                                        taskemp.emptaskStatus === \"Rejected\" ||\n                                        taskemp.emptaskStatus === \"Completed\"\n                                      }\n                                    >\n                                      Accept\n                                    </button>\n                                    <button\n                                      className=\"btn col-3 py-1 btn-danger\"\n                                      onClick={() =>\n                                        rejectTask(\n                                          task._id,\n                                          taskemp.empemail,\n                                          task\n                                        )\n                                      }\n                                      disabled={\n                                        taskemp.emptaskStatus === \"Accepted\" ||\n                                        taskemp.emptaskStatus === \"Rejected\" ||\n                                        taskemp.emptaskStatus === \"Completed\"\n                                      }\n                                    >\n                                      Reject\n                                    </button>\n                                    <button\n                                      className=\"btn col-3 py-1 btn-success\"\n                                      onClick={() =>\n                                        completeTask(\n                                          task._id,\n                                          taskemp.empemail,\n                                          task\n                                        )\n                                      }\n                                      disabled={\n                                        taskemp.emptaskStatus === \"Completed\"\n                                      }\n                                    >\n                                      Complete\n                                    </button>\n\n                                    <button className=\"btn col-3 btn-info py-1\">\n                                      <BsFiletypeDoc /> View Docs\n                                    </button>\n                                  </td>\n                                  <td>{taskemp.emptaskStatus} </td>\n                                  <td\n                                    style={{\n                                      maxWidth: \"10rem\",\n                                      overflow: \"hidden\",\n                                      whiteSpace: \"nowrap\",\n                                      textOverflow: \"ellipsis\"\n                                    }}\n                                  >\n                                    {taskemp.empTaskComment}\n                                  </td>\n                                </tr>\n                              ))}\n                        </tbody>\n                      </Table>\n                    </div>\n                  </div>\n                </div>\n              </details>\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeNewTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { toast } from \"react-hot-toast\";\nimport Table from \"react-bootstrap/Table\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nconst EmployeeActiveTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCanceling, setIsCanceling] = useState(false);\n  const [isCompleting, setIsCompleting] = useState(false);\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isRejected, setIsRejected] = useState(false);\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const askStatus = async (taskId) => {\n    // Implement the logic to ask for task status (e.g., open a modal or show a notification)\n  };\n  const AcceptTask = async (taskId) => {\n    try {\n      setIsAccepted(true);\n\n      // Prompt the user for cancellation remarks\n      const cancellationRemarks = prompt(\"Enter remarks for Accept Task:\");\n\n      if (cancellationRemarks === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsAccepted(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Pending\",\n        comment: cancellationRemarks\n      });\n\n      // Display success notification\n      toast.success(\"Task canceled successfully!\");\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsAccepted(false);\n    }\n  };\n  const RejectTask = async (taskId) => {\n    try {\n      setIsRejected(true);\n      const RejectRemarks = prompt(\"Enter remarks for Reject Task:\");\n\n      if (RejectRemarks === null) {\n        setIsRejected(false);\n        return;\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Rejected\",\n        comment: RejectRemarks\n      });\n\n      toast.success(\"Task Rejected\");\n\n      fetchData();\n    } catch (error) {\n      console.error(\"Error Rejecting task:\", error.message);\n      toast.error(\"Failed to Reject task. Please try again.\");\n    } finally {\n      setIsRejected(false);\n    }\n  };\n  const completeTask = async (taskId) => {\n    try {\n      setIsCompleting(true);\n\n      // Prompt the user for cancellation remarks\n      const CompleteRemarks = prompt(\"Enter remarks to Complete Task:\");\n\n      if (CompleteRemarks === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsCompleting(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Completed\",\n        comment: CompleteRemarks\n      });\n\n      // Display success notification\n      toast.success(\"Task canceled successfully!\");\n\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsCanceling(false);\n    }\n  };\n\n  return (\n    <div className=\"py-2\">\n      <h1 className=\"fs-3 fw-bolder text-uppercase \">🌟 Active Task</h1>\n\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter((task) => task.status === \"Pending\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{ height: \"fit-content\" }}\n                className=\"d-flex justify-content-between aline-center form-control bg-danger \"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <b>Task Durations</b> <br />{\" \"}\n                      <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <b> Manager</b> <br /> <span> {task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <b>Start Date</b> <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <b>End Date</b> <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        <b>Task Status</b> <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex my-1 pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <h6 className=\"fw-bold\">Project Members</h6>\n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>S. No</th>\n                          <th>Name</th>\n                          <th>Email</th>\n                          <th>Designation</th>\n                          <th>Task Status</th>\n                          <th>Remarks</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {task.employees\n                          .filter(\n                            (taskemp) =>\n                              taskemp.emptaskStatus === \"Accepted\" ||\n                              taskemp.emptaskStatus === \"Completed\"\n                          )\n                          .map((taskemp, i) => (\n                            <tr key={i}>\n                              <td\n                                style={{\n                                  backgroundColor:\n                                    taskemp.emptaskStatus === \"Completed\"\n                                      ? \"rgba(25, 201, 84, 0.436)\"\n                                      : \"inherit\"\n                                }}\n                              >\n                                {i + 1}\n                              </td>\n                              <td\n                                style={{\n                                  backgroundColor:\n                                    taskemp.emptaskStatus === \"Completed\"\n                                      ? \"rgba(25, 201, 84, 0.436)\"\n                                      : \"inherit\"\n                                }}\n                              >\n                                {taskemp.empname}\n                              </td>\n                              <td\n                                style={{\n                                  backgroundColor:\n                                    taskemp.emptaskStatus === \"Completed\"\n                                      ? \"rgba(25, 201, 84, 0.436)\"\n                                      : \"inherit\"\n                                }}\n                              >\n                                {taskemp.empemail}\n                              </td>\n                              <td\n                                style={{\n                                  backgroundColor:\n                                    taskemp.emptaskStatus === \"Completed\"\n                                      ? \"rgba(25, 201, 84, 0.436)\"\n                                      : \"inherit\"\n                                }}\n                              >\n                                {taskemp.empdesignation}\n                              </td>\n                              <td\n                                style={{\n                                  backgroundColor:\n                                    taskemp.emptaskStatus === \"Completed\"\n                                      ? \"rgba(25, 201, 84, 0.436)\"\n                                      : \"inherit\"\n                                }}\n                              >\n                                {taskemp.emptaskStatus}\n                              </td>\n                              <td\n                                style={{\n                                  backgroundColor:\n                                    taskemp.emptaskStatus === \"Completed\"\n                                      ? \"rgba(25, 201, 84, 0.436)\"\n                                      : \"inherit\"\n                                }}\n                              >\n                                {taskemp.empTaskComment}\n                              </td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </Table>\n                    {/* <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                    >\n                      <p>\n                        <span className=\"fw-bold\">Remarks : </span>{\" \"}\n                        {task.comment}\n                      </p>\n                    </div>\n\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                    >\n                      <button\n                        className=\"btn btn-info col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => AcceptTask(task._id)}\n                      >\n                        <IoCheckmarkDoneSharp />\n                        Accept\n                      </button>\n                      <button\n                        className=\"btn btn-info col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => AcceptTask(task._id)}\n                      >\n                        <BsFiletypeDoc />\n                        View Docs\n                      </button>\n                      <button\n                        className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => RejectTask(task._id)}\n                      >\n                        <MdCancel />\n                        Reject\n                      </button>\n                      <button\n                        className=\"btn btn-warning col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => completeTask(task._id)}\n                      >\n                        <PiInfoFill />\n                        Report\n                      </button>\n                      <button\n                        className=\"btn btn-success col-2 d-flex justify-center aline-center gap-2\"\n                        onClick={() => completeTask(task._id)}\n                      >\n                        <FaCheck />\n                        Complete Task\n                      </button>\n                    </div> */}\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeActiveTask;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst ManagerCompletedTask = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const email = localStorage.getItem(\"Email\");\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\r\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\r\n      });\r\n\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching completed tasks:\", error.message);\r\n      setError(\"Error fetching completed tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n      // Schedule the next update after 1 minute (adjust as needed)\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\r\n        ✅ Completed Tasks\r\n        {/* ( {tasks.filter((task) => task.status === \"Completed\").length}) */}\r\n      </h1>\r\n      <p className=\"text-muted\">You can view all Completed task here!</p>{\" \"}\r\n      {loading && (\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          className=\"d-flex aline-center gap-2\"\r\n        >\r\n          <div\r\n            className=\"spinner-grow bg-primary\"\r\n            style={{ width: \"1rem\", height: \"1rem\" }}\r\n            role=\"status\"\r\n          ></div>\r\n\r\n          <span className=\"text-primary fw-bold\">Loading...</span>\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          height: \"80vh\",\r\n          scrollbarWidth: \"thin\",\r\n          scrollbarGutter: \"stable\",\r\n          scrollMargin: \"1rem\"\r\n        }}\r\n        className=\"d-flex flex-column gap-3\"\r\n      >\r\n        {tasks\r\n          .filter(\r\n            (task) =>\r\n              task.status === \"Completed\" &&\r\n              task.employees.some((taskemp) => taskemp.empemail === email)\r\n          )\r\n          .map((task, index) => (\r\n            <details\r\n              style={{\r\n                boxShadow: \"-1px 1px 10px gray\"\r\n              }}\r\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\r\n              key={task.id}\r\n            >\r\n              <summary\r\n                style={{\r\n                  height: \"fit-content\",\r\n                  background:\r\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\r\n                }}\r\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\r\n              >\r\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\r\n                  # Task {index + 1} : {task.Taskname}\r\n                </div>\r\n                <div\r\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\r\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\r\n                >\r\n                  {task.department}\r\n                </div>\r\n                <div className=\"\">\r\n                  <p className=\"btn btn-success m-auto fw-bold\">Completed</p>\r\n                </div>\r\n              </summary>\r\n              <div\r\n                style={{ position: \"relative\" }}\r\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"99.4%\",\r\n                    height: \"100%\",\r\n                    zIndex: \"5\",\r\n                    backgroundColor: \"rgba(0, 128, 0, 0.384)\",\r\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\r\n                  }}\r\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\r\n                >\r\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\r\n                    C O M P L E T E D\r\n                  </h1>\r\n                </div>\r\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\r\n                  <p\r\n                    style={{ height: \"fit-content\" }}\r\n                    className=\"text-start fs-6 form-control\"\r\n                  >\r\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\r\n                    {task.description}\r\n                  </p>\r\n                  <div\r\n                    style={{ height: \"fit-content\" }}\r\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\r\n                  >\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      Created By <br /> <span> {task.managerEmail}</span>\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      Start Date <br />{\" \"}\r\n                      <span>\r\n                        {new Date(task.startDate).toLocaleDateString()}\r\n                      </span>\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      End Date <br />{\" \"}\r\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      <span>\r\n                        Task Status <br /> {task.status}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div\r\n                    style={{ height: \"fit-content\" }}\r\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\r\n                  >\r\n                    <p>\r\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerCompletedTask;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst EmployeeRejectTask = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const email = localStorage.getItem(\"Email\");\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\r\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\r\n      });\r\n\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching completed tasks:\", error.message);\r\n      setError(\"Error fetching completed tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n      // Schedule the next update after 1 minute (adjust as needed\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\r\n        🔴 Rejected Tasks\r\n      </h1>\r\n      <p className=\"text-muted\">You can view all rejected task here!</p>{\" \"}\r\n      {loading && (\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          className=\"d-flex aline-center gap-2\"\r\n        >\r\n          <div\r\n            className=\"spinner-grow bg-primary\"\r\n            style={{ width: \"1rem\", height: \"1rem\" }}\r\n            role=\"status\"\r\n          ></div>\r\n\r\n          <span className=\"text-primary fw-bold\">Loading...</span>\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          height: \"80vh\",\r\n          scrollbarWidth: \"thin\",\r\n          scrollbarGutter: \"stable\",\r\n          scrollMargin: \"1rem\"\r\n        }}\r\n        className=\"d-flex flex-column gap-3\"\r\n      >\r\n        {tasks\r\n          .filter(\r\n            (task) =>\r\n              task.status === \"Rejected\" &&\r\n              task.employees.some((taskemp) => taskemp.empemail === email)\r\n          )\r\n          .map((task, index) => (\r\n            <details\r\n              style={{\r\n                boxShadow: \"-1px 1px 10px gray\"\r\n              }}\r\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\r\n              key={task.id}\r\n            >\r\n              <summary\r\n                style={{ height: \"fit-content\" }}\r\n                className=\"d-flex justify-content-between aline-center form-control bg-black text-white\"\r\n              >\r\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\r\n                  # Task {index + 1} : {task.Taskname}\r\n                </div>\r\n                <div\r\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\r\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\r\n                >\r\n                  {task.department}\r\n                </div>\r\n                <div>\r\n                  <p className=\"btn btn-light m-auto py-1 px-3 fw-bold\">\r\n                    Rejected\r\n                  </p>\r\n                </div>\r\n              </summary>\r\n              <div\r\n                style={{ position: \"relative\" }}\r\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"99.4%\",\r\n                    height: \"100%\",\r\n                    zIndex: \"5\",\r\n                    backgroundColor: \"rgba(5, 128, 8, 0.384)\",\r\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\r\n                  }}\r\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\r\n                >\r\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\r\n                    R E J E C T E D\r\n                  </h1>\r\n                </div>\r\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\r\n                  <p\r\n                    style={{ height: \"fit-content\" }}\r\n                    className=\"text-start fs-6 form-control\"\r\n                  >\r\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\r\n                    {task.description}\r\n                  </p>\r\n                  <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      Created By <br /> <span> {task.managerEmail}</span>\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      Start Date <br />{\" \"}\r\n                      <span>\r\n                        {new Date(task.startDate).toLocaleDateString()}\r\n                      </span>\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      End Date <br />{\" \"}\r\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\r\n                    </p>\r\n                    <p\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      className=\"col-6 col-sm-6 col-md-2\"\r\n                    >\r\n                      <span>\r\n                        Task Status <br /> {task.status}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div\r\n                    style={{ height: \"fit-content\" }}\r\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\r\n                  >\r\n                    <p>\r\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </details>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeRejectTask;\r\n","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\nimport Moment from \"moment\";\nimport BASE_URL from \"../../../Pages/config/config\";\n\nfunction SetLog(props) {\n  const [empName, setEmpName] = useState(null);\n\n  const {\n    employees,\n    setEmployees,\n    selectedEmployee,\n    setSelectedEmployee,\n    attencenceID,\n    setAttencenceID,\n    message,\n    setMessage\n  } = useContext(AttendanceContext);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/api/employee/` + props.data[\"_id\"],\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        );\n        console.log(response.data);\n        setEmployees(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  // hello\n\n  useEffect(() => {\n    const loadPersonalInfoData = async () => {\n      try {\n        const response = await axios.get(\n          `${BASE_URL}/api/personal-info/` + props.data[\"_id\"],\n          {\n            headers: {\n              authorization: localStorage.getItem(\"token\") || \"\"\n            }\n          }\n        );\n        console.log(response.data.FirstName);\n        setEmpName(response.data.FirstName);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    loadPersonalInfoData();\n  }, []);\n\n  // hello\n  const handleUserChange = (employeeID) => {\n    const selectedEmployee = employees.find(\n      (employee) => employee._id === employeeID\n    );\n\n    if (selectedEmployee) {\n      setAttencenceID(selectedEmployee.attendanceObjID);\n      setSelectedEmployee(employeeID);\n      getMessage(employeeID);\n    }\n  };\n\n  const getMessage = async (employeeID) => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/api/attendance/${employeeID}`\n      );\n      const lastEntry = response.data[response.data.length - 1];\n\n      if (lastEntry) {\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\n      } else {\n        setMessage(\"\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching attendance data:\", error);\n    }\n  };\n\n  const handleLogin = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n\n    try {\n      if (!empName) {\n        setMessage(\"Please select a user\");\n        return;\n      }\n\n      const currentTime = Moment().format(\"HH:mm:ss\");\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        loginTime: [currentTime],\n        status: \"login\"\n      });\n      setMessage(\"Login time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording login time:\", error);\n      setMessage(\"Error recording login time\");\n    }\n  };\n\n  const handleLogout = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n    try {\n      if (!empName) {\n        setMessage(\"Please select an employee\");\n        return;\n      }\n\n      const currentTime = Moment().format(\"HH:mm:ss\");\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        logoutTime: [currentTime],\n        status: \"logout\"\n      });\n      setMessage(\"Logout time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording logout time:\", error);\n      setMessage(\"Error recording logout time\");\n    }\n  };\n\n  const handleResume = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n    try {\n      if (!empName) {\n        setMessage(\"Please select an employee\");\n        return;\n      }\n\n      const currentTime = new Date().toLocaleTimeString();\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\n\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        ResumeTime: [currentTime],\n        resumeTimeMS: [currentTimeMs],\n        status: \"resume\"\n      });\n\n      setMessage(\"Resumed time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording resume time:\", error);\n      setMessage(\"Error recording resume time\");\n    }\n  };\n\n  const handleBreak = async () => {\n    let data = employees.filter((val) => {\n      return val.FirstName === empName;\n    });\n    let attencenceID = data[0].attendanceObjID;\n    let selectedEmployee = data[0]._id;\n    try {\n      if (!empName) {\n        setMessage(\"Please select an employee\");\n        return;\n      }\n\n      const currentTime = new Date().toLocaleTimeString();\n      const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\n\n      await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n        employeeId: selectedEmployee,\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        date: new Date().getDate(),\n        breakTime: [currentTime],\n        breakTimeMs: [currentTimeMs],\n        status: \"break\"\n      });\n      setMessage(\"Break time recorded successfully\");\n    } catch (error) {\n      console.error(\"Error recording break time:\", error);\n      setMessage(\"Error recording break time\");\n    }\n  };\n\n  console.log(employees);\n\n  return (\n    <InnerDashContainer>\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\n      <div\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\n        style={{ height: \"fit-content\" }}\n      >\n        <input value={empName} style={{ display: \"none\" }} />\n\n        <div className=\"d-flex gap-3\">\n          <button className=\"btn btn-success\" onClick={handleLogin}>\n            Mark Attendance\n          </button>\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\n            Logout\n          </button>\n          <div className=\"d-flex gap-3\">\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\n              Break\n            </button>\n            <button className=\"btn btn-primary\" onClick={handleResume}>\n              Resume\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {message && <p>{message}</p>}\n    </InnerDashContainer>\n  );\n}\n\nexport default SetLog;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = (props) => {\r\n  // const [employeeId, setEmployeeId] = useState(\"\");\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/employee/` + props.data[\"_id\"],\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      );\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  // const handleFetchAttendance = async () => {\r\n  //   try {\r\n  //     const response = await axios.get(\r\n  //       `${BASE_URL}/api/attendance/${employeeId}`,\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n  //         }\r\n  //       }\r\n  //     );\r\n  //     let singleUser = response.data.filter((val) => {\r\n  //       return val.employeeObjID._id === employeeId;\r\n  //     });\r\n  //     setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching attendance data:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleFetchAttendance();\r\n  }, []);\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {/* <div className=\"d-flex gap-3 \">\r\n        <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  🪪 ({employee.empID}) {employee.FirstName}-{employee.LastName}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          style={{ width: \"fit-content\" }}\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          Fetch Attendance\r\n        </button>\r\n      </div> */}\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n","export default __webpack_public_path__ + \"static/media/HappyBirthday.181e9653.svg\";","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { GiPartyPopper } from \"react-icons/gi\";\r\nimport HappyBirthday from \"./HappyBirthday.svg\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst UpcomingBirthdays = () => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee/` + localStorage.getItem(\"_id\"), {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : \"\",\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"birthday shadow position-relative\">\r\n        <h5\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center\"\r\n        >\r\n          <GiPartyPopper /> Upcoming Birthdays{\" \"}\r\n          <span className=\"text-primary\">({upcomingBirthdays.length})</span>\r\n        </h5>\r\n        <div>\r\n          {upcomingBirthdays.length > 0 ? (\r\n            <div className=\"d-flex flex-column gap-3 py-3 px-3\">\r\n              {upcomingBirthdays.map((employee) => (\r\n                <div\r\n                  style={{ borderBottom: \"1px solid #E3F4F4\" }}\r\n                  className=\"\"\r\n                  key={employee.empID}\r\n                >\r\n                  <div className=\"row\" style={{ verticalAlign: \"middle\" }}>\r\n                    <div className=\"d-flex justify-content-between \">\r\n                      <div className=\"d-flex gap-2\">\r\n                        <div style={{ height: \"45px\", width: \"45px\" }}>\r\n                          <img\r\n                            style={{\r\n                              height: \"100%\",\r\n                              width: \"100%\",\r\n                              border: \"3px solid gray\",\r\n                              borderRadius: \"50%\",\r\n                              overflow: \"hidden\",\r\n                              objectFit: \"cover\"\r\n                            }}\r\n                            src={\r\n                              employee?.data?.profile?.image_url\r\n                                ? employee?.data?.profile?.image_url\r\n                                : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\r\n                            }\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex flex-column my-auto\">\r\n                          <span\r\n                            style={{ fontSize: \"12px\", fontWeight: \"bold\" }}\r\n                          >\r\n                            {employee.empID}\r\n                          </span>\r\n                          <span\r\n                            style={{ fontSize: \"13px\", fontWeight: \"bold\" }}\r\n                            className=\"text-uppercase fw-bold\"\r\n                          >{`${employee.FirstName} ${employee.LastName}`}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        style={{ fontSize: \"13px\" }}\r\n                        className=\"my-auto fw-bolder text-muted\"\r\n                      >\r\n                        Date <br />\r\n                        {employee.DOB}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center aline-items-center gap-3\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ height: \"60%\", width: \"60%\" }}\r\n                className=\"mx-auto\"\r\n                src={HappyBirthday}\r\n                alt=\"Happy Birthday\"\r\n              />\r\n              <p\r\n                style={{ opacity: \"60%\", fontSize: \"13px\" }}\r\n                className=\"text-center w-75 mx-auto  fw-bold text-muted \"\r\n              >\r\n                No upcoming birthdays in the next 7 days.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpcomingBirthdays;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { FaChartLine } from \"react-icons/fa\";\r\nimport \"./chart.css\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst EmpTaskChart = (props) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const id = localStorage.getItem(\"_id\");\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/personal-info/${id}`,\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        setEmail(response.data.Email);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  const calculateRemainingTime = (endDate) => {\r\n    const now = new Date();\r\n    const endDateTime = new Date(endDate);\r\n    let remainingTime = endDateTime - now;\r\n\r\n    if (remainingTime < 0) {\r\n      remainingTime = Math.abs(remainingTime);\r\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\r\n    } else {\r\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\r\n      );\r\n      return { delay: false, days, hours, minutes };\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"${BASE_URL}/api/tasks\");\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(fetchData, 60000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    return () => clearTimeout();\r\n  }, []);\r\n\r\n  // Count of different task statuses for the current employee\r\n  const acceptedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Accepted\"\r\n    )\r\n  ).length;\r\n\r\n  const rejectedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Rejected\"\r\n    )\r\n  ).length;\r\n\r\n  const completedTasksCount = tasks.filter(\r\n    (task) =>\r\n      task.status === \"Pending\" &&\r\n      task.employees.some((emp) => emp.emptaskStatus === \"Completed\")\r\n  ).length;\r\n\r\n  const pendingTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) => taskemp.empemail === email && task.status === \"Pending\"\r\n    )\r\n  ).length;\r\n\r\n  const assignedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email && taskemp.emptaskStatus === \"Task Assigned\"\r\n    )\r\n  ).length;\r\n\r\n  const acceptedTasksNotCompletedOnTimeCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Accepted\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const completedTasksOnTimeCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Completed\" &&\r\n        !calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const lateCompletedAcceptedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Accepted\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const lateCompletedTasksCount = tasks.filter((task) =>\r\n    task.employees.some(\r\n      (taskemp) =>\r\n        taskemp.empemail === email &&\r\n        taskemp.emptaskStatus === \"Completed\" &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    )\r\n  ).length;\r\n\r\n  const barChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"bar\"\r\n      },\r\n      fill: {\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"New Task\",\r\n          \"Pending\",\r\n          \"Accept\",\r\n          \"Complete\",\r\n          \"Reject\",\r\n          \"Overdue\",\r\n          \"Ontime C\",\r\n          \"Late C\"\r\n        ],\r\n        labels: {\r\n          style: {\r\n            fontSize: \"8px\"\r\n          }\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            fontSize: \"14px\"\r\n          }\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: \"50%\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Total Task\",\r\n        data: [\r\n          pendingTasksCount,\r\n          assignedTasksCount,\r\n          acceptedTasksCount,\r\n          completedTasksCount,\r\n          rejectedTasksCount,\r\n          acceptedTasksNotCompletedOnTimeCount,\r\n          completedTasksOnTimeCount,\r\n          lateCompletedAcceptedTasksCount\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={barChartData.options}\r\n          series={barChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpTaskChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./chart.css\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst DepartmentChart = (props) => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const [chartOption, setChartOption] = useState({\r\n    options: {\r\n      labels: [],\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                show: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    series: []\r\n  });\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee/` + localStorage.getItem(\"_id\"), {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map((data) =>\r\n              data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadPersonalInfoData();\r\n  // }, [props.data]);\r\n\r\n  const updateChartOptions = () => {\r\n    const departmentCounts = {};\r\n    departmentData.forEach((department) => {\r\n      departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n    });\r\n\r\n    const labels = Object.keys(departmentCounts);\r\n    const series = labels.map((label) => departmentCounts[label]);\r\n\r\n    setChartOption({\r\n      options: {\r\n        labels: labels,\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  show: true\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: series\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateChartOptions();\r\n  }, [departmentData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ChartCard shadow-sm \">\r\n        <div className=\"ChartHeader\">\r\n          <h5 className=\"fw-bolder d-flex gap-3\">Employee By Department</h5>\r\n        </div>\r\n        <Chart\r\n          options={chartOption.options}\r\n          series={chartOption.series}\r\n          type=\"donut\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentChart;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport NoticeBadge from \"../../../img/NoticeBadge.svg\";\r\nimport { TiDeleteOutline } from \"react-icons/ti\";\r\nimport BASE_URL from \"../../../Pages/config/config.js\";\r\n\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport axios from \"axios\";\r\nconst NoticeBoard = () => {\r\n  const [notice, setNotice] = useState([]);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.Notice);\r\n        setNotice(response.data.Notice);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"Socket:\", socket?.id);\r\n    if (socket) {\r\n      socket.on(\"notice\", (data) => {\r\n        setNotice((prev) => [data, ...prev]);\r\n      });\r\n      socket.on(\"noticeDelete\", (data) => {\r\n        if (data) {\r\n          loadEmployeeData();\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n  const pdfHandler = (val) => {\r\n    console.log(val.attachments);\r\n    window.open(`${BASE_URL}/${val.attachments}`, \"_blank\", \"noreferrer\");\r\n    // window.open(path, \"_blank\")\r\n  };\r\n  const deleteHandler = (id) => {\r\n    axios\r\n      .post(`${BASE_URL}/api/noticeDelete`, { noticeId: id })\r\n      .then((res) => {\r\n        alert(\"Notice delete\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container box-shadow: 0 4px 10px 0 rgb(137 137 137 / 25%); p-0 h-100\">\r\n      <div className=\"birthday shadow position-relative\">\r\n        <h5\r\n          style={{\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            backgroundColor: \"var(--primaryDashColorDark)\",\r\n            color: \"var(--primaryDashMenuColor)\"\r\n          }}\r\n          className=\"fw-bolder pb-3 px-3 pt-3 d-flex justify-content-between gap-0 text-center\"\r\n        >\r\n          Notice Board <span className=\"text-primary\">({notice.length})</span>\r\n        </h5>\r\n        <div\r\n          className=\"mainbirth\"\r\n          style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n        >\r\n          {notice.length > 0 ? (\r\n            <table className=\"table table-striped mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"cursor-pointer\" style={{ width: \"80%\" }}>\r\n                    Notice\r\n                  </th>\r\n                  <th style={{ width: \"80%\" }}>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {notice\r\n                  .filter(\r\n                    (val, i, ar) =>\r\n                      ar.findIndex((item) => item.noticeId === val.noticeId) ===\r\n                      i\r\n                  )\r\n                  .map((val) => (\r\n                    <tr key={val.noticeId} style={{ cursor: \"pointer\" }}>\r\n                      <td\r\n                        onClick={() => pdfHandler(val.attachments)}\r\n                      >{`${val.notice}`}</td>\r\n                      <td\r\n                        style={{\r\n                          fontSize: \"22px\",\r\n                          color: \"red\",\r\n                          textAlign: \"center\"\r\n                        }}\r\n                      >\r\n                        <TiDeleteOutline\r\n                          onClick={() => deleteHandler(val.noticeId)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div\r\n              className=\"d-flex flex-column justify-content-center aline-items-center gap-3\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n            >\r\n              <img\r\n                style={{ height: \"70%\", width: \"60%\" }}\r\n                className=\"mx-auto\"\r\n                src={NoticeBadge}\r\n                alt=\"Happy Birthday\"\r\n              />\r\n              <p\r\n                style={{ opacity: \"60%\", fontSize: \"13px\" }}\r\n                className=\"text-center w-75 mx-auto  fw-bold text-muted \"\r\n              >\r\n                Notice Not Assigned\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // <div className=\"container box-shadow: 0 4px 10px 0 rgb(137 137 137 / 25%); mt-4 \">\r\n    //   <div className=\"birthday\">\r\n    //     <h4 className=\"fw-bolder d-flex text-muted gap-0 text-center\">\r\n    //       Notice Board{\" \"}\r\n    //       <span className=\"text-primary mx-2\">\r\n    //         ({notice.filter((val, i, ar) => ar.findIndex(item => item.noticeId === val.noticeId) === i).length})\r\n    //       </span>\r\n    //     </h4>\r\n    //     <div\r\n    //       className=\"mainbirth\"\r\n    //       style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n    //     >\r\n    //       {notice.length > 0 ? (\r\n    //         <table className=\"table table-striped mt-3\">\r\n    //           <thead>\r\n    //             <tr>\r\n\r\n    //               <th className='cursor-pointer' style={{ width: \"100%\" }}>Notice</th>\r\n\r\n    //             </tr>\r\n    //           </thead>\r\n    //           <tbody>\r\n    //             {notice.filter((val, i, ar) => ar.findIndex(item => item.noticeId === val.noticeId) === i).map((val) => (\r\n    //               <tr key={val.noticeId} style={{cursor: \"pointer\"}} >\r\n\r\n    //                 <td  onClick={()=>pdfHandler(val)}>{`${val.notice}`}</td>\r\n\r\n    //               </tr>\r\n    //             ))}\r\n    //           </tbody>\r\n    //         </table>\r\n    //       ) : (\r\n    //         <p>No Notice</p>\r\n    //       )}\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default NoticeBoard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport { css } from \"@emotion/core\";\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./profilePage.css\";\r\nimport { FaCamera, FaEye, FaFilePdf, FaRegEdit } from \"react-icons/fa\";\r\nimport { IoMdDownload } from \"react-icons/io\";\r\nimport FloralAbstract from \"../../EmpPresonal/FloralAbstract.jpg\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { IoArrowBackCircle, IoEye } from \"react-icons/io5\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst EmpProfile = (props) => {\r\n  const [personalInfoData, setPersonalInfoData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [activeSection, setActiveSection] = useState(\"personalInfo\");\r\n  const [showDownloadbtn, setShowDownloadbtn] = useState(false);\r\n  const [visibleDocs, setVisibleDocs] = useState(true);\r\n\r\n  const loadPersonalInfoData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/personal-info/` + localStorage.getItem(\"_id\"), {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        const data = response.data;\r\n        setPersonalInfoData(data);\r\n        setLoading(false);\r\n\r\n        const temp = {\r\n          data,\r\n          FirstName: data[\"FirstName\"] || \"Not Avaiable\",\r\n          MiddleName: data[\"MiddleName\"] || \"Not Avaiable\",\r\n          LastName: data[\"LastName\"] || \"Not Avaiable\",\r\n          empID: data[\"empID\"] || \"Not Avaiable\",\r\n          Gender: data[\"Gender\"] || \"Not Avaiable\",\r\n          ContactNo: data[\"ContactNo\"] || \"Not Avaiable\",\r\n          Email: data[\"Email\"] || \"Not Avaiable\",\r\n          PANcardNo: data[\"PANcardNo\"] || \"Not Avaiable\",\r\n          DOB: data[\"DOB\"].slice(0, 10) || \"Not Avaiable\",\r\n          BloodGroup: data[\"BloodGroup\"] || \"Not Avaiable\",\r\n          EmergencyContactNo: data[\"EmergencyContactNo\"] || \"Not Avaiable\",\r\n          Hobbies: data[\"Hobbies\"] || \"Not Avaiable\",\r\n          PresentAddress: data[\"PresentAddress\"] || \"Not Avaiable\",\r\n          PermanetAddress: data[\"PermanetAddress\"] || \"Not Avaiable\",\r\n          RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n          DateOfJoining: data[\"DateOfJoining\"].slice(0, 10),\r\n\r\n          DepartmentName: data[\"department\"][0]\r\n            ? data[\"department\"][0][\"DepartmentName\"]\r\n            : \"\",\r\n          Account:\r\n            data[\"Account\"] === 1\r\n              ? \"Admin\"\r\n              : data[\"Account\"] === 2\r\n              ? \"HR\"\r\n              : data[\"Account\"] === 3\r\n              ? \"Employee\"\r\n              : data[\"Account\"] === 4\r\n              ? \"Manager\"\r\n              : \"\",\r\n          PositionName: data[\"position\"][0]\r\n            ? data[\"position\"][0][\"PositionName\"]\r\n            : \"\"\r\n        };\r\n\r\n        setRowData([temp]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPersonalInfoData();\r\n  }, [props.data]);\r\n\r\n  const onToggleSection = (section) => {\r\n    setActiveSection(section);\r\n  };\r\n\r\n  const onPersonalInfoDelete = (e) => {\r\n    console.log(e);\r\n    if (window.confirm(\"Are you sure to delete this record? \")) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/personalInfo/${e}`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(() => {\r\n          loadPersonalInfoData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    if (props.back) {\r\n      return <React.Fragment />;\r\n    }\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => props.onEditPersonalInfo(params.data.data)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"33rem\",\r\n        background: `url(${FloralAbstract})`,\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        overflow: \"hidden\"\r\n      }}\r\n      className=\" m-0 p-0 rounded-3 bg-white shadow\"\r\n    >\r\n      {rowData.map((items, index) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgba(258,258,258,.95)\",\r\n              position: \"relative\"\r\n            }}\r\n            className=\"d-flex flex-column gap-3 py-2 h-100\"\r\n            key={index}\r\n          >\r\n            <div\r\n              className=\"d-flex flex-column gap-2\"\r\n              style={{ width: \"100%\", padding: \"1rem 1rem\" }}\r\n            >\r\n              <div\r\n                className=\"mx-auto\"\r\n                style={{\r\n                  height: \"120px\",\r\n                  width: \"120px\",\r\n                  border: \"6px solid #39A7FF\",\r\n                  borderRadius: \"50%\",\r\n                  position: \"relative\"\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                    borderRadius: \"50%\",\r\n                    objectFit: \"cover\"\r\n                  }}\r\n                  src={\r\n                    items?.data?.profile?.image_url\r\n                      ? items?.data?.profile?.image_url\r\n                      : \"https://a.storyblok.com/f/191576/1200x800/215e59568f/round_profil_picture_after_.webp\"\r\n                  }\r\n                  alt=\"employee\"\r\n                />\r\n                <button\r\n                  style={{\r\n                    height: \"30px\",\r\n                    width: \"30px\",\r\n                    borderRadius: \"50%\",\r\n                    border: \"3px solid white\",\r\n                    position: \"absolute\",\r\n                    bottom: \"0\",\r\n                    right: \"0\"\r\n                  }}\r\n                  className=\"btn btn-primary text-white d-flex p-1 \"\r\n                >\r\n                  <FaCamera className=\"m-auto\" />\r\n                </button>\r\n              </div>\r\n              <p\r\n                style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\r\n                className=\"btn btn-success px-2 py-0 m-2 rounded-5 fw-bold shadow\"\r\n              >\r\n                {items.empID}\r\n              </p>\r\n              {/* <p className=\"m-auto fw-bold fs-6\">{items.empID}</p> */}\r\n              <h3 className=\"text-capitalize my-0 fw-bold text-muted text-center\">\r\n                {items.FirstName} {personalInfoData.LastName}\r\n              </h3>\r\n              <p className=\"text-capitalize my-0 fw-bold text-center\">\r\n                {items.RoleName} {items.DepartmentName}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpProfile;\r\n","import React, { useState } from \"react\";\r\nimport \"../../HrManager/DashboardHR.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeaveApplicationEmpTable from \"../EmpLeave/LeaveApplicationEmp\";\r\nimport HolidayList from \"../../../Pages/LeaveCalendar/HolidayList\";\r\nimport UpcomingBirthdays from \"./CountData/UpcomingBirthdays\";\r\nimport EmpTaskChart from \"./EmpChart.jsx/EmpTaskChart\";\r\nimport EmpTaskCount from \"./CountData/EmpTaskCount\";\r\n// import DepartmentChart from \"./EmpChart.jsx/DepartmentChart\";\r\nimport DepartmentChart from \"./EmpChart.jsx/DepartmentChart\";\r\nimport Chart from \"react-apexcharts\";\r\nimport NoticeBoard from \"../Notification/NoticeBoard\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport EmpProfile from \"./CountData/EmpProfile\";\r\n\r\nconst EmpDash = (props) => {\r\n  const [totalEmployeeLeave, setTotalEmployeeLeave] = useState(0);\r\n\r\n  // Update total leave count when LeaveApplicationEmpTable component notifies\r\n  const updateTotalEmployeeLeave = (count) => {\r\n    setTotalEmployeeLeave(count);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row gap-0 mx-0\">\r\n      <div className=\"col-lg-9 mt-5\">\r\n        <div className=\"row row_flex \">\r\n          <div className=\"col-lg-12\">\r\n            {\" \"}\r\n            <EmpTaskChart />\r\n          </div>\r\n          <div className=\"col-lg-6\"> {/* <EmpProfile /> */}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-3\">\r\n        <UpcomingBirthdays />\r\n        <NoticeBoard />\r\n        <div className=\"holiday mt-3\">\r\n          <HolidayList />\r\n        </div>\r\n        <div className=\"col-md-9\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpDash;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst AttendanceDetails = (props) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/employee/` + props.data[\"_id\"],\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      );\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFetchAttendance = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${BASE_URL}/api/attendance/${employeeId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n          }\r\n        }\r\n      );\r\n\r\n      let singleUser = response.data.filter((val) => {\r\n        return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n      });\r\n\r\n      setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchAttendance();\r\n  }, [selectedYear, selectedMonth]); // Add dependencies to re-fetch attendance when year or month changes\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  const calculateMonthlyTotals = () => {\r\n    if (!attendanceData) return null;\r\n\r\n    const monthlyData = attendanceData.years\r\n      .find((yearData) => yearData.year === selectedYear)\r\n      ?.months.find((month) => month.month === selectedMonth);\r\n\r\n    if (monthlyData) {\r\n      const totalWorkingHours = monthlyData.dates.reduce(\r\n        (acc, date) => acc + date.totalLogAfterBreak,\r\n        0\r\n      );\r\n\r\n      const totalPresent = monthlyData.dates.filter(\r\n        (date) => getAttendanceMark(date) === \"P\"\r\n      ).length;\r\n\r\n      const totalAbsent = monthlyData.dates.filter(\r\n        (date) => getAttendanceMark(date) === \"A\"\r\n      ).length;\r\n\r\n      const totalHalfDays = monthlyData.dates.filter(\r\n        (date) => getAttendanceMark(date) === \"H\"\r\n      ).length;\r\n\r\n      return {\r\n        totalWorkingHours,\r\n        totalPresent,\r\n        totalAbsent,\r\n        totalHalfDays\r\n      };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const monthlyTotals = calculateMonthlyTotals();\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && monthlyTotals && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <div className=\"mt-4\">\r\n            <h5>Monthly Totals</h5>\r\n            <p>\r\n              Total Working Hours:{\" \"}\r\n              {millisecondsToTime(monthlyTotals.totalWorkingHours)}\r\n            </p>\r\n            <p>Total Present: {monthlyTotals.totalPresent}</p>\r\n            <p>Total Absent: {monthlyTotals.totalAbsent}</p>\r\n            <p>Total Half-Days: {monthlyTotals.totalHalfDays}</p>\r\n          </div>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">{/* ... (unchanged) */}</tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`}\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          {/* ... (unchanged) */}\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceDetails;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { TfiReload } from \"react-icons/tfi\";\r\n// import { FaCircleInfo } from \"react-icons/fa6\";\r\n\r\n// const AttendanceDetails = (props) => {\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [attendanceData, setAttendanceData] = useState(null);\r\n//   const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n//   const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n\r\n//   const [hoveredDate, setHoveredDate] = useState(null);\r\n//   const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n//   const [presentCount, setPresentCount] = useState(0);\r\n//   const [absentCount, setAbsentCount] = useState(0);\r\n//   const [halfDayCount, setHalfDayCount] = useState(0);\r\n//   const [totalPresentTime, setTotalPresentTime] = useState(0);\r\n//   const [totalAbsentTime, setTotalAbsentTime] = useState(0);\r\n//   const [totalHalfDayTime, setTotalHalfDayTime] = useState(0);\r\n\r\n//   const employeeId = localStorage.getItem(\"_id\");\r\n\r\n//   const handleMouseEnter = (date) => {\r\n//     setHoveredDate(date);\r\n//   };\r\n\r\n//   const handleMouseLeave = () => {\r\n//     setHoveredDate(null);\r\n//   };\r\n\r\n//   const handleInfoMouseEnter = () => {\r\n//     setIsInfoHovering(true);\r\n//   };\r\n\r\n//   const handleInfoMouseLeave = () => {\r\n//     setIsInfoHovering(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchEmployees();\r\n//   }, []);\r\n\r\n//   const fetchEmployees = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         \"${BASE_URL}/api/employee/\" + props.data[\"_id\"],\r\n//         {\r\n//           headers: {\r\n//             authorization: localStorage.getItem(\"token\") || \"\"\r\n//           }\r\n//         }\r\n//       );\r\n//       setEmployees(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching employees:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFetchAttendance = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `${BASE_URL}/api/attendance/${employeeId}`,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n//           }\r\n//         }\r\n//       );\r\n\r\n//       let singleUser = response.data.filter((val) => {\r\n//         return val.employeeObjID && val.employeeObjID._id === employeeId;\r\n//       });\r\n\r\n//       setAttendanceData(singleUser.length > 0 ? singleUser[0] : null);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching attendance data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     handleFetchAttendance();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (attendanceData) {\r\n//       let presentCount = 0;\r\n//       let absentCount = 0;\r\n//       let halfDayCount = 0;\r\n//       let totalPresentTime = 0;\r\n//       let totalAbsentTime = 0;\r\n//       let totalHalfDayTime = 0;\r\n\r\n//       attendanceData.years.forEach((year) => {\r\n//         year.months.forEach((month) => {\r\n//           month.dates.forEach((date) => {\r\n//             const attendanceMark = getAttendanceMark(date);\r\n\r\n//             if (attendanceMark === \"P\") {\r\n//               presentCount++;\r\n//               totalPresentTime += date.totalLogAfterBreak;\r\n//             } else if (attendanceMark === \"A\") {\r\n//               absentCount++;\r\n//               totalAbsentTime += date.totalLogAfterBreak;\r\n//             } else if (attendanceMark === \"H\" || attendanceMark === \"L\") {\r\n//               halfDayCount++;\r\n//               totalHalfDayTime += date.totalLogAfterBreak;\r\n//             }\r\n//           });\r\n//         });\r\n//       });\r\n\r\n//       setPresentCount(presentCount);\r\n//       setAbsentCount(absentCount);\r\n//       setHalfDayCount(halfDayCount);\r\n//       setTotalPresentTime(totalPresentTime);\r\n//       setTotalAbsentTime(totalAbsentTime);\r\n//       setTotalHalfDayTime(totalHalfDayTime);\r\n//     }\r\n//   }, [attendanceData]);\r\n\r\n//   const getAttendanceMark = (date) => {\r\n//     const loginTime = date && date.loginTime[0];\r\n//     if (loginTime) {\r\n//       const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n//       if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n//         return \"H\";\r\n//       } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n//         return \"L\";\r\n//       }\r\n//     }\r\n//     return loginTime ? \"P\" : \"A\";\r\n//   };\r\n//   const millisecondsToTime = (milliseconds) => {\r\n//     const millisecond = Math.floor(milliseconds);\r\n//     const seconds = Math.floor(milliseconds / 1000);\r\n//     const minutes = Math.floor(seconds / 60);\r\n//     const hours = Math.floor(minutes / 60);\r\n\r\n//     const formattedHours = String(hours).padStart(2, \"0\");\r\n//     const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n//     const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n//     const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n//     return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n//   };\r\n//   // ... (existing code)\r\n\r\n//   return (\r\n//     <div className=\"d-flex flex-column p-5 gap-3\">\r\n//       {attendanceData && (\r\n//         <div>\r\n//           <div>\r\n//             <h3>Attendance Summary:</h3>\r\n//             <p>Present Count: {presentCount}</p>\r\n//             <p>Absent Count: {absentCount}</p>\r\n//             <p>Half-Day Count: {halfDayCount}</p>\r\n//             <p>Total Present Time: {millisecondsToTime(totalPresentTime)}</p>\r\n//             <p>Total Absent Time: {millisecondsToTime(totalAbsentTime)}</p>\r\n//             <p>Total Half-Day Time: {millisecondsToTime(totalHalfDayTime)}</p>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {attendanceData && (\r\n//         <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n//           {/* ... (existing code) */}\r\n//         </div>\r\n//       )}\r\n\r\n//       {attendanceData === null && <div>{/* ... (existing code) */}</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AttendanceDetails;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport \"./notification.css\";\r\nimport BASE_URL from \"../../../Pages/config/config.js\";\r\n\r\nconst Notification = () => {\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedNotification, setSelectedNotification] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const email = localStorage.getItem(\"Email\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setNotification(response.data.Notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"taskNotificationReceived\", () => {\r\n        loadEmployeeData();\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    // Check if all notifications are selected and update the \"Select All\" checkbox accordingly\r\n    setSelectAll(\r\n      notification &&\r\n        notification.length > 0 &&\r\n        selectedNotification.length === notification.length\r\n    );\r\n  }, [selectedNotification, notification]);\r\n\r\n  const addSelectedNotification = (val) => {\r\n    const isChecked = selectedNotification.some(\r\n      (noti) => noti.taskId === val.taskId\r\n    );\r\n\r\n    if (isChecked) {\r\n      setSelectedNotification((prevNotification) =>\r\n        prevNotification.filter((noti) => noti.taskId !== val.taskId)\r\n      );\r\n    } else {\r\n      setSelectedNotification([...selectedNotification, val]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    setSelectAll(!selectAll);\r\n    setSelectedNotification(selectAll ? [] : [...notification]);\r\n  };\r\n  const clearAllHandler = () => {\r\n    if (notification.length > 0) {\r\n      console.log(\"clearALL\");\r\n      axios\r\n        .post(\r\n          `${BASE_URL}/api/selectedNotificationDelete`,\r\n          { email },\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setNotification(response.data.result.Notification);\r\n          socket.emit(\"notificationPageUpdate\", true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const multiNotificationDeleteHandler = () => {\r\n    if (selectedNotification.length > 0) {\r\n      const taskIDArray = selectedNotification.map((val) => val.taskId);\r\n      const data = {\r\n        employeeMail: email,\r\n        tasks: taskIDArray\r\n      };\r\n      if (selectAll) {\r\n        clearAllHandler();\r\n      } else {\r\n        axios\r\n          .post(`${BASE_URL}/api/multiSelectedNotificationDelete`, data, {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          })\r\n          .then((response) => {\r\n            setNotification(response.data.result.Notification);\r\n            setSelectedNotification([]);\r\n            console.log(\"emittted\");\r\n            socket.emit(\"notificationPageUpdate\", true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const notificationDeleteHandler = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .post(\r\n        `${BASE_URL}/api/notificationDeleteHandler/${id}`,\r\n        { email },\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setNotification(response.data.result.Notification);\r\n        setSelectedNotification([]);\r\n        console.log(\"emittted\");\r\n        socket.emit(\"notificationPageUpdate\", true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(notification);\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <form className=\"d-flex col-8 flex-column gap-3\">\r\n          <div>\r\n            <div className=\"p-2\">\r\n              {\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"\"\r\n                id=\"\"\r\n                onChange={toggleSelectAll}\r\n                checked={selectAll}\r\n              />{\" \"}\r\n              <span>Select All</span>\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Select</th>\r\n                  <th scope=\"col\">task Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {notification &&\r\n                  notification.map((val, index) => (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={() => addSelectedNotification(val)}\r\n                          checked={selectedNotification.some(\r\n                            (noti) => noti.taskId === val.taskId\r\n                          )}\r\n                        />\r\n                      </th>\r\n                      <td>{val.taskName}</td>\r\n                      <td>{val.senderMail}</td>\r\n                      {val.status === \"unseen\" ? (\r\n                        <td>Unread</td>\r\n                      ) : (\r\n                        <td>read</td>\r\n                      )}\r\n                      <td>\r\n                        <ImBin\r\n                          onClick={() => notificationDeleteHandler(val.taskId)}\r\n                          className=\"bin\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <button\r\n        className=\"Notification_delete\"\r\n        onClick={multiNotificationDeleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PersonalInfo from \"../EmpPresonal/PersonalInfo.jsx\";\nimport Education from \"../EmpEducation/Education.jsx\";\nimport FamilyInfo from \"../EmpFamily/FamilyInfo.jsx\";\nimport WorkExperience from \"../EmpWorkExp/WorkExperience.jsx\";\nimport LeaveApplicationEmp from \"../EmpLeave/LeaveApplicationEmp.jsx\";\n// import NotFound404 from \"../../Pages/PageNot/NotFound404.jsx\";\nimport EmployeeNewTask from \"../EmployeeTaskManagement/EmployeeNewTask.jsx\";\nimport EmployeeActiveTask from \"../EmployeeTaskManagement/EmployeeActiveTask.jsx\";\nimport EmployeeCompleteTask from \"../EmployeeTaskManagement/EmployeeCompleteTask.jsx\";\nimport EmployeeRejectTask from \"../EmployeeTaskManagement/EmployeeRejectTask.jsx\";\nimport Attendance from \"../attendance/Attendance.jsx\";\nimport AttendanceList from \"../attendance/AttendanceList.jsx\";\nimport EmpDash from \"../Dashboard/EmpDash.jsx\";\nimport LeaveApplicationEmpTable from \"../EmpLeave/LeaveApplicationEmp.jsx\";\n// import DepartmentChart from \"../../../Pages/Chart/DepartmentChart\";\nimport DashContainer from \"../../DashContainer.jsx\";\nimport SelfAttendance from \"../attendance/SelfAttendance.jsx\";\nimport DepartmentChart from \"../Dashboard/EmpChart.jsx/DepartmentChart.jsx\";\nimport UpcomingBirthdays from \"../Dashboard/CountData/UpcomingBirthdays.jsx\";\nimport Notification from \"../Notification/Notification.jsx\";\nconst RouterContent = ({ data }) => {\n  return (\n    // <DashContainer>\n    <div\n      style={{ height: \"100%\", width: \"100%\", overflow: \"auto\" }}\n      className=\"empSidebar d-flex flex-column\"\n    >\n      <Route path=\"/employee/dashboard\" exact component={EmpDash} />\n      <Route\n        exact\n        path=\"/employee/:id/personal-info\"\n        render={(props) => <PersonalInfo data={data} back={false} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/education\"\n        render={(props) => <Education data={data} back={false} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/family-info\"\n        render={(props) => <FamilyInfo data={data} back={false} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/work-experience\"\n        render={(props) => <WorkExperience data={data} back={false} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/leave-application-emp\"\n        render={(props) => <LeaveApplicationEmp data={data} />}\n      />\n      <Route\n        exact\n        path=\"/employee/leaveApplication\"\n        render={(props) => <LeaveApplicationEmpTable data={data} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/leave-application-emp\"\n        render={(props) => <LeaveApplicationEmp data={data} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/attenDance\"\n        render={(props) => <Attendance data={data} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/attendanceList\"\n        render={(props) => <AttendanceList data={data} />}\n      />\n      <Route\n        exact\n        path=\"/employee/:id/departmentchart\"\n        render={(props) => <DepartmentChart data={data} />}\n      />\n      <Route path=\"/employee/newTask\" exact component={EmployeeNewTask} />\n      <Route path=\"/employee/activeTask\" exact component={EmployeeActiveTask} />\n      <Route\n        path=\"/employee/taskcomplete\"\n        exact\n        component={EmployeeCompleteTask}\n      />\n      <Route path=\"/employee/taskreject\" exact component={EmployeeRejectTask} />\n      <Route\n        path=\"/employee/:id/selfAtteend\"\n        exact\n        component={SelfAttendance}\n      />\n      <Route\n        path=\"/employee/:id/birthDay\"\n        exact\n        component={UpcomingBirthdays}\n      />\n      <Route path=\"/employee/notification\" exact component={Notification} />\n    </div>\n    // </DashContainer>\n  );\n};\n\nexport default RouterContent;\n","// import React, { Component } from \"react\";\n// import { HashRouter as Router, Route, Link } from \"react-router-dom\";\n// import { Redirect } from \"react-router-dom\";\n// import NavBar from \"../../Pages/Navbar/NavBar.jsx\";\n// import PersonalInfo from \"./PersonalInfo.jsx\";\n// import Education from \"./Education.jsx\";\n// import FamilyInfo from \"./FamilyInfo.jsx\";\n// import WorkExperience from \"./WorkExperience.jsx\";\n// import LeaveApplicationEmp from \"./LeaveApplicationEmp.jsx\";\n// import NotFound404 from \"../../Pages/PageNot/NotFound404.jsx\";\n// import EmployeeNewTask from \"./EmployeeTaskManagement/EmployeeNewTask.jsx\";\n// import EmployeeActiveTask from \"./EmployeeTaskManagement/EmployeeActiveTask.jsx\";\n// import Attendance from \"./attendance/Attendance.jsx\";\n// import AttendanceList from \"./attendance/AttendanceList.jsx\";\n// import EmpDash from \"./Dashboard/EmpDash.jsx\";\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import {\n//   faUsers,\n//   faUser,\n//   faFileAlt,\n//   faUniversity,\n//   faBriefcase,\n//   faMale\n// } from \"@fortawesome/free-solid-svg-icons\";\n// import DashContainer from \"../DashContainer.jsx\";\n\n// class DashboardEmployee extends Component {\n//   state = {\n//     redirect: true,\n//     checked: true\n//   };\n//   handleChange = (checked) => {\n//     console.log(\"switch\");\n\n//     if (this.state.checked == true) {\n//       document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-none\");\n//     } else {\n//       document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-block\");\n//     }\n//     this.setState({ checked });\n//   };\n\n//   Navigation = [\n//     {\n//       icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/dashboard\",\n//       LinkName: \"Dashboard\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/\" + this.props.data[\"_id\"] + \"/personal-info\",\n//       LinkName: \"Profile\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faUniversity} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/\" + this.props.data[\"_id\"] + \"/education\",\n//       LinkName: \"Education\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faMale} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/\" + this.props.data[\"_id\"] + \"/family-info\",\n//       LinkName: \"Dependents\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faBriefcase} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/\" + this.props.data[\"_id\"] + \"/work-experience\",\n//       LinkName: \"WorkExp\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faFileAlt} className=\"sidebar-icon\" />,\n//       Linkrute:\n//         \"/employee/\" + this.props.data[\"_id\"] + \"/leave-application-emp\",\n//       LinkName: \"Leave\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/newTask\",\n//       LinkName: \"New Task\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/activeTask\",\n//       LinkName: \"Active Task\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/\" + this.props.data[\"_id\"] + \"/attendance\",\n//       LinkName: \"Attendance\"\n//     },\n//     {\n//       icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n//       Linkrute: \"/employee/\" + this.props.data[\"_id\"] + \"/attendanceList\",\n//       LinkName: \"Attendance List\"\n//     }\n//   ];\n\n//   render() {\n//     return (\n//       <DashContainer>\n//         <Router>\n//           <NavBar\n//             loginInfo={this.props.data}\n//             checked={this.state.checked}\n//             handleChange={this.handleChange}\n//             onLogout={this.props.onLogout}\n//           />\n//           <div style={{ height: \"94vh\", width: \"100%\" }} className=\"d-flex\">\n//             <div\n//               style={{ height: \"100%\" }}\n//               className=\"empSidebar bg-dark p-3 d-flex flex-column gap-4 \"\n//             >\n//               {this.Navigation.map((navigation) => (\n//                 <Link\n//                   className=\"text-white text-decoration-none fw-bold d-flex justify-content-between \"\n//                   key={navigation}\n//                   to={navigation.Linkrute}\n//                 >\n//                   <div\n//                     style={{ width: \"fit-content\" }}\n//                     className=\"d-flex gap-2\"\n//                   >\n//                     <p\n//                       style={{\n//                         height: \"20px\",\n//                         width: \"20px\",\n//                         alignItems: \"center\"\n//                       }}\n//                       className=\"m-auto d-flex rounded-5  justify-content-center\"\n//                     >\n//                       {navigation.icon}\n//                     </p>\n//                     <p\n//                       style={{ whiteSpace: \"pre\" }}\n//                       className=\"my-auto fw-normal\"\n//                     >\n//                       {navigation.LinkName}\n//                     </p>\n//                   </div>\n//                   <span className=\"my-auto fs-4\">+</span>\n//                 </Link>\n//               ))}\n//             </div>\n\n//             <div\n//               div\n//               style={{ height: \"100%\", width: \"100%\" }}\n//               className=\"empSidebar d-flex flex-column\"\n//             >\n//               <Route path=\"/employee/dashboard\" exact component={EmpDash} />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/personal-info\"\n//                 render={(props) => (\n//                   <PersonalInfo data={this.props.data} back={false} />\n//                 )}\n//               />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/education\"\n//                 render={(props) => (\n//                   <Education data={this.props.data} back={false} />\n//                 )}\n//               />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/family-info\"\n//                 render={(props) => (\n//                   <FamilyInfo data={this.props.data} back={false} />\n//                 )}\n//               />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/work-experience\"\n//                 render={(props) => (\n//                   <WorkExperience data={this.props.data} back={false} />\n//                 )}\n//               />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/leave-application-emp\"\n//                 render={(props) => (\n//                   <LeaveApplicationEmp data={this.props.data} />\n//                 )}\n//               />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/attenDance\"\n//                 render={(props) => <Attendance data={this.props.data} />}\n//               />\n//               <Route\n//                 exact\n//                 path=\"/employee/:id/attendanceList\"\n//                 render={(props) => <AttendanceList data={this.props.data} />}\n//               />\n//               <Route\n//                 path=\"/employee/newTask\"\n//                 exact\n//                 component={EmployeeNewTask}\n//               />\n//               <Route\n//                 path=\"/employee/activeTask\"\n//                 exact\n//                 component={EmployeeActiveTask}\n//               />\n//             </div>\n//           </div>\n//         </Router>\n//       </DashContainer>\n//     );\n//   }\n// }\n\n// export default DashboardEmployee;\n\nimport React, { useState } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUsers,\n  faUser,\n  faFileAlt,\n  faUniversity,\n  faBriefcase,\n  faMale\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NavBar from \"../../Pages/Navbar/NavBar.jsx\";\nimport DashContainer from \"../DashContainer.jsx\";\nimport Sidebar from \"./sidebar/Sidebar.jsx\";\nimport RouterContent from \"./router/Routes.jsx\";\nimport { BsBuildingsFill } from \"react-icons/bs\";\nimport { FaAddressBook } from \"react-icons/fa\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { FaCalendarCheck } from \"react-icons/fa6\";\nimport { MdDashboard, MdMenuOpen, MdTaskAlt } from \"react-icons/md\";\nimport { TbDeviceIpadMinus } from \"react-icons/tb\";\nimport { MdHolidayVillage } from \"react-icons/md\";\nimport { FcLeave } from \"react-icons/fc\";\n\nconst DashboardEmployee = (props) => {\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = () => {\n    console.log(\"switch\");\n\n    if (checked) {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-none\");\n    } else {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-block\");\n    }\n    setChecked(!checked);\n  };\n\n  const Navigation = [\n    {\n      icon: <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />,\n      name: \"Dashboard\",\n      navLinks: [{ to: \"/employee/dashboard\", label: \"Dashboard\" }]\n    },\n    {\n      icon: <FaUserCircle />,\n      name: \"Profile\",\n      navLinks: [\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/personal-info\",\n          label: \"Profile\"\n        }\n      ]\n    },\n\n    {\n      icon: <FontAwesomeIcon icon={faUniversity} className=\"sidebar-icon\" />,\n      name: \"Dependents\",\n      navLinks: [\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/family-info\",\n          label: \"Dependents\"\n        }\n      ]\n    },\n    {\n      icon: <FontAwesomeIcon icon={faMale} className=\"sidebar-icon\" />,\n      name: \"Education\",\n      navLinks: [\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/education\",\n          label: \"Education\"\n        },\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/departmentchart\",\n          label: \"dep chsrt\"\n        },\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/birthDay\",\n          label: \"birth\"\n        }\n      ]\n    },\n    {\n      icon: <FontAwesomeIcon icon={faBriefcase} className=\"sidebar-icon\" />,\n      name: \"Work Exp\",\n      navLinks: [\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/work-experience\",\n          label: \"WorkExp\"\n        }\n      ]\n    },\n\n    {\n      icon: <FaCalendarCheck />,\n      name: \"Attendance\",\n      navLinks: [\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/attendance\",\n          label: \"Create Attendance\"\n        },\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/attendanceList\",\n          label: \"View Attendance\"\n        },\n        {\n          to: \"/employee/\" + props.data[\"_id\"] + \"/selfAtteend\",\n          label: \"self Attendance\"\n        }\n      ]\n    },\n    {\n      icon: <FcLeave />,\n      name: \"Leave\",\n      navLinks: [\n        // {\n        //   to: \"/employee/\" + props.data[\"_id\"] + \"/leave-application-emp\",\n        //   label: \"Apply Leave\"\n        // },\n        {\n          to: \"/employee/leaveApplication\",\n          label: \"Apply Leave\"\n        }\n      ]\n    },\n    {\n      icon: <MdTaskAlt />,\n      name: \"Task\",\n      navLinks: [\n        { to: \"/employee/newTask\", label: \" New Task\" },\n        { to: \"/employee/activeTask\", label: \"Active Task\" },\n        // { to: \"/hr/taskcancle\", label: \"Cancelled Task\" },\n        { to: \"/employee/taskcomplete\", label: \"Completed Task\" },\n        { to: \"/employee/taskreject\", label: \"Rejected Task\" }\n      ]\n    },\n    {\n      icon: <TbDeviceIpadMinus />,\n      name: \"Access\",\n      navLinks: [\n        { to: \"/hr/departmentchart\", label: \"Role\" },\n        { to: \"/hr/position\", label: \"Position\" },\n        { to: \"/hr/department\", label: \"Department\" }\n      ]\n    }\n    // {\n    //   icon: <BsBuildingsFill />,\n    //   name: \"Company\",\n    //   navLinks: [\n    //     { to: \"/hr/company\", label: \"Company List\" }\n    //     // { to: \"/hr/employee\", label: \"Create Employee\" },\n    //   ]\n    // },\n    // {\n    //   icon: <FaAddressBook />,\n    //   name: \"Address\",\n    //   navLinks: [\n    //     { to: \"/hr/country\", label: \"Country\" },\n    //     { to: \"/hr/state\", label: \"State\" },\n    //     { to: \"/hr/city\", label: \"City\" }\n    //   ]\n    // },\n    // {\n    //   icon: <MdHolidayVillage />,\n    //   name: \"Holiday\",\n    //   navLinks: [{ to: \"/hr/holiday\", label: \"Leave Calendar\" }]\n    // },\n    // {\n    //   icon: <MdHolidayVillage />,\n    //   name: \"Profile\",\n    //   navLinks: [{ to: \"/hr/profile\", label: \"Leave Calendar\" }]\n    // }\n  ];\n\n  return (\n    <DashContainer>\n      <Router>\n        <NavBar\n          loginInfo={props.data}\n          checked={checked}\n          handleChange={handleChange}\n          onLogout={props.onLogout}\n        />\n        {/* <div style={{ height: \"94vh\", width: \"100%\" }} className=\"d-flex\">\n          <Sidebar navigation={Navigation} />\n\n\n          <RouterContent data={props.data} />\n        </div> */}\n\n        <div\n          className=\"d-flex\"\n          style={{\n            maxHeight: \"100vh\"\n          }}\n          id=\"main-non-nav\"\n        >\n          <Sidebar navigation={Navigation} />\n          <div className=\"HrDashBG w-100\" id=\"main-area\">\n            <RouterContent data={props.data} />\n          </div>\n        </div>\n      </Router>\n    </DashContainer>\n  );\n};\n\nexport default DashboardEmployee;\n","import React, { useState } from \"react\";\nimport { BsBuildingsFill } from \"react-icons/bs\";\nimport { FaAddressBook } from \"react-icons/fa\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { FaCalendarCheck } from \"react-icons/fa6\";\nimport { MdDashboard, MdMenuOpen, MdTaskAlt } from \"react-icons/md\";\nimport { TbDeviceIpadMinus } from \"react-icons/tb\";\nimport { MdHolidayVillage } from \"react-icons/md\";\n// import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Link } from \"react-router-dom\";\nimport { FcLeave } from \"react-icons/fc\";\n\nconst Sidebar = () => {\n  const [activeCategory, setActiveCategory] = useState(null);\n  const [extended, setExtended] = useState(true);\n\n  const allLinks = [\n    {\n      icon: <MdDashboard />,\n      name: \"Dashboard\",\n      navLinks: [{ to: \"/manager/dashboard\", label: \"Dashboard\" }]\n    },\n    {\n      icon: <FaUserCircle />,\n      name: \"Employee\",\n      navLinks: [\n        { to: \"/manager/employee\", label: \"Employee List\" },\n        { to: \"/manager/salary\", label: \"Salary\" }\n      ]\n    },\n    {\n      icon: <FaCalendarCheck />,\n      name: \"Attendance\",\n      navLinks: [\n        { to: \"/manager/attenDance\", label: \"Create Attendance\" },\n        { to: \"/manager/todaysAttendance\", label: \"TodaysAttendance\" },\n        { to: \"/manager/viewAttenDance\", label: \"View Attendance\" },\n        { to: \"/manager/leave-application-manager\", label: \"View Leave \" }\n      ]\n    },\n    {\n      icon: <FcLeave />,\n      name: \"Leave\",\n      navLinks: [\n        { to: \"/manager/createLeave\", label: \"Apply Leave\" },\n        { to: \"/manager/leaveApplication\", label: \"Pending \" },\n        { to: \"/manager/leaveAccepted\", label: \"Accepted \" },\n        { to: \"/manager/leaveRejected\", label: \"Rejected \" }\n      ]\n    },\n    {\n      icon: <MdTaskAlt />,\n      name: \"Task\",\n      navLinks: [\n        { to: \"/manager/newTask\", label: \"Assign New Task\" },\n        { to: \"/manager/ActiveTask\", label: \"Active Task\" },\n        { to: \"/manager/taskcancle\", label: \"Cancelled Task\" },\n        { to: \"/manager/taskcomplete\", label: \"Completed Task\" },\n        { to: \"/manager/rejectTask\", label: \"Rejected Task\" }\n      ]\n    },\n    {\n      icon: <TbDeviceIpadMinus />,\n      name: \"Administration\",\n      navLinks: [\n        { to: \"/manager/role\", label: \"Role\" },\n        { to: \"/manager/position\", label: \"Position\" },\n        { to: \"/manager/department\", label: \"Department\" }\n      ]\n    },\n    {\n      icon: <BsBuildingsFill />,\n      name: \"Company\",\n      navLinks: [\n        { to: \"/manager/company\", label: \"Company List\" }\n        // { to: \"/manager/employee\", label: \"Create Employee\" },\n      ]\n    },\n    {\n      icon: <FaAddressBook />,\n      name: \"Address\",\n      navLinks: [\n        { to: \"/manager/country\", label: \"Country\" },\n        { to: \"/manager/state\", label: \"State\" },\n        { to: \"/manager/city\", label: \"City\" }\n      ]\n    },\n    {\n      icon: <MdHolidayVillage />,\n      name: \"Holiday\",\n      navLinks: [{ to: \"/manager/holiday\", label: \"Leave Calendar\" }]\n    }\n  ];\n\n  const ExtendClick = () => {\n    setExtended(extended ? false : true);\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100%\",\n        maxHeight: \"100%\",\n        overflowY: \"auto\",\n        overflow: \"inherit\",\n        width: \"fit-content\",\n        backgroundColor: \"var(--primaryDashColorDark)\"\n      }}\n      className=\"d-flex  flex-column gap-2 p-3\"\n    >\n      <h3\n        style={{ borderBottom: \"3px solid green\" }}\n        className=\"fw-bolder text-success justify-content-between py-2 d-flex gap-2\"\n      >\n        <p\n          style={{ display: !extended ? \"none\" : \"block\" }}\n          className=\"my-auto\"\n        >\n          MANAGER\n        </p>{\" \"}\n        <span\n          onClick={ExtendClick}\n          style={{\n            border: \"none\",\n            outline: \"none\",\n            cursor: \"pointer\",\n            transform: `rotate(${!extended ? \"180deg\" : \"0deg\"})`\n          }}\n          className=\"my-auto p-0 fs-2 text-white\"\n        >\n          <MdMenuOpen />\n        </span>\n      </h3>\n\n      {allLinks.map(({ icon, name, navLinks }) => (\n        <div\n          key={name}\n          onMouseEnter={() => setActiveCategory(name)}\n          onMouseLeave={() => setActiveCategory(null)}\n          className=\"position-relative\"\n        >\n          <button\n            style={buttonStyle}\n            className=\"btn p-0 text-white text-start fw-bold gap-2 justify-between w-100 d-flex justify-content-between\"\n          >\n            <div\n              style={{ width: \"fit-content\" }}\n              className=\"d-flex my-auto gap-2\"\n            >\n              <p\n                style={{\n                  height: \"30px\",\n                  width: \"30px\",\n                  alignItems: \"center\",\n                  color: activeCategory === name ? \"#FF9209\" : \"white\"\n                }}\n                className=\"m-auto d-flex rounded-5  justify-content-center fs-3\"\n              >\n                {icon}\n              </p>\n              <p\n                style={{ display: !extended ? \"none\" : \"block\" }}\n                className=\"my-auto\"\n              >\n                {name}\n              </p>\n            </div>\n            <span\n              style={{\n                transform: `rotate(${\n                  activeCategory === name ? \"135deg\" : \"0deg\"\n                })`,\n                transition: \"1s ease\",\n                display: !extended ? \"none\" : \"block\"\n              }}\n              className=\"my-auto fs-4\"\n            >\n              +\n            </span>\n          </button>\n\n          <div\n            style={{\n              ...dropdownStyle,\n              display: activeCategory === name ? \"flex\" : \"none\",\n              backgroundColor: \"var(--primaryDashColorDark)\",\n              width: \"fit-content\"\n            }}\n            className=\"flex-column position-absolute top-0 start-100 py-2 px-2 gap-2 mt-2  \"\n          >\n            {navLinks.map((link) => (\n              <Link className=\"text-decoration-none\" key={link.to} to={link.to}>\n                <div className=\"text-decoration-none flex-nowrap text-start fw-bolder gap-3 text-white d-flex justify-content-between \">\n                  <div\n                    style={{ borderBottom: \"1px solid white\" }}\n                    className=\"d-flex gap-1 flex-nowrap\"\n                  >\n                    <p className=\"m-0\">{link.icon}</p>\n                    <p style={{ whiteSpace: \"pre\" }} className=\"m-auto\">\n                      {link.label}\n                    </p>\n                  </div>\n                  <span style={{}} className=\"my-auto \">\n                    ›\n                  </span>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst buttonStyle = {\n  outline: \"none\",\n  border: \"none\",\n  height: \"3rem\"\n};\n\nconst dropdownStyle = {\n  width: \"250px\",\n  zIndex: \"5\",\n  borderLeft: \"5px solid white\"\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./LeaveApplicationHRTable.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport BASE_URL from \"../../Pages/config/config\";\n\n// *************csv & pdf **************//\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\n// *************csv & pdf **************//\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  margin-top: 45px;\n  border-color: red;\n`;\n\nconst LeaveApplicationHRTable = (props) => {\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchData, setSearchData] = useState(\"\");\n  const [totalLeaves, setTotalLeaves] = useState(0);\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [rowData, setRowData] = useState([]);\n  const email = localStorage.getItem(\"Email\");\n  // ...\n\n  let leaveApplicationHRObj = [];\n  let rowDataT = [];\n\n  const loadLeaveApplicationHRData = () => {\n    axios\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        leaveApplicationHRObj = response.data;\n        console.log(\"response\", response.data);\n        setLeaveApplicationHRData(response.data);\n        setLoading(false);\n\n        rowDataT = [];\n\n        leaveApplicationHRObj.map((data) => {\n          let temp = {\n            data,\n            empID:\n              data[\"employee\"] &&\n              data[\"employee\"][0] &&\n              data[\"employee\"][0][\"empID\"],\n            Name:\n              data[\"employee\"] &&\n              data[\"employee\"][0] &&\n              data[\"employee\"][0][\"FirstName\"] +\n                \" \" +\n                data[\"employee\"][0][\"LastName\"],\n            Leavetype: data[\"Leavetype\"],\n            FromDate: data[\"FromDate\"].slice(0, 10),\n            ToDate: data[\"ToDate\"].slice(0, 10),\n            Reasonforleave: data[\"Reasonforleave\"],\n            hrEmail: data[\"hrEmail\"],\n            Status: status(data[\"Status\"])\n          };\n\n          rowDataT.push(temp);\n        });\n\n        setRowData(rowDataT);\n\n        setTotalLeaves(response.data.length);\n        props.updateTotalLeaves(response.data.length);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // ...\n\n  const onLeaveApplicationHRDelete = (e1, e2) => {\n    console.log(e1, e2);\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\n      axios\n        .delete(`${BASE_URL}/api/leave-application-hr/` + e1 + \"/\" + e2, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          loadLeaveApplicationHRData();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const exportToPDF = () => {\n    window.confirm(\"Are you sure to download Leave record? \");\n    const { rowData } = this.state;\n    // Set A4 landscape dimensions\n    const pdfWidth = 297; // A4 width in mm\n    const pdfHeight = 210; // A4 height in mm\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"mm\",\n      format: [pdfWidth, pdfHeight]\n    });\n\n    doc.setFontSize(18);\n    doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\n    const headers = [\n      \"Emp Id\",\n      \"Leave Type\",\n      \"Start Date\",\n      \"End Date\",\n      \"Remarks\",\n      \"Status\"\n    ];\n    const data = rowData.map((row) => [\n      row.empID,\n      row.Leavetype,\n      row.FromDate,\n      row.ToDate,\n      row.Reasonforleave,\n      row.Status,\n\n      \"\" // Action column - you can customize this based on your requirements\n    ]);\n    doc.setFontSize(12);\n    doc.autoTable({\n      head: [headers],\n      body: data,\n      startY: 25\n    });\n\n    doc.save(\"leaveApplication_data.pdf\");\n  };\n\n  useEffect(() => {\n    loadLeaveApplicationHRData();\n  }, []);\n\n  const renderButton = (params) => {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faTrash}\n        onClick={() =>\n          onLeaveApplicationHRDelete(\n            params.data.data[\"employee\"][0][\"_id\"],\n            params.data.data[\"_id\"]\n          )\n        }\n      />\n    );\n  };\n\n  const renderEditButton = (params) => {\n    console.log(params);\n    return (\n      <FontAwesomeIcon\n        icon={faEdit}\n        onClick={() => props.onEditLeaveApplicationHR(params.data.data)}\n      />\n    );\n  };\n\n  const status = (s) => {\n    if (s == 1) {\n      return \"Pending\";\n    }\n    if (s == 2) {\n      return \"Approved\";\n    }\n    if (s == 3) {\n      return \"Rejected\";\n    }\n  };\n\n  const renderSortIcon = (field) => {\n    if (sortColumn === field) {\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\n    }\n    return null;\n  };\n\n  const sortData = (columnName) => {\n    const { rowData, sortColumn, sortDirection } = this.state;\n    let newSortDirection = \"asc\";\n\n    if (sortColumn === columnName && sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n\n    const sortedData = [...rowData];\n\n    sortedData.sort((a, b) => {\n      const valueA = a[columnName];\n      const valueB = b[columnName];\n\n      let comparison = 0;\n\n      if (valueA > valueB) {\n        comparison = 1;\n      } else if (valueA < valueB) {\n        comparison = -1;\n      }\n\n      return sortDirection === \"desc\" ? comparison * -1 : comparison;\n    });\n\n    setRowData(sortedData);\n    setSortColumn(columnName);\n    setSortDirection(newSortDirection);\n  };\n\n  const pendingLeaves = rowData.filter(\n    (data) => data.Status === \"Pending\"\n  ).length;\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"d-flex justify-between\">\n        <h3 className=\"fw-bold text-muted\">Leave Request ({pendingLeaves})</h3>\n\n        <button\n          className=\"btn px-3 d-flex justify-center  aline-center gap-2\"\n          onClick={exportToPDF}\n        >\n          <BsFillFileEarmarkPdfFill className=\"text-danger fs-4\" />\n          <p className=\"my-auto fs-5 fw-bold\">PDF</p>\n        </button>\n      </div>\n\n      <div id=\"clear-both\" />\n      {!loading ? (\n        <div\n          className=\"mt-3\"\n          style={{\n            overflow: \"auto\",\n            height: \"85vh\",\n            width: \"100%\",\n            scrollbarWidth: \"thin\"\n          }}\n        >\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"empID\")}\n                >\n                  Employee ID {renderSortIcon(\"empID\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"Name\")}\n                >\n                  Emp Name {renderSortIcon(\"Name\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"Leavetype\")}\n                >\n                  Leave Type {renderSortIcon(\"Leavetype\")}\n                </th>\n                <th\n                  s\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"FromDate\")}\n                >\n                  Start Date {renderSortIcon(\"FromDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"ToDate\")}\n                >\n                  End Date {renderSortIcon(\"ToDate\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"Status\")}\n                >\n                  Status {renderSortIcon(\"Status\")}\n                </th>\n                <th\n                  style={{\n                    cursor: \"pointer\",\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\"\n                  }}\n                  onClick={() => sortData(\"Reasonforleave\")}\n                >\n                  Remarks {renderSortIcon(\"Reasonforleave\")}\n                </th>\n                <th\n                  style={{\n                    background: \"linear-gradient(#1D267D, #2F58CD)\",\n                    color: \"white\",\n                    textAlign: \"center\"\n                  }}\n                >\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {rowData\n                .filter((e) => e.Status == \"Pending\" && e.hrEmail === email)\n                .map((data, index) => (\n                  <tr key={index}>\n                    <td className=\"text-uppercase py-1\">{data.empID}</td>\n                    <td className=\"py-1\">{data.Name}</td>\n                    <td className=\"py-1\">{data.Leavetype}</td>\n                    <td className=\"py-1\">{data.FromDate}</td>\n                    <td className=\"py-1\">{data.ToDate}</td>\n                    <td className=\"py-1\">{data.Status}</td>\n                    <td className=\"py-1\">{data.Reasonforleave}</td>\n                    <td className=\"py-1\">\n                      <div\n                        className=\"d-flex gap-3 py-2\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <p title=\"Update\" className=\"m-auto text-primary\">\n                          <FontAwesomeIcon\n                            className=\"m-auto\"\n                            icon={faEdit}\n                            onClick={() =>\n                              props.onEditLeaveApplicationHR(data.data)\n                            }\n                          />\n                        </p>\n                        <p title=\"Delete\" className=\"m-auto text-danger\">\n                          <FontAwesomeIcon\n                            className=\"m-auto\"\n                            icon={faTrash}\n                            onClick={() =>\n                              onLeaveApplicationHRDelete(\n                                data.data[\"employee\"][0][\"_id\"],\n                                data.data[\"_id\"]\n                              )\n                            }\n                          />\n                        </p>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div id=\"loading-bar\">\n          <RingLoader\n            css={override}\n            sizeUnit={\"px\"}\n            size={50}\n            color={\"#0000ff\"}\n            loading={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRTable;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst LeaveApplicationHRForm = (props) => {\n  const [FromDateData, setFromDateData] = useState(\n    props.editData[\"FromDate\"].slice(0, 10)\n  );\n  const [ToDateData, setToDateData] = useState(\n    props.editData[\"ToDate\"].slice(0, 10)\n  );\n  const [ReasonforleaveData, setReasonforleaveData] = useState(\n    props.editData[\"Reasonforleave\"]\n  );\n\n  const handleLeaveApplicationHREditUpdate = (e) => {\n    e.preventDefault();\n    props.onLeaveApplicationHREditUpdate(props.editData, e);\n  };\n\n  return (\n    <div className=\"registration-page py-4\">\n      <h2\n        id=\"role-form-title\"\n        className=\"text-center text-black text-uppercase fw-bold my-4\"\n      >\n        Edit Leave Application Of {props.editData[\"employee\"][0][\"FirstName\"]}{\" \"}\n        {props.editData[\"employee\"][0][\"LastName\"]}\n      </h2>\n      <div id=\"role-form-outer-div\">\n      <Form id=\"form\" onSubmit={handleLeaveApplicationHREditUpdate}>\n          <div className=\"d-flex  flex-column gap-2 rounded \">\n            <div style={{ padding: \"70px\" }} className=\"row \">\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Leave Type\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control as=\"select\" required>\n                      <option value=\"\" disabled selected>\n                        Select your option\n                      </option>\n                      <option\n                        value=\"Sick Leave\"\n                        selected={props.editData[\"Leavetype\"] == \"Sick Leave\"}\n                        disabled\n                      >\n                        Sick Leave\n                      </option>\n                      <option\n                        value=\"Casual Leave\"\n                        selected={props.editData[\"Leavetype\"] == \"Casual Leave\"}\n                        disabled\n                      >\n                        Casual Leave\n                      </option>\n                      <option\n                        value=\"Privilege Leave\"\n                        selected={\n                          props.editData[\"Leavetype\"] == \"Privilege Leave\"\n                        }\n                        disabled\n                      >\n                        Privilege Leave\n                      </option>\n                    </Form.Control>\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    FromDate\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control\n                      type=\"date\"\n                      required\n                      disabled\n                      value={FromDateData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    ToDate\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control\n                      type=\"date\"\n                      required\n                      disabled\n                      value={ToDateData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12 col-md-6\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Leave Status\n                  </Form.Label>\n                  <Col sm={10} className=\"form-input\">\n                    <Form.Control as=\"select\" required>\n                      <option value=\"Pending\" selected disabled>\n                        Pending\n                      </option>\n                      <option\n                        value=\"2\"\n                        selected={props.editData[\"Status\"] == 2}\n                      >\n                        Approve\n                      </option>\n                      <option\n                        value=\"3\"\n                        selected={props.editData[\"Status\"] == 3}\n                      >\n                        Reject\n                      </option>\n                    </Form.Control>\n                  </Col>\n                </Form.Group>\n              </div>\n              <div className=\"form-group col-12\">\n                <Form.Group as={Row}>\n                  <Form.Label column sm={6}>\n                    Reason for leave\n                  </Form.Label>\n                  <Col sm={11} className=\"form-input\">\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Reason for leave\"\n                      required\n                      disabled\n                      value={ReasonforleaveData}\n                    />\n                  </Col>\n                </Form.Group>\n              </div>\n              <div\n                className=\"form-group col-12 d-flex  gap-5\"\n                id=\"form-submit-button\"\n              >\n                <Button className=\"mx-3\" type=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  className=\"mx-3\"\n                  type=\"reset\"\n                  onClick={props.onFormClose}\n                >\n                  cancel\n                </Button>\n              </div>\n              <div\n                className=\"form-group col-12 col-md-6\"\n                id=\"form-cancel-button\"\n              ></div>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaveApplicationHRForm;\n\n// import React, { useState } from \"react\";\n// import { Form, Button, Col, Row } from \"react-bootstrap\";\n\n// const LeaveApplicationHRForm = (props) => {\n//   const [FromDateData, setFromDateData] = useState(\n//     props.editData[\"FromDate\"].slice(0, 10)\n//   );\n//   const [ToDateData, setToDateData] = useState(\n//     props.editData[\"ToDate\"].slice(0, 10)\n//   );\n//   const [ReasonforleaveData, setReasonforleaveData] = useState(\n//     props.editData[\"Reasonforleave\"]\n//   );\n\n//   const handleLeaveApplicationHREditUpdate = (e) => {\n//     e.preventDefault();\n//     props.onLeaveApplicationHREditUpdate(props.editData, e);\n//   };\n\n//   return (\n//     <div className=\"registration-page py-4\">\n//       <h2 id=\"role-form-title\" className=\"text-center text-black text-uppercase fw-bold my-4\">\n//         Edit Leave Application Of {props.editData[\"employee\"][0][\"FirstName\"]}{\" \"}\n//         {props.editData[\"employee\"][0][\"LastName\"]}\n//       </h2>\n\n//       <div id=\"role-form-outer-div\">\n//         <Form id=\"form\" onSubmit={handleLeaveApplicationHREditUpdate}>\n//           <div className=\"d-flex flex-column gap-2 rounded\">\n//             <div style={{ padding: '70px' }} className=\"row\">\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Leave Type\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control as=\"select\" required disabled>\n//                       <option value=\"\" disabled selected>\n//                         Select your option\n//                       </option>\n//                       <option\n//                         value=\"Sick Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Sick Leave\"}\n//                         disabled\n//                       >\n//                         Sick Leave\n//                       </option>\n//                       <option\n//                         value=\"Casual Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Casual Leave\"}\n//                         disabled\n//                       >\n//                         Casual Leave\n//                       </option>\n//                       <option\n//                         value=\"Privilege Leave\"\n//                         selected={props.editData[\"Leavetype\"] === \"Privilege Leave\"}\n//                         disabled\n//                       >\n//                         Privilege Leave\n//                       </option>\n//                     </Form.Control>\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     FromDate\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control type=\"date\" required disabled value={FromDateData} />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     ToDate\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control type=\"date\" required disabled value={ToDateData} />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 col-md-6\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Leave Status\n//                   </Form.Label>\n//                   <Col sm={10} className=\"form-input\">\n//                     <Form.Control as=\"select\" required >\n//                       <option value=\"Pending\" selected disabled>\n//                         Pending\n//                       </option>\n//                       <option value=\"2\" selected={props.editData[\"Status\"] === 2}>\n//                         Approve\n//                       </option>\n//                       <option value=\"3\" selected={props.editData[\"Status\"] === 3}>\n//                         Reject\n//                       </option>\n//                     </Form.Control>\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12\">\n//                 <Form.Group as={Row}>\n//                   <Form.Label column sm={6}>\n//                     Reason for leave\n//                   </Form.Label>\n//                   <Col sm={11} className=\"form-input\">\n//                     <Form.Control\n//                       as=\"textarea\"\n//                       rows={3}\n//                       placeholder=\"Reason for leave\"\n//                       required\n//                       disabled\n//                       value={ReasonforleaveData}\n//                     />\n//                   </Col>\n//                 </Form.Group>\n//               </div>\n//               <div className=\"form-group col-12 d-flex gap-5\" id=\"form-submit-button\">\n//                 <Button className=\"mx-3\" type=\"submit\">\n//                   Submit\n//                 </Button>\n//                 <Button className=\"mx-3\" type=\"reset\" onClick={props.onFormClose}>\n//                   Cancel\n//                 </Button>\n//               </div>\n//             </div>\n//           </div>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LeaveApplicationHRForm;\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport LeaveApplicationHRTable from \"./LeaveApplicationHRTable.jsx\";\nimport LeaveApplicationHRFormEdit from \"./LeaveApplicationHRFormEdit.jsx\";\nimport \"./LeaveApplicationHR.css\";\nimport { AttendanceContext } from \"../../Context/AttendanceContext/AttendanceContext.js\";\nimport BASE_URL from \"../../Pages/config/config.js\";\n\nimport { v4 as uuid } from \"uuid\";\nconst LeaveApplicationHR = (props) => {\n  const [table, setTable] = useState(true);\n  const [editForm, setEditForm] = useState(false);\n  const [editData, setEditData] = useState({});\n  const { socket } = useContext(AttendanceContext);\n  const email = localStorage.getItem(\"Email\");\n  const handleLeaveApplicationHRSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"id\", event.target[0].value, event.target[1].value);\n    setTable(true);\n\n    let body = {\n      Leavetype: event.target[0].value,\n      FromDate: event.target[1].value,\n      ToDate: event.target[2].value,\n      Status: event.target[3].value,\n      Reasonforleave: event.target[4].value\n    };\n    axios\n      .post(`${BASE_URL}/api/leave-application-hr/` + props.data[\"_id\"], body, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((res) => {\n        setTable(false);\n        setTable(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAddLeaveApplicationHR = () => {\n    console.log(\"clicked1\");\n    setTable(false);\n  };\n\n  const handleEditLeaveApplicationHR = (e) => {\n    console.log(e);\n    console.log(\"clicked6\");\n    setEditForm(true);\n    setEditData(e);\n    // Assuming setEditFormGender is not used in the rest of your component\n    // setEditFormGender(e[\"Gender\"]);\n  };\n\n  const handleFormClose = () => {\n    console.log(\"clicked1\");\n    setTable(true);\n  };\n\n  const handleEditFormClose = () => {\n    console.log(\"clicked5\");\n    setEditForm(false);\n  };\n\n  const handleLeaveApplicationHREditUpdate = (info, newInfo) => {\n    newInfo.preventDefault();\n    console.log(\"zero data\", newInfo.target[0].value);\n    let body = {\n      Status: newInfo.target[3].value\n    };\n    console.log(\"update\", info);\n    if (body.Status !== \"Pending\") {\n      axios\n        .put(`${BASE_URL}/api/leave-application-hr/` + info[\"_id\"], body, {\n          headers: {\n            authorization: localStorage.getItem(\"token\") || \"\"\n          }\n        })\n        .then((res) => {\n          setTable(false);\n          setTable(true);\n          const taskId = uuid();\n          let leaveStatus = \"\";\n          if (body.Status === \"2\") {\n            leaveStatus = \"Approved\";\n          } else if (body.Status === \"3\") {\n            leaveStatus = \"Rejected\";\n          }\n          const data = {\n            taskId,\n            employeeEmail: info.employee[0].Email,\n            hrEmail: info.hrEmail,\n            message: `${info.employee[0].Email} Leave request ${leaveStatus} by ${email}`,\n            status: \"unseen\",\n            path: \"leaveApplication\"\n          };\n          console.log(data);\n          socket.emit(\"leaveManagerStatusNotification\", data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n\n    setEditForm(false);\n  };\n\n  return (\n    <React.Fragment>\n      {table ? (\n        editForm ? (\n          <LeaveApplicationHRFormEdit\n            onLeaveApplicationHREditUpdate={handleLeaveApplicationHREditUpdate}\n            onFormEditClose={handleEditFormClose}\n            editData={editData}\n          />\n        ) : (\n          <LeaveApplicationHRTable\n            onAddLeaveApplicationHR={handleAddLeaveApplicationHR}\n            onEditLeaveApplicationHR={handleEditLeaveApplicationHR}\n            data={props.data}\n          />\n        )\n      ) : (\n        <div></div>\n        // Uncomment the following code if needed\n        // <LeaveApplicationHRForm\n        //   onLeaveApplicationHRSubmit={handleLeaveApplicationHRSubmit}\n        //   onFormClose={handleFormClose}\n        //   onGenderChange={handleAddFormGenderChange}\n        // />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LeaveApplicationHR;\n","// EmployeeChart.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\nconst TaskChart = () => {\r\n  const [departmentData, setDepartmentData] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const email = localStorage.getItem(\"Email\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setDepartmentData(\r\n            response.data.map(\r\n              (data) => data[\"department\"][0]?.DepartmentName || \"\"\r\n            )\r\n          );\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const loadTaskData = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\r\n      // console.log(response.data)\r\n      setTasks(response.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      setError(\"Error fetching tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n    loadTaskData();\r\n  }, []);\r\n\r\n  const calculateRemainingTime = (endDate) => {\r\n    const now = new Date();\r\n    const endDateTime = new Date(endDate);\r\n    let remainingTime = endDateTime - now;\r\n\r\n    if (remainingTime < 0) {\r\n      // If remaining time is negative, consider it as delay\r\n      remainingTime = Math.abs(remainingTime);\r\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\r\n    } else {\r\n      // Calculate remaining days, hours, minutes, and seconds\r\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor(\r\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\r\n      );\r\n      return { delay: false, days, hours, minutes };\r\n    }\r\n  };\r\n\r\n  const departmentCounts = {};\r\n  departmentData.forEach((department) => {\r\n    departmentCounts[department] = (departmentCounts[department] || 0) + 1;\r\n  });\r\n\r\n  const taskStatusCounts = {\r\n    Total: tasks.filter((task) => task.managerEmail === email).length,\r\n\r\n    newTasks: tasks.filter(\r\n      (task) => task.status === \"Assigned\" && task.managerEmail === email\r\n    ).length,\r\n\r\n    Completed: tasks.filter(\r\n      (task) => task.status === \"Completed\" && task.managerEmail === email\r\n    ).length,\r\n    Rejected: tasks.filter(\r\n      (task) => task.status === \"Rejected\" && task.managerEmail === email\r\n    ).length,\r\n    canceled: tasks.filter(\r\n      (task) => task.status === \"Cancelled\" && task.managerEmail === email\r\n    ).length,\r\n    Active: tasks.filter(\r\n      (task) => task.status === \"Pending\" && task.managerEmail === email\r\n    ).length,\r\n    Overdue: tasks.filter(\r\n      (task) =>\r\n        task.status === \"Pending\" &&\r\n        task.managerEmail === email &&\r\n        calculateRemainingTime(task.endDate).delay\r\n    ).length,\r\n    Ontime: tasks.filter(\r\n      (task) =>\r\n        task.status === \"Pending\" &&\r\n        task.managerEmail === email &&\r\n        !calculateRemainingTime(task.endDate).delay\r\n    ).length\r\n  };\r\n\r\n  const taskStatusChartData = {\r\n    options: {\r\n      chart: {\r\n        id: \"task-status-chart\",\r\n        type: \"bar\"\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n        colors: [\"var(--primaryDashColorDark)\"]\r\n      },\r\n      xaxis: {\r\n        categories: Object.keys(taskStatusCounts),\r\n        title: {\r\n          text: \"Task Status\"\r\n        }\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: \"Number of Tasks\"\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Task Status\",\r\n        data: Object.values(taskStatusCounts)\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"fit-content\" }} className=\"ChartCard p-2 pb-0\">\r\n      <div className=\"ChartHeader\">\r\n        <h6\r\n          style={{\r\n            width: \"fit-content\",\r\n            boxShadow: \"0 0 10px 1px rgba(0,0,0,.2) inset\",\r\n            color: \"var(--primaryDashColorDark)\"\r\n          }}\r\n          className=\"fw-bolder d-flex px-3 rounded-5 py-1\"\r\n        >\r\n          Task Progress Report\r\n        </h6>\r\n      </div>\r\n      <div className=\"chartBody\">\r\n        <Chart\r\n          options={taskStatusChartData.options}\r\n          series={taskStatusChartData.series}\r\n          type=\"bar\"\r\n          height=\"340px\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css } from \"@emotion/core\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst LeaveApplicationHRTable = (props) => {\r\n  const [leaveApplicationHRData, setLeaveApplicationHRData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [totalLeaves, setTotalLeaves] = useState(0);\r\n  const [sortColumn, setSortColumn] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState(\"asc\");\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // ...\r\n\r\n  let leaveApplicationHRObj = [];\r\n  let rowDataT = [];\r\n\r\n  const loadLeaveApplicationHRData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/leave-application-hr/`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        leaveApplicationHRObj = response.data;\r\n        console.log(\"response\", response.data);\r\n        setLeaveApplicationHRData(response.data);\r\n        setLoading(false);\r\n\r\n        rowDataT = [];\r\n\r\n        leaveApplicationHRObj.map((data) => {\r\n          let temp = {\r\n            data,\r\n            empID:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"empID\"],\r\n            Name:\r\n              data[\"employee\"] &&\r\n              data[\"employee\"][0] &&\r\n              data[\"employee\"][0][\"FirstName\"] +\r\n                \" \" +\r\n                data[\"employee\"][0][\"LastName\"],\r\n            Leavetype: data[\"Leavetype\"],\r\n            FromDate: data[\"FromDate\"].slice(0, 10),\r\n            ToDate: data[\"ToDate\"].slice(0, 10),\r\n            Reasonforleave: data[\"Reasonforleave\"],\r\n            Status: status(data[\"Status\"])\r\n          };\r\n\r\n          rowDataT.push(temp);\r\n        });\r\n\r\n        setRowData(rowDataT);\r\n\r\n        setTotalLeaves(response.data.length);\r\n        props.updateTotalLeaves(response.data.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // ...\r\n\r\n  const onLeaveApplicationHRDelete = (e1, e2) => {\r\n    console.log(e1, e2);\r\n    if (window.confirm(\"Are you sure to delete this record? \") == true) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/leave-application-hr/` + e1 + \"/\" + e2, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((res) => {\r\n          loadLeaveApplicationHRData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    if (window.confirm(\"Are you sure to download Leave record? \")) {\r\n      // Set A4 landscape dimensions\r\n      const pdfWidth = 297; // A4 width in mm\r\n      const pdfHeight = 210; // A4 height in mm\r\n      const doc = new jsPDF({\r\n        orientation: \"landscape\",\r\n        unit: \"mm\",\r\n        format: [pdfWidth, pdfHeight]\r\n      });\r\n\r\n      doc.setFontSize(18);\r\n      doc.text(\"Employee Leave Details\", pdfWidth / 2, 15, \"center\");\r\n      const headers = [\r\n        \"Emp Id\",\r\n        \"Leave Type\",\r\n        \"Start Date\",\r\n        \"End Date\",\r\n        \"Remarks\",\r\n        \"Status\"\r\n      ];\r\n      const data = rowData.map((row) => [\r\n        row.empID,\r\n        row.Leavetype,\r\n        row.FromDate,\r\n        row.ToDate,\r\n        row.Reasonforleave,\r\n        row.Status,\r\n\r\n        \"\" // Action column - you can customize this based on your requirements\r\n      ]);\r\n      doc.setFontSize(12);\r\n      doc.autoTable({\r\n        head: [headers],\r\n        body: data,\r\n        startY: 25\r\n      });\r\n\r\n      doc.save(\"leaveApplication_data.pdf\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLeaveApplicationHRData();\r\n  }, []);\r\n\r\n  const renderButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faTrash}\r\n        onClick={() =>\r\n          onLeaveApplicationHRDelete(\r\n            params.data.data[\"employee\"][0][\"_id\"],\r\n            params.data.data[\"_id\"]\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    console.log(params);\r\n    return (\r\n      <FontAwesomeIcon\r\n        icon={faEdit}\r\n        onClick={() => props.onEditLeaveApplicationHR(params.data.data)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const status = (s) => {\r\n    if (s == 1) {\r\n      return \"Pending\";\r\n    }\r\n    if (s == 2) {\r\n      return \"Approved\";\r\n    }\r\n    if (s == 3) {\r\n      return \"Rejected\";\r\n    }\r\n    // Add a default case or return a meaningful value for unknown status\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const renderSortIcon = (field) => {\r\n    if (sortColumn === field) {\r\n      return sortDirection === \"asc\" ? \"▴\" : \"▾\";\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sortData = (columnName) => {\r\n    const newSortDirection =\r\n      sortColumn === columnName && sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n    const sortedData = [...rowData];\r\n\r\n    sortedData.sort((a, b) => {\r\n      const valueA = a[columnName];\r\n      const valueB = b[columnName];\r\n\r\n      let comparison = 0;\r\n\r\n      if (valueA > valueB) {\r\n        comparison = 1;\r\n      } else if (valueA < valueB) {\r\n        comparison = -1;\r\n      }\r\n\r\n      return newSortDirection === \"desc\" ? comparison * -1 : comparison;\r\n    });\r\n\r\n    setRowData(sortedData);\r\n    setSortColumn(columnName);\r\n    setSortDirection(newSortDirection);\r\n  };\r\n\r\n  // Calculate the total length for each status\r\n  const pendingLeaves = rowData.filter(\r\n    (data) => data.Status === \"Pending\"\r\n  ).length;\r\n  const approvedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Approved\"\r\n  ).length;\r\n  const rejectedLeaves = rowData.filter(\r\n    (data) => data.Status === \"Rejected\"\r\n  ).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid  mt-4\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Pending Leaves\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {pendingLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/manager/leave-application-hr\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Approved Leaves{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {approvedLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/manager/leaveAccepted\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  On Rejected Leaves\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {rejectedLeaves}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/manager/leaveRejected\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Role\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/role\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveApplicationHRTable;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"./EmployeeTable.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faEdit,\r\n  faInfoCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { css } from \"@emotion/core\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { IoIosArrowDroprightCircle } from \"react-icons/io\";\r\nimport BASE_URL from \"../../../../Pages/config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// *************csv & pdf **************//\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n// *************csv & pdf **************//\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-top: 45px;\r\n  border-color: red;\r\n`;\r\n\r\nconst AdminEmployeeTable = (props) => {\r\n  const [employeeData, setEmployeeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isIdFilterActive, setIsIdFilterActive] = useState(false);\r\n  const [isIdSortAscending, setIsIdSortAscending] = useState(true);\r\n  const [upcomingBirthdays, setUpcomingBirthdays] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/employee`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // Ensure that response.data is an array\r\n        if (Array.isArray(response.data)) {\r\n          setEmployeeData(response.data);\r\n          setLoading(false);\r\n\r\n          // Clear the state arrays\r\n          setRowData([]);\r\n\r\n          response.data.forEach((data) => {\r\n            let temp = {\r\n              data,\r\n              Email: data[\"Email\"],\r\n              Password: data[\"Password\"],\r\n              Account:\r\n                data[\"Account\"] === 1\r\n                  ? \"Admin\"\r\n                  : data[\"Account\"] === 2\r\n                  ? \"HR\"\r\n                  : data[\"Account\"] === 3\r\n                  ? \"Employee\"\r\n                  : data[\"Account\"] === 4\r\n                  ? \"Manager\"\r\n                  : \"\",\r\n\r\n              RoleName: data[\"role\"][0] ? data[\"role\"][0][\"RoleName\"] : \"\",\r\n              FirstName: data[\"FirstName\"],\r\n              MiddleName: data[\"MiddleName\"],\r\n              LastName: data[\"LastName\"],\r\n              DOB: data[\"DOB\"].slice(0, 10),\r\n              ContactNo: data[\"ContactNo\"],\r\n              // EmployeeCode: data[\"EmployeeCode\"],\r\n              empID: data[\"empID\"],\r\n              DepartmentName: data[\"department\"][0]\r\n                ? data[\"department\"][0][\"DepartmentName\"]\r\n                : \"\",\r\n              PositionName: data[\"position\"][0]\r\n                ? data[\"position\"][0][\"PositionName\"]\r\n                : \"\",\r\n              DateOfJoining: data[\"DateOfJoining\"].slice(0, 10)\r\n            };\r\n\r\n            // Use set function to update state\r\n            setRowData((prevData) => [...prevData, temp]);\r\n          });\r\n        } else {\r\n          console.error(\"Data received is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onEmployeeDelete = (e) => {\r\n    if (window.confirm(\"Are you sure to delete this record? \")) {\r\n      axios\r\n        .delete(`${BASE_URL}/api/employee/${e}`, {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then(() => {\r\n          loadEmployeeData();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    window.confirm(\"Are you sure to download Employee record? \");\r\n    const doc = new jsPDF({\r\n      orientation: \"landscape\",\r\n      unit: \"mm\",\r\n      format: [297, 210]\r\n    });\r\n\r\n    doc.setFontSize(18);\r\n    doc.text(\"Employee Details\", 297 / 2, 15, \"center\");\r\n    const headers = [\r\n      \"Emp Id\",\r\n      \"Email\",\r\n      \"Account Access\",\r\n      \"First Name\",\r\n      \"Last Name\",\r\n      \"DOB\",\r\n      \"ContactNo\",\r\n      \"Role\",\r\n      \"Position\",\r\n      \"Department\",\r\n      \"D.O.J\"\r\n    ];\r\n    const data = rowData.map((row) => [\r\n      row.empID,\r\n      row.Email,\r\n      row.Account,\r\n      row.FirstName,\r\n      row.LastName,\r\n      row.DOB,\r\n      row.ContactNo,\r\n      row.RoleName,\r\n      row.PositionName,\r\n      row.DepartmentName,\r\n      row.DateOfJoining,\r\n      \"\"\r\n    ]);\r\n    doc.setFontSize(12);\r\n    doc.autoTable({\r\n      head: [headers],\r\n      body: data,\r\n      startY: 25\r\n    });\r\n\r\n    doc.save(\"employee_data.pdf \");\r\n  };\r\n\r\n  const renderInfoButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            onClick={() => props.onEmpInfo(params.data.data)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderButton = (params) => {\r\n    if (params.data && params.data.data && params.data.data[\"_id\"]) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faTrash}\r\n          onClick={() => onEmployeeDelete(params.data.data[\"_id\"])}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderEditButton = (params) => {\r\n    if (params.data && params.data.data) {\r\n      return (\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          onClick={() => props.onEditEmployee(params.data.data)}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getBackgroundColor = (accountType) => {\r\n    switch (accountType) {\r\n      case \"Admin\":\r\n        return \"#8EAC50\";\r\n      case \"HR\":\r\n        return \"#0079FF\";\r\n      case \"Employee\":\r\n        return \"purple\";\r\n      case \"Manager\":\r\n        return \"red\";\r\n      default:\r\n        return \"#FF9B50\";\r\n    }\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  const handleToggleIdSort = () => {\r\n    setIsIdSortAscending(!isIdSortAscending);\r\n  };\r\n\r\n  const sortById = (a, b) => {\r\n    const idA = a.empID.toLowerCase();\r\n    const idB = b.empID.toLowerCase();\r\n\r\n    if (isIdSortAscending) {\r\n      return idA.localeCompare(idB);\r\n    } else {\r\n      return idB.localeCompare(idA);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n\r\n  const calculateUpcomingBirthdays = () => {\r\n    const today = new Date();\r\n    const upcomingBirthdaysData = rowData.filter((employee) => {\r\n      const dob = new Date(employee.DOB);\r\n      dob.setFullYear(today.getFullYear());\r\n\r\n      // Check if the upcoming birthday is within the next 7 days\r\n      const timeDiff = dob - today;\r\n      const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\r\n      return daysDiff >= 0 && daysDiff <= 7;\r\n    });\r\n\r\n    setUpcomingBirthdays(upcomingBirthdaysData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateUpcomingBirthdays();\r\n  }, [rowData]);\r\n\r\n  let filteredData = rowData.filter((item) => {\r\n    const isMatchingId = isIdFilterActive\r\n      ? item.empID.toLowerCase() === searchInput.toLowerCase()\r\n      : true;\r\n\r\n    const isMatchingFirstName = item.FirstName.toLowerCase().includes(\r\n      searchInput.toLowerCase()\r\n    );\r\n\r\n    return isMatchingId && isMatchingFirstName;\r\n  });\r\n\r\n  filteredData = filteredData.sort(sortById);\r\n\r\n  // Calculate the total length for each status\r\n  const adminCount = filteredData.filter(\r\n    (data) => data.Account === \"Admin\"\r\n  ).length;\r\n  const hrCount = filteredData.filter((data) => data.Account === \"HR\").length;\r\n  const managerCount = filteredData.filter(\r\n    (data) => data.Account === \"Manager\"\r\n  ).length;\r\n  const employeeCount = filteredData.filter(\r\n    (data) => data.Account === \"Employee\"\r\n  ).length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid  mt-4\">\r\n        <div className=\"row row-gap-4\">\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FED2AA\" }}\r\n              className=\" DashboardCard position-relative\"\r\n            >\r\n              <div className=\" d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Admins\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {adminCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#DFFFD8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total HR{\" \"}\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {hrCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/leave-application-hr\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"row row-gap-4\"></div> */}\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#FEBBCC\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Manager\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {managerCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              style={{ backgroundColor: \"#BCCEF8\" }}\r\n              className=\"DashboardCard position-relative\"\r\n            >\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <p className=\"fw-bold pt-2 text-muted\">\r\n                  Total Employee\r\n                  <span\r\n                    className=\"fw-bolder text-info position-absolute\"\r\n                    style={{ fontSize: \"35px\", right: \"10%\", top: \"4%\" }}\r\n                  >\r\n                    {employeeCount}\r\n                  </span>\r\n                </p>\r\n                <Link\r\n                  className=\"text-decoration-none bg-white px-4  rounded-5 d-flex justify-between py-2  aline-items-center fw-bold text-info  aline-center\"\r\n                  to=\"/hr/employee\"\r\n                >\r\n                  <p className=\"my-auto\">More Info</p>{\" \"}\r\n                  <p className=\"my-auto fs-4 d-flex\">\r\n                    <IoIosArrowDroprightCircle />\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-9\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEmployeeTable;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport axios from \"axios\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst NoticeBoard = () => {\r\n  const [notice, setNotice] = useState([]);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.Notice);\r\n        setNotice(response.data.Notice);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"Socket:\", socket?.id);\r\n    if (socket) {\r\n      socket.on(\"notice\", (data) => {\r\n        setNotice((prev) => [data, ...prev]);\r\n      });\r\n      socket.on(\"noticeDelete\", (data) => {\r\n        if (data) {\r\n          loadEmployeeData();\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n  const pdfHandler = (val) => {\r\n    console.log(val);\r\n    window.open(`${BASE_URL}/${val.attachments}`, \"_blank\", \"noreferrer\");\r\n    // window.open(path, \"_blank\")\r\n  };\r\n\r\n  return (\r\n    <div className=\"container box-shadow: 0 4px 10px 0 rgb(137 137 137 / 25%); mt-4 \">\r\n      <div className=\"birthday\">\r\n        <h4 className=\"fw-bolder d-flex text-muted gap-0 text-center\">\r\n          Notice Board{\" \"}\r\n          <span className=\"text-primary mx-2\">\r\n            (\r\n            {\r\n              notice.filter(\r\n                (val, i, ar) =>\r\n                  ar.findIndex((item) => item.noticeId === val.noticeId) === i\r\n              ).length\r\n            }\r\n            )\r\n          </span>\r\n        </h4>\r\n        <div\r\n          className=\"mainbirth\"\r\n          style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n        >\r\n          {notice.filter(\r\n            (val, i, ar) =>\r\n              ar.findIndex((item) => item.noticeId === val.noticeId) === i\r\n          ).length > 0 ? (\r\n            <table className=\"table table-striped mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"cursor-pointer\" style={{ width: \"100%\" }}>\r\n                    Notice\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {notice\r\n                  .filter(\r\n                    (val, i, ar) =>\r\n                      ar.findIndex((item) => item.noticeId === val.noticeId) ===\r\n                      i\r\n                  )\r\n                  .map((val) => (\r\n                    <tr key={val.noticeId} style={{ cursor: \"pointer\" }}>\r\n                      <td onClick={() => pdfHandler(val)}>{`${val.notice}`}</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No Notice</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeBoard;\r\n","import React from \"react\";\nimport TaskChart from \"./Chart/TaskChart\";\nimport LeaveCount from \"./CountData/LeavesCount\";\nimport EmplolyeeCount from \"./CountData/EmployeeCount\";\nimport InnerDashContainer from \"../../InnerDashContainer\";\nimport UpcomingBirthdays from \"../../../Pages/AddEmployee/UpcomingBirthdays\";\nimport DepartmentChart from \"../../../Pages/Chart/DepartmentChart\";\nimport HolidayList from \"../../../Pages/LeaveCalendar/HolidayList\";\nimport TodatAttendance from \"../../../Pages/Chart/DailyAttendChart\";\nimport NoticeBoard from \"../Notification/NoticeBoard\";\nconst ManagerDash = () => {\n  return (\n    <InnerDashContainer>\n      <div className=\"row gap-0 mx-0\">\n        <div className=\"col-lg-9\">\n          <EmplolyeeCount />\n          <LeaveCount />\n\n          <div className=\"row row_flex mt-5\">\n            <div className=\"col-lg-6\">\n              <TodatAttendance />\n            </div>\n            <div className=\"col-lg-6\">\n              <DepartmentChart />\n            </div>\n          </div>\n          <div className=\"row row_flex\">\n            <div className=\"col-lg-8\">\n              <TaskChart />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3\">\n          <UpcomingBirthdays />\n          <NoticeBoard />\n          <div className=\"holiday mt-3\">\n            <HolidayList />\n          </div>\n          <div className=\"col-md-9\"></div>\n        </div>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default ManagerDash;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { MdCancel } from \"react-icons/md\";\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport { v4 as uuid } from \"uuid\";\nimport BASE_URL from \"../../../Pages/config/config\";\nimport toast from \"react-hot-toast\";\nconst ManagerNewTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [, setIsAccepted] = useState(false);\n  const [, setIsRejected] = useState(false);\n\n  const { socket } = useContext(AttendanceContext);\n  const email = localStorage.getItem(\"Email\");\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      console.log(response.data);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    return () => clearTimeout();\n  }, []);\n\n  const AcceptTask = async (taskID, taskName, adminMail) => {\n    try {\n      setIsAccepted(true);\n\n      // Prompt the user for Accept remarks\n      const AcceptTaskRemark = prompt(\"Enter remarks for Accept Task:\");\n\n      if (AcceptTaskRemark === null) {\n        // If the user clicks Cancel in the prompt, do nothing\n        setIsAccepted(false);\n        return;\n      }\n\n      // Update the task status to \"Cancelled\" in the database\n      await axios.put(`${BASE_URL}/api/tasks/${taskID}`, {\n        status: \"Pending\",\n        comment: AcceptTaskRemark\n      });\n\n      // Display success notification\n      toast.success(\"Task Accepteed successfully!\");\n      const taskId = uuid();\n      const data = {\n        taskId,\n        status: \"unseen\",\n        path: \"taskstatus\",\n        senderMail: email,\n        taskName,\n        message: `Task Accepted by ${email}`,\n        adminMail,\n        Account: 1,\n        taskStatus: \"Accepted\"\n      };\n      // Update the UI by fetching the latest tasks;\n      socket.emit(\"adminTaskNotification\", data);\n      console.log(data);\n      // Update the UI by fetching the latest tasks\n      fetchData();\n    } catch (error) {\n      console.error(\"Error canceling task:\", error.message);\n      toast.error(\"Failed to cancel task. Please try again.\");\n    } finally {\n      setIsAccepted(false);\n    }\n  };\n  const RejectTask = async (taskID, taskName, adminMail) => {\n    try {\n      setIsRejected(true);\n      const RejectRemarks = prompt(\"Enter remarks for Reject Task:\");\n\n      if (RejectRemarks === null) {\n        setIsRejected(false);\n        return;\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskID}`, {\n        status: \"Rejected\",\n        comment: RejectRemarks\n      });\n\n      toast.success(\"Task Rejected\");\n      const taskId = uuid();\n      const data = {\n        taskId,\n        status: \"unseen\",\n        path: \"taskstatus\",\n        senderMail: email,\n        taskName,\n        message: `Task Rejected by ${email}`,\n        adminMail,\n        Account: 1,\n        taskStatus: \"Rejected\"\n      };\n      socket.emit(\"adminTaskNotification\", data);\n      fetchData();\n    } catch (error) {\n      console.error(\"Error Rejecting task:\", error.message);\n      toast.error(\"Failed to Reject task. Please try again.\");\n    } finally {\n      setIsRejected(false);\n    }\n  };\n\n  const newTasks = tasks.filter(\n    (task) => task.status === \"Assigned\" && task.managerEmail === email\n  ).length;\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ⭐ New Task ({newTasks})\n      </h1>\n      <p className=\"text-muted\">You can view all New task here!</p>{\" \"}\n      <h1 className=\"fs-3 fw-bolder text-uppercase \"></h1>\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter(\n            (task) => task.status === \"Assigned\" && task.managerEmail === email\n          )\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background:\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white \"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-info col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() =>\n                        AcceptTask(task._id, task.Taskname, task.adminMail)\n                      }\n                    >\n                      <IoCheckmarkDoneSharp />\n                      Accept\n                    </button>\n                    <button className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\">\n                      <BsFiletypeDoc />\n                      View Docs\n                    </button>\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => RejectTask(task._id)}\n                    >\n                      <MdCancel />\n                      Reject\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerNewTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\nconst ManagerCencelledTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Cancelled\" }\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cancelled tasks:\", error.message);\n      setError(\"Error fetching cancelled tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchDataWithTimeout = async () => {\n      await fetchData();\n    };\n\n    fetchDataWithTimeout();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ❌ Cancelled Task\n      </h1>\n      <p className=\"text-muted\">You can view all Cancelled task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n      >\n        {tasks\n          .filter((task) => task.status === \"Cancelled\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background:\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-danger fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-danger m-auto fw-bold\">Cancelled</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    c a n c e l l e d\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <div\n                    style={{ position: \"relative\" }}\n                    className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n                  >\n                    <div\n                      style={{\n                        width: \"99.4%\",\n                        height: \"100%\",\n                        zIndex: \"5\",\n                        backgroundColor: \"rgba(128, 128, 128, 0.422)\",\n                        textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                      }}\n                      className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                    >\n                      <h1 className=\"text-uppercase text-light fw-bolder\">\n                        c a n c e l l e d\n                      </h1>\n                    </div>\n                    <div\n                      style={{ height: \"fit-content\" }}\n                      className=\"form-control\"\n                    >\n                      <p\n                        style={{ height: \"fit-content\" }}\n                        className=\"text-start fs-6 form-control\"\n                      >\n                        <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                        {task.description}\n                      </p>\n                      <div\n                        style={{ height: \"fit-content\" }}\n                        className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                      >\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Task Durations <br />{\" \"}\n                          <span>{task.duration} days</span>{\" \"}\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Created By <br /> <span> {task.managerEmail}</span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          Start Date <br />{\" \"}\n                          <span>\n                            {new Date(task.startDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          End Date <br />{\" \"}\n                          <span>\n                            {new Date(task.endDate).toLocaleDateString()}\n                          </span>\n                        </p>\n                        <p\n                          style={{ fontSize: \"1rem\" }}\n                          className=\"col-6 col-sm-6 col-md-2\"\n                        >\n                          <span>\n                            Task Status <br /> {task.status}\n                          </span>\n                        </p>\n                      </div>\n                      <div\n                        style={{ height: \"fit-content\" }}\n                        className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                      >\n                        <p>\n                          <span className=\"fw-bold\">Remarks : </span>{\" \"}\n                          {task.comment}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerCencelledTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\nconst ManagerCompletedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const email = localStorage.getItem(\"Email\");\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed)\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        ✅ Completed Tasks (\n        {tasks.filter((task) => task.status === \"Completed\").length})\n      </h1>\n      <p className=\"text-muted\">You can view all Completed task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter(\n            (task) => task.status === \"Completed\" && task.managerEmail === email\n          )\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{\n                  height: \"fit-content\",\n                  background:\n                    \"linear-gradient(165deg,#11009E, #700B97, 90%, #C84B31)\"\n                }}\n                className=\"d-flex justify-content-between aline-center form-control text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"\">\n                  <p className=\"btn btn-success m-auto fw-bold\">Completed</p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(0, 128, 0, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    C O M P L E T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span> {task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerCompletedTask;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"../../../Pages/config/config\";\nconst ManagerRejectedTask = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const email = localStorage.getItem(\"Email\");\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`, {\n        params: { status: \"Completed\" } // Filter by status \"Completed\"\n      });\n\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching completed tasks:\", error.message);\n      setError(\"Error fetching completed tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n      // Schedule the next update after 1 minute (adjust as needed\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"fs-2 text-muted fw-bolder text-uppercase\">\n        🔴 Rejected Tasks\n      </h1>\n      <p className=\"text-muted\">You can view all rejected task here!</p>{\" \"}\n      {loading && (\n        <div\n          style={{ width: \"100%\", height: \"100%\" }}\n          className=\"d-flex aline-center gap-2\"\n        >\n          <div\n            className=\"spinner-grow bg-primary\"\n            style={{ width: \"1rem\", height: \"1rem\" }}\n            role=\"status\"\n          ></div>\n\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n      <div\n        style={{\n          overflowY: \"scroll\",\n          height: \"80vh\",\n          scrollbarWidth: \"thin\",\n          scrollbarGutter: \"stable\",\n          scrollMargin: \"1rem\"\n        }}\n        className=\"d-flex flex-column gap-3\"\n      >\n        {tasks\n          .filter((task) => task.status === \"Rejected\")\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{ height: \"fit-content\" }}\n                className=\"d-flex justify-content-between aline-center form-control bg-black text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-success fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div>\n                  <p className=\"btn btn-light m-auto py-1 px-3 fw-bold\">\n                    Rejected\n                  </p>\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div\n                  style={{\n                    width: \"99.4%\",\n                    height: \"100%\",\n                    zIndex: \"5\",\n                    backgroundColor: \"rgba(5, 128, 8, 0.384)\",\n                    textShadow: \"-5px 5px 5px rgba(128, 128, 128, 0.422)\"\n                  }}\n                  className=\"watermark form-control   position-absolute d-flex justify-content-center aline-center\"\n                >\n                  <h1 className=\"text-uppercase text-light fw-bolder\">\n                    R E J E C T E D\n                  </h1>\n                </div>\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <p\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>{\" \"}\n                    {task.description}\n                  </p>\n                  <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span> {task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManagerRejectedTask;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { FaCheck } from \"react-icons/fa6\";\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { Toaster, toast } from \"react-hot-toast\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Table from \"react-bootstrap/esm/Table\";\nimport { BsFiletypeDoc } from \"react-icons/bs\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\nimport { v4 as uuid } from \"uuid\";\nimport BASE_URL from \"../../../Pages/config/config\";\nconst ManagerActiveTask = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [, setIsCompleting] = useState(false);\n  const [getEmployee, setGetEmployee] = useState([]);\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const [originalEmployeeData, setOriginalEmployeeData] = useState([]);\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [selectAll, setSelectAll] = useState(false);\n  const [isForwardButtonDisabled, setIsForwardButtonDisabled] = useState(true);\n  const email = localStorage.getItem(\"Email\");\n  const [employeeData, setEmployeeData] = useState([]);\n  const [searchData, setSearchData] = useState(\"\");\n  const [rowData, setRowData] = useState([]);\n  const [rowIndex, setRowIndex] = useState(null);\n  const [moreInfo, setMoreInfo] = useState(false);\n  const [taskDepartment, setTaskDepartment] = useState(\"\");\n  const { socket } = useContext(AttendanceContext);\n  const [taskName, setTaskName] = useState(\"\");\n  const loadEmployeeData = () => {\n    axios\n      .get(`${BASE_URL}/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        const employeeObj = response.data;\n        console.log(\"response\", response.data);\n        setEmployeeData(employeeObj);\n        setLoading(false);\n        const rowDataT = employeeObj.map((data) => {\n          return {\n            data,\n            Email: data[\"Email\"],\n            department: data[\"department\"][0][\"DepartmentName\"],\n            FirstName: data[\"FirstName\"] + \"\" + data[\"LastName\"],\n            ContactNo: data[\"ContactNo\"],\n            PositionName: data[\"position\"][0]\n              ? data[\"position\"][0][\"PositionName\"]\n              : \"\"\n          };\n        });\n        console.log(rowDataT);\n        setRowData(rowDataT);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    loadEmployeeData();\n  }, []);\n\n  const calculateRemainingTime = (endDate) => {\n    const now = new Date();\n    const endDateTime = new Date(endDate);\n    let remainingTime = endDateTime - now;\n\n    if (remainingTime < 0) {\n      // If remaining time is negative, consider it as delay\n      remainingTime = Math.abs(remainingTime);\n      return { delay: true, days: 0, hours: 0, minutes: 0 };\n    } else {\n      // Calculate remaining days, hours, minutes, and seconds\n      const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      return { delay: false, days, hours, minutes };\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/tasks`);\n      // console.log(response.data)\n      setTasks(response.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      setError(\"Error fetching tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"getEmployee:\", getEmployee);\n  }, [getEmployee]);\n\n  const forwordTaskToEmployee = async (taskId, dep, taskName) => {\n    setTaskName(taskName);\n    let filteredData = rowData.filter((val) => {\n      return val.department === dep;\n    });\n    setRowData(filteredData);\n    setTaskDepartment(dep);\n    setSelectedTaskId(taskId);\n    setModalShow(true);\n  };\n\n  const forwardTaskToEmployees = async (selectedTaskId) => {\n    try {\n      const employeeNotificationArr = [];\n      for (const employee of selectedEmployees) {\n        try {\n          employeeNotificationArr.push(employee.Email);\n          const employeeData = {\n            empname: employee.FirstName,\n            empemail: employee.Email,\n            empdesignation: employee.PositionName,\n            emptaskStatus: \"Task Assigned\"\n          };\n\n          await axios.post(\n            `${BASE_URL}/api/tasks/${selectedTaskId}/employees`,\n            {\n              employees: [employeeData]\n            }\n          );\n        } catch (error) {\n          console.error(\n            `Error forwarding task to ${employee.FirstName}:`,\n            error.message\n          );\n        }\n      }\n      const taskId = uuid();\n      const employeeTaskNotification = {\n        senderMail: email,\n        employeesEmail: employeeNotificationArr,\n        taskId,\n        status: \"unseen\",\n        message: `Task Assigned by ${email}`,\n        taskName,\n        Account: 2,\n        path: \"newTask\"\n      };\n\n      socket.emit(\"employeeTaskNotification\", employeeTaskNotification);\n      fetchData();\n\n      setSelectedEmployees([]);\n      setModalShow(false);\n    } catch (error) {\n      console.error(\"Error forwarding task:\", error.message);\n      toast.error(\"Failed to forward task. Please try again.\");\n    }\n  };\n\n  const askStatus = async (taskId) => {};\n  const completeTask = async (taskId, taskName, adminMail) => {\n    try {\n      setIsCompleting(true);\n\n      const CompleteRemarks = prompt(\"Enter remarks to Complete Task:\");\n\n      if (CompleteRemarks === null) {\n        setIsCompleting(false);\n        return;\n      }\n\n      await axios.put(`${BASE_URL}/api/tasks/${taskId}`, {\n        status: \"Completed\",\n        comment: CompleteRemarks\n      });\n\n      toast.success(\"Task completed successfully!\");\n      const data = {\n        taskId,\n        status: \"unseen\",\n        path: \"taskstatus\",\n        senderMail: email,\n        taskName,\n        message: `Task Completed by ${email}`,\n        adminMail,\n        Account: 1,\n        taskStatus: \"completed\"\n      };\n      socket.emit(\"adminTaskNotification\", data);\n      fetchData();\n    } catch (error) {\n      console.error(\"Error completing task:\", error.message);\n      toast.error(\"Failed to complete task. Please try again.\");\n    } finally {\n      setIsCompleting(false);\n    }\n  };\n\n  const handleSearch = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n\n    if (searchValue === \"\") {\n      setGetEmployee(originalEmployeeData);\n    } else {\n      const filteredEmployees = originalEmployeeData.filter(\n        (employee) =>\n          employee.name.toLowerCase().includes(searchValue) ||\n          employee.email.toLowerCase().includes(searchValue) ||\n          employee.designation.toLowerCase().includes(searchValue)\n      );\n\n      setGetEmployee(filteredEmployees);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInputEmail(e.target.value);\n  };\n\n  const removeSelectedEmployee = (email) => {\n    setSelectedEmployees(\n      selectedEmployees.filter((employee) => employee.email !== email)\n    );\n  };\n\n  const addSelectedEmployee = (employee) => {\n    const isChecked = selectedEmployees.some(\n      (emp) => emp.Email === employee.Email\n    );\n\n    if (isChecked) {\n      setSelectedEmployees((prevEmployees) =>\n        prevEmployees.filter((emp) => emp.Email !== employee.Email)\n      );\n    } else {\n      setSelectedEmployees([...selectedEmployees, employee]);\n    }\n    if (selectedEmployees.length < 0) {\n      setIsForwardButtonDisabled(true);\n    } else {\n      setIsForwardButtonDisabled(false); // Disable the button when there is at least one selected employee\n    }\n\n    setInputEmail(\"\");\n  };\n\n  const toggleSelectAll = () => {\n    setSelectAll(!selectAll);\n    setSelectedEmployees(selectAll ? [] : [...rowData]);\n  };\n\n  const calculateProgress = (task) => {\n    const totalEmployees =\n      task.employees.length -\n      task.employees.filter((emp) => emp.emptaskStatus === \"Rejected\").length;\n    const completedTasks = task.employees.filter(\n      (emp) => emp.emptaskStatus === \"Completed\"\n    ).length;\n    return (completedTasks / totalEmployees) * 100;\n  };\n\n  const calculateTotalActiveTasks = () => {\n    return tasks.filter(\n      (task) => task.status === \"Pending\" && task.managerEmail === email\n    ).length;\n  };\n\n  return (\n    <div className=\"py-2\">\n      <h1 className=\"fs-3 fw-bolder text-uppercase mb-4\">\n        All Active Tasks ({calculateTotalActiveTasks()})\n      </h1>\n\n      {loading && (\n        <div className=\"d-flex align-items-center gap-2\">\n          <div className=\"spinner-grow text-primary\" role=\"status\"></div>\n          <span className=\"text-primary fw-bold\">Loading...</span>\n        </div>\n      )}\n\n      {error && <p className=\"text-danger\">{error}</p>}\n\n      <div className=\"overflow-auto\" style={{ maxHeight: \"80vh\" }}>\n        {tasks\n          .filter(\n            (task) => task.status === \"Pending\" && task.managerEmail === email\n          )\n          .map((task, index) => (\n            <details\n              style={{\n                boxShadow: \"-1px 1px 10px gray\"\n              }}\n              className=\"p-1 position-relative mt-3 fs-4 rounded mx-3\"\n              key={task.id}\n            >\n              <summary\n                style={{ height: \"fit-content\" }}\n                className=\"d-flex justify-content-between aline-center form-control bg-dark  text-white\"\n              >\n                <div className=\"fw-bold fs-5 d-flex justify-content-center flex-column\">\n                  # Task {index + 1} : {task.Taskname}\n                </div>\n                <div\n                  style={{ position: \"absolute\", top: \"-10px\", left: \"20px\" }}\n                  className=\"fw-bold bg-white rounded-5 px-3 text-primary fs-6 d-flex justify-content-center aline-center flex-column\"\n                >\n                  {task.department}\n                </div>\n                <div className=\"d-flex gap-2 RemainingTimeHandel justify-content-between \">\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div>\n                      <div className=\"text-center d-none\">\n                        <div className=\"form-control  fw-bold p-0\">\n                          {calculateRemainingTime(task.endDate).days}{\" \"}\n                        </div>{\" \"}\n                        <div>Day</div>\n                      </div>\n                      <h5 className=\"btn btn-danger p-1 px-3 fw-bold\">Late</h5>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).days}{\" \"}\n                      </div>{\" \"}\n                      <div>Day</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control  fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).hours}{\" \"}\n                      </div>{\" \"}\n                      <div>Hrs</div>\n                    </div>\n                  )}\n                  {calculateRemainingTime(task.endDate).delay ? (\n                    <div className=\"text-center d-none\">\n                      <div className=\"form-control fw-bold p-0\">\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  ) : (\n                    <div className=\"text-center\">\n                      <div\n                        style={{ boxShadow: \"0 0 5px 2px gray inset\" }}\n                        className=\"form-control fw-bold px-1 py-0\"\n                      >\n                        {calculateRemainingTime(task.endDate).minutes}{\" \"}\n                      </div>{\" \"}\n                      <div>Min</div>\n                    </div>\n                  )}\n                </div>\n              </summary>\n              <div\n                style={{ position: \"relative\" }}\n                className=\"row p-1 my-2 mx-0 bg-light text-dark rounded\"\n              >\n                <div style={{ height: \"fit-content\" }} className=\"form-control\">\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"text-start fs-6 form-control\"\n                  >\n                    <h6 className=\"fw-bold\">Task Discription</h6>\n                    <div className=\"row justify-between\">\n                      <div className=\"col-10\">{task.description}</div>\n                      <div\n                        className=\"col-2 d-flex\"\n                        style={{ width: \"6rem\", borderRadius: \"50%\" }}\n                      >\n                        <CircularProgressbar\n                          className=\"fw-bold\"\n                          value={calculateProgress(task)}\n                          text={`${calculateProgress(task).toFixed(2)}%`}\n                          styles={buildStyles({\n                            pathColor: \"#28a745\",\n                            textColor: \"#28a745\"\n                          })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Task Durations <br /> <span>{task.duration} days</span>{\" \"}\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Created By <br /> <span>{task.managerEmail}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      Start Date <br />{\" \"}\n                      <span>\n                        {new Date(task.startDate).toLocaleDateString()}\n                      </span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      End Date <br />{\" \"}\n                      <span>{new Date(task.endDate).toLocaleDateString()}</span>\n                    </p>\n                    <p\n                      style={{ fontSize: \"1rem\" }}\n                      className=\"col-6 col-sm-6 col-md-2\"\n                    >\n                      <span>\n                        Task Status <br /> {task.status}\n                      </span>\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <p>\n                      <span className=\"fw-bold\">Remarks : </span> {task.comment}\n                    </p>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <h6 className=\"fw-bold\">Forwarded Members Status</h6>\n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>S. No</th>\n                          <th>Name</th>\n                          <th>Email</th>\n                          <th>Designation</th>\n                          <th>Task Status</th>\n                          <th>Remarks</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {task.employees.map((taskemp, i) => (\n                          <tr key={i}>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {i + 1}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empname}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empemail}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empdesignation}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.emptaskStatus}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor:\n                                  taskemp.emptaskStatus === \"Completed\"\n                                    ? \"rgba(25, 201, 84, 0.436)\"\n                                    : taskemp.emptaskStatus === \"Rejected\"\n                                    ? \"rgba(214, 92, 44, 0.636)\"\n                                    : \"inherit\"\n                              }}\n                            >\n                              {taskemp.empTaskComment}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                  <div\n                    style={{ height: \"fit-content\" }}\n                    className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\"\n                  >\n                    <button\n                      className=\"btn btn-primary col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() =>\n                        forwordTaskToEmployee(\n                          task._id,\n                          task.department,\n                          task.Taskname\n                        )\n                      }\n                    >\n                      <IoCheckmarkDoneSharp /> Forward Task\n                    </button>\n                    <button\n                      className=\"btn btn-warning col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() => askStatus(task._id)}\n                    >\n                      <BsFiletypeDoc /> View Docs\n                    </button>\n                    <button\n                      className=\"btn btn-success col-2 d-flex justify-center aline-center gap-2\"\n                      onClick={() =>\n                        completeTask(task._id, task.adminMail, task.Taskname)\n                      }\n                      disabled={calculateProgress(task) !== 100}\n                    >\n                      <FaCheck />\n                      Complete Task\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </details>\n          ))}\n      </div>\n\n      <Modal\n        fullscreen={true}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Forward Task to Employees</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <form className=\"d-flex col-8 flex-column gap-3\">\n              <input\n                className=\"w-100 py-1 px-2 rounded-5 border\"\n                type=\"search\"\n                name=\"\"\n                placeholder=\"Search...\"\n                id=\"\"\n                value={inputEmail}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  handleSearch(e);\n                }}\n              />\n              <div>\n                <div className=\" p-2\">\n                  {\" \"}\n                  <input\n                    type=\"checkbox\"\n                    name=\"\"\n                    id=\"\"\n                    onChange={toggleSelectAll}\n                    checked={selectAll}\n                  />{\" \"}\n                  <span>Select All</span>\n                </div>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Select</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Contact</th>\n                      <th scope=\"col\">Designation</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {rowData.map((row, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">\n                          <input\n                            type=\"checkbox\"\n                            name=\"\"\n                            id=\"\"\n                            onChange={() => addSelectedEmployee(row)}\n                            checked={selectedEmployees.some(\n                              (emp) => emp.Email === row.Email\n                            )}\n                          />\n                        </th>\n                        <td>{row.FirstName}</td>\n                        <td>{row.Email}</td>\n                        <td>{row.ContactNo}</td>\n                        <td>{row.PositionName}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </form>\n            <div className=\"d-flex flex-column col-4 gap-2\">\n              <div className=\"row form-control d-flex pt-3 rounded mx-1 justify-content-between\">\n                <div>\n                  <span className=\"fw-bold\">Selected Employees:</span>\n                  {selectedEmployees.map((employee, index) => (\n                    <div key={index} className=\"d-flex\">\n                      <span\n                        style={{\n                          boxShadow: \"-3px 3px 5px rgba(204, 201, 201, 0.767)\",\n                          width: \"fit-content\"\n                        }}\n                        className=\"selected-employee-email d-flex btn gap-2 aline-center  btn-light py-1 px-2 m-1\"\n                        onClick={() => removeSelectedEmployee(employee.Email)}\n                      >\n                        {employee.FirstName} - {employee.PositionName}\n                        <span className=\"text-danger d-none\">\n                          <MdDeleteForever />\n                        </span>\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <button\n                className=\"btn  btn-primary\"\n                onClick={() => forwardTaskToEmployees(selectedTaskId)}\n                disabled={isForwardButtonDisabled}\n              >\n                Forward Task to Employees\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => setModalShow(false)}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ManagerActiveTask;\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TfiReload } from \"react-icons/tfi\";\r\nimport { FaCircleInfo } from \"react-icons/fa6\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\nconst SelfAttendance = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n  const [hoveredDate, setHoveredDate] = useState(null);\r\n  const [isInfoHovering, setIsInfoHovering] = useState(false);\r\n  const empMail = localStorage.getItem(\"Email\");\r\n  const employeeId = localStorage.getItem(\"_id\");\r\n\r\n  const handleMouseEnter = (date) => {\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  const handleInfoMouseEnter = () => {\r\n    setIsInfoHovering(true);\r\n  };\r\n\r\n  const handleInfoMouseLeave = () => {\r\n    setIsInfoHovering(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleFetchAttendance = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${BASE_URL}/api/attendance/${employeeId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\") || \"\"}`\r\n            }\r\n          }\r\n        );\r\n\r\n        let singleUser = response.data.filter((val) => {\r\n          return val.employeeObjID && val.employeeObjID.Email === empMail;\r\n        });\r\n\r\n        setAttendanceData(() => {\r\n          return singleUser.length > 0 ? singleUser[0] : null;\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching attendance data:\", error);\r\n      }\r\n    };\r\n\r\n    handleFetchAttendance();\r\n  }, [employeeId, empMail]);\r\n\r\n  const getTotalHolidays = () => {\r\n    if (\r\n      attendanceData &&\r\n      attendanceData.user &&\r\n      attendanceData.user.holidayObjID\r\n    ) {\r\n      return attendanceData.user.holidayObjID.holidays.length;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    switch (monthNumber) {\r\n      case 1:\r\n        return \"January\";\r\n      case 2:\r\n        return \"February\";\r\n      case 3:\r\n        return \"March\";\r\n      case 4:\r\n        return \"April\";\r\n      case 5:\r\n        return \"May\";\r\n      case 6:\r\n        return \"June\";\r\n      case 7:\r\n        return \"July\";\r\n      case 8:\r\n        return \"August\";\r\n      case 9:\r\n        return \"September\";\r\n      case 10:\r\n        return \"October\";\r\n      case 11:\r\n        return \"November\";\r\n      case 12:\r\n        return \"December\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getMonthsForYear = (year) => {\r\n    if (year === new Date().getFullYear()) {\r\n      return Array.from({ length: new Date().getMonth() + 1 }, (_, i) => i + 1);\r\n    }\r\n    return Array.from({ length: 12 }, (_, i) => i + 1);\r\n  };\r\n\r\n  const getYears = () => {\r\n    if (attendanceData && attendanceData.years) {\r\n      const currentYear = new Date().getFullYear();\r\n      return attendanceData.years.filter((year) => year.year <= currentYear);\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const millisecondsToTime = (milliseconds) => {\r\n    const millisecond = Math.floor(milliseconds);\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n\r\n    const formattedHours = String(hours).padStart(2, \"0\");\r\n    const formattedMinutes = String(minutes % 60).padStart(2, \"0\");\r\n    const formattedSeconds = String(seconds % 60).padStart(2, \"0\");\r\n    const formattedMillisecond = String(millisecond % 60).padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}:${formattedMillisecond}`;\r\n  };\r\n\r\n  const getAttendanceMark = (date) => {\r\n    const loginTime = date && date.loginTime[0];\r\n    if (loginTime) {\r\n      const [loginHour, loginMinute] = loginTime.split(\":\").map(Number);\r\n      if (loginHour > 9 || (loginHour === 9 && loginMinute > 45)) {\r\n        return \"H\";\r\n      } else if (loginHour > 9 || (loginHour === 9 && loginMinute > 30)) {\r\n        return \"L\";\r\n      }\r\n    }\r\n    return loginTime ? \"P\" : \"A\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column p-5 gap-3\">\r\n      <div className=\"d-flex gap-3 justify-content-between\">\r\n        {/* <div>\r\n          <select\r\n            className=\"form-select w-100 shadow-sm text-muted\"\r\n            id=\"employeeId\"\r\n            value={employeeId}\r\n            onChange={handleEmployeeChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              --Select an employee--\r\n            </option>\r\n            {employees\r\n              .sort((a, b) => a.empID - b.empID)\r\n              .map((employee) => (\r\n                <option\r\n                  className=\"text-uppercase\"\r\n                  key={employee._id}\r\n                  value={employee._id}\r\n                >\r\n                  <p>\r\n                    🪪 ({employee.empID}) {employee.FirstName}\r\n                  </p>\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div> */}\r\n        {/* <button\r\n          disabled={!employeeId}\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \".5rem\" }}\r\n          className=\"btn shadow btn-dark fw-bolder\"\r\n          onClick={handleFetchAttendance}\r\n        >\r\n          <MdOutlineRefresh\r\n            className={`fs-4 ${isButtonClicked ? \"rotate\" : \"\"}`}\r\n          />{\" \"}\r\n          Get\r\n        </button> */}\r\n      </div>\r\n\r\n      {attendanceData && (\r\n        <div className=\"d-flex gap-3\">\r\n          <div>\r\n            <label htmlFor=\"year\">Select a year:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"year\"\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n            >\r\n              {getYears().map((year) => (\r\n                <option key={year.year} value={year.year}>\r\n                  {year.year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"month\">Select a month:</label>\r\n            <select\r\n              className=\"form-select shadow\"\r\n              id=\"month\"\r\n              value={selectedMonth}\r\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n            >\r\n              {getMonthsForYear(selectedYear).map((month) => (\r\n                <option key={month} value={month}>\r\n                  {getMonthName(month)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {attendanceData && (\r\n        <div style={{ overflow: \"auto\", height: \"80vh\" }}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"shadow-sm\">\r\n                <th className=\"bg-dark text-white text-center\">Date</th>\r\n                <th className=\"bg-dark text-white text-center\">Status</th>\r\n                <th className=\"bg-dark text-white\">Login Time</th>\r\n                <th className=\"bg-dark text-white\">Logout Time</th>\r\n                <th className=\"bg-dark text-white\">Break</th>\r\n                <th className=\"bg-dark text-white\">Total Login</th>\r\n                <th className=\"bg-dark text-white\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getYears().map((year) =>\r\n                year.months\r\n                  .filter((month) => month.month === selectedMonth)\r\n                  .map((month) =>\r\n                    month.dates\r\n                      .sort((a, b) => a.date - b.date)\r\n                      .map((date) => (\r\n                        <tr\r\n                          className=\"shadow-sm\"\r\n                          key={date.date}\r\n                          id={`attendance-row-${date.date}`} // Assign unique ID to each row\r\n                          onMouseEnter={() => handleMouseEnter(date.date)}\r\n                          onMouseLeave={() => handleMouseLeave()}\r\n                        >\r\n                          <td className=\"text-center\">\r\n                            <span className=\"fw-bold bg-info py-1 px-2  shadow-sm text-white\">\r\n                              {date.date}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"center\" }}\r\n                          >\r\n                            {getAttendanceMark(date)}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.loginTime[0]}\r\n                          </td>\r\n                          <td className=\"text-uppercase\">\r\n                            {date.logoutTime[date.logoutTime.length - 1]}\r\n                          </td>\r\n                          <td className=\"position-relative bg-white\">\r\n                            <div\r\n                              style={{\r\n                                display: \"flex \",\r\n                                justifyContent: \"start\",\r\n                                alignItems: \"center\"\r\n                              }}\r\n                              className=\"fs-6 gap-2 \"\r\n                              onMouseEnter={handleInfoMouseEnter}\r\n                              onMouseLeave={handleInfoMouseLeave}\r\n                            >\r\n                              <span\r\n                                style={{ scale: \"0.7\" }}\r\n                                className=\"bg-warning py-0  text-white  px-2 rounded-5 my-auto\"\r\n                              >\r\n                                {date.breakTime.length}\r\n                              </span>\r\n                              <span className=\"fw-bold text-dark fs-6\">\r\n                                {millisecondsToTime(date.totalBrake)}\r\n                              </span>{\" \"}\r\n                              <FaCircleInfo\r\n                                style={{ fontSize: \".9rem\" }}\r\n                                className=\"text-info \"\r\n                              />\r\n                            </div>\r\n\r\n                            <div\r\n                              style={{ zIndex: \"5\", right: \"0%\" }}\r\n                              className=\"position-absolute\"\r\n                            >\r\n                              {isInfoHovering &&\r\n                                hoveredDate === date.date && ( // Check if info button is hovered and the date is the hovered date\r\n                                  <table className=\"table table-bordered table-striped\">\r\n                                    <thead>\r\n                                      <tr className=\"shadow-sm p-0\">\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Break\r\n                                        </th>\r\n                                        <th className=\"bg-info  py-0 text-white\">\r\n                                          Resume\r\n                                        </th>\r\n                                        <th\r\n                                          className=\"text-end  py-0 bg-info text-white\"\r\n                                          style={{ whiteSpace: \"pre\" }}\r\n                                        >\r\n                                          Total Break\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {date.breakTime.map(\r\n                                        (breakTime, index) => (\r\n                                          <tr className=\"shadow-sm\" key={index}>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {breakTime}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-uppercase  py-1 text-center\"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {date.ResumeTime[index]}\r\n                                            </td>\r\n                                            <td\r\n                                              className=\"text-end py-1 \"\r\n                                              style={{ whiteSpace: \"pre\" }}\r\n                                            >\r\n                                              {millisecondsToTime(\r\n                                                date.BreakData[index]\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        )\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                )}\r\n                            </div>\r\n                          </td>\r\n                          <td>{millisecondsToTime(date.totalLogAfterBreak)}</td>\r\n                          <td>{date.status}</td>\r\n                        </tr>\r\n                      ))\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      {attendanceData === null && (\r\n        <div\r\n          style={{\r\n            height: \"80vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            wordSpacing: \"5px\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\"\r\n          }}\r\n        >\r\n          <div className=\"fs-2 fw-bolder\">\r\n            <TfiReload className=\"spinner-border text-info\" />\r\n          </div>\r\n          <p className=\"text-muted\">\r\n            User not selected. To view data, please select a user.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SelfAttendance);\r\n","// import React, { useEffect, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\n\r\n// function SetLog() {\r\n//   // const [employees, setEmployees] = useState([]);\r\n//   // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n//   // const [attencenceID, setAttencenceID] = useState(\"\");\r\n//   // const [message, setMessage] = useState(\"\");\r\n\r\n//   const {employees, setEmployees, selectedEmployee, setSelectedEmployee, attencenceID, setAttencenceID, message, setMessage} = useContext(AttendanceContext)\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:4000/api/employee\", {\r\n//           headers: {\r\n//             authorization: localStorage.getItem(\"token\") || \"\",\r\n//           },\r\n//         });\r\n//         setEmployees(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching employees:\", error);\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleUserChange = (employeeID) => {\r\n//     const selectedEmployee = employees.find(\r\n//       (employee) => employee._id === employeeID\r\n//     );\r\n\r\n//     if (selectedEmployee) {\r\n//       setAttencenceID(selectedEmployee.attendanceObjID);\r\n//       setSelectedEmployee(employeeID);\r\n//       getMessage(employeeID);\r\n//     }\r\n//   };\r\n\r\n//   const getMessage = async (employeeID) => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:4000/api/attendance/${employeeID}`\r\n//       );\r\n//       const lastEntry = response.data[response.data.length - 1];\r\n\r\n//       if (lastEntry) {\r\n//         setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n//       } else {\r\n//         setMessage(\"\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching attendance data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLogin = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select a user\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         loginTime: [currentTime],\r\n//         status: \"login\",\r\n//       });\r\n//       setMessage(\"Login time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording login time:\", error);\r\n//       setMessage(\"Error recording login time\");\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select an employee\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         logoutTime: [currentTime],\r\n//         status: \"logout\",\r\n//       });\r\n//       setMessage(\"Logout time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording logout time:\", error);\r\n//       setMessage(\"Error recording logout time\");\r\n//     }\r\n//   };\r\n\r\n//   const handleResume = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select an employee\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         ResumeTime: [currentTime],\r\n//         resumeTimeMS: [currentTimeMs],\r\n//         status: \"resume\",\r\n//       });\r\n\r\n//       setMessage(\"Resumed time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording resume time:\", error);\r\n//       setMessage(\"Error recording resume time\");\r\n//     }\r\n//   };\r\n\r\n//   const handleBreak = async () => {\r\n//     try {\r\n//       if (!selectedEmployee) {\r\n//         setMessage(\"Please select an employee\");\r\n//         return;\r\n//       }\r\n\r\n//       const currentTime = new Date().toLocaleTimeString();\r\n//       const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n//       await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n//         employeeId: selectedEmployee,\r\n//         year: new Date().getFullYear(),\r\n//         month: new Date().getMonth() + 1,\r\n//         date: new Date().getDate(),\r\n//         breakTime: [currentTime],\r\n//         breakTimeMs: [currentTimeMs],\r\n//         status: \"break\",\r\n//       });\r\n//       setMessage(\"Break time recorded successfully\");\r\n//     } catch (error) {\r\n//       console.error(\"Error recording break time:\", error);\r\n//       setMessage(\"Error recording break time\");\r\n//     }\r\n//   };\r\n\r\n//   console.log(employees);\r\n\r\n//   return (\r\n//     <div className=\"App row\">\r\n//       <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n//       <div\r\n//         className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n//         style={{ height: \"fit-content\" }}\r\n//       >\r\n//         <select\r\n//           className=\"form-select mx-2 w-25 \"\r\n//           onChange={(e) => handleUserChange(e.target.value)}\r\n//         >\r\n//           <option value=\"\">-- Select User --</option>\r\n//           {employees.map((employee) => (\r\n//             <option key={employee._id} value={employee._id}>\r\n//               {employee.FirstName}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <div className=\"d-flex gap-3\">\r\n//           <button className=\"btn btn-success\" onClick={handleLogin}>\r\n//             Login\r\n//           </button>\r\n//           <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n//             Logout\r\n//           </button>\r\n//           <div className=\"d-flex gap-3\">\r\n//             <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n//               Break\r\n//             </button>\r\n//             <button className=\"btn btn-primary\" onClick={handleResume}>\r\n//               Resume\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SetLog;\r\n\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport SelfAttendance from \"./SelfAttendance\";\r\nimport Moment from \"moment\";\r\n\r\nfunction SetLog(props) {\r\n  // const [employees, setEmployees] = useState([]);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  // const [attencenceID, setAttencenceID] = useState(\"\");\r\n  // const [message, setMessage] = useState(\"\");\r\n  const [empName, setEmpName] = useState(null);\r\n\r\n  const {\r\n    employees,\r\n    setEmployees,\r\n    selectedEmployee,\r\n    setSelectedEmployee,\r\n    attencenceID,\r\n    setAttencenceID,\r\n    message,\r\n    setMessage\r\n  } = useContext(AttendanceContext);\r\n\r\n  useEffect(() => {\r\n    const loadEmployeeData = async (email) => {\r\n      await axios\r\n        .get(\"http://localhost:4000/api/employee\", {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        })\r\n        .then((response) => {\r\n          // Ensure that response.data is an array\r\n          let hr = response.data.filter((val) => {\r\n            return val.Account === 2;\r\n          });\r\n          setEmployees(hr);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    loadEmployeeData();\r\n  }, []);\r\n  // hello\r\n\r\n  useEffect(() => {\r\n    const loadPersonalInfoData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:4000/api/personal-info/\" + props.data[\"_id\"],\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        );\r\n        console.log(response.data.FirstName);\r\n        setEmpName(response.data.FirstName);\r\n      } catch (error) {\r\n        console.error(\"Error fetching employees:\", error);\r\n      }\r\n    };\r\n\r\n    loadPersonalInfoData();\r\n  }, []);\r\n\r\n  // hello\r\n  const handleUserChange = (employeeID) => {\r\n    const selectedEmployee = employees.find(\r\n      (employee) => employee._id === employeeID\r\n    );\r\n\r\n    if (selectedEmployee) {\r\n      setAttencenceID(selectedEmployee.attendanceObjID);\r\n      setSelectedEmployee(employeeID);\r\n      getMessage(employeeID);\r\n    }\r\n  };\r\n\r\n  const getMessage = async (employeeID) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:4000/api/attendance/${employeeID}`\r\n      );\r\n      const lastEntry = response.data[response.data.length - 1];\r\n\r\n      if (lastEntry) {\r\n        setMessage(`Status: ${lastEntry.years[0].months[0].dates[0].status}`);\r\n      } else {\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching attendance data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    console.log(data);\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select a user\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        loginTime: [currentTime],\r\n        status: \"login\"\r\n      });\r\n      setMessage(\"Login time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording login time:\", error);\r\n      setMessage(\"Error recording login time\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    let data = employees.filter((val) => {\r\n      return val.FirstName === empName;\r\n    });\r\n    let attencenceID = data[0].attendanceObjID;\r\n    let selectedEmployee = data[0]._id;\r\n    try {\r\n      if (!empName) {\r\n        setMessage(\"Please select an employee\");\r\n        return;\r\n      }\r\n\r\n      const currentTime = Moment().filter(\"HH:mm:ss\");\r\n      await axios.post(`http://localhost:4000/api/attendance/${attencenceID}`, {\r\n        employeeId: selectedEmployee,\r\n        year: new Date().getFullYear(),\r\n        month: new Date().getMonth() + 1,\r\n        date: new Date().getDate(),\r\n        logoutTime: [currentTime],\r\n        status: \"logout\"\r\n      });\r\n      setMessage(\"Logout time recorded successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error recording logout time:\", error);\r\n      setMessage(\"Error recording logout time\");\r\n    }\r\n  };\r\n\r\n  const handleResume = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(\r\n          `http://localhost:4000/api/attendance/${attencenceID}`,\r\n          {\r\n            employeeId: selectedEmployee,\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            date: new Date().getDate(),\r\n            ResumeTime: [currentTime],\r\n            resumeTimeMS: [currentTimeMs],\r\n            status: \"resume\"\r\n          }\r\n        );\r\n\r\n        setMessage(\"Resumed time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording resume time:\", error);\r\n        setMessage(\"Error recording resume time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBreak = async () => {\r\n    let email = localStorage.getItem(\"Email\");\r\n    if (employees) {\r\n      let data = employees.filter((val) => {\r\n        return val.Email === email;\r\n      });\r\n      console.log(email);\r\n      let attencenceID = data[0].attendanceObjID;\r\n      let selectedEmployee = data[0]._id;\r\n      try {\r\n        if (!data) {\r\n          setMessage(\"Please select an employee\");\r\n          return;\r\n        }\r\n\r\n        const currentTime = Moment().filter(\"HH:mm:ss\");\r\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\r\n\r\n        await axios.post(\r\n          `http://localhost:4000/api/attendance/${attencenceID}`,\r\n          {\r\n            employeeId: selectedEmployee,\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth() + 1,\r\n            date: new Date().getDate(),\r\n            breakTime: [currentTime],\r\n            breakTimeMs: [currentTimeMs],\r\n            status: \"break\"\r\n          }\r\n        );\r\n        setMessage(\"Break time recorded successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error recording break time:\", error);\r\n        setMessage(\"Error recording break time\");\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  return (\r\n    <div className=\"App row\">\r\n      <h1 className=\"text-center text-uppercase my-3\">Attendance System</h1>\r\n      <div\r\n        className=\"form-control d-flex  gap-3 p-3 m-3\"\r\n        style={{ height: \"fit-content\" }}\r\n      >\r\n        {/* <select\r\n          className=\"form-select mx-2 w-25 \"\r\n          onChange={(e) => handleUserChange(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select User --</option>\r\n          {employees.map((employee) => (\r\n            <option key={employee._id} value={employee._id}>\r\n              {employee.FirstName}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n        <input value={empName} style={{ display: \"none\" }} />\r\n\r\n        <div className=\"d-flex gap-3\">\r\n          <button className=\"btn btn-success\" onClick={handleLogin}>\r\n            Mark Attendance\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n          <div className=\"d-flex gap-3\">\r\n            <button className=\"btn btn-warning\" onClick={handleBreak}>\r\n              Break\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleResume}>\r\n              Resume\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"view\">\r\n        <SelfAttendance />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetLog;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { AttendanceContext } from \"../../../Context/AttendanceContext/AttendanceContext\";\r\nimport \"./notification.css\";\r\nimport BASE_URL from \"../../../Pages/config/config\";\r\n\r\nconst Notification = () => {\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedNotification, setSelectedNotification] = useState([]);\r\n  const [notification, setNotification] = useState(null);\r\n  const { socket } = useContext(AttendanceContext);\r\n  const id = localStorage.getItem(\"_id\");\r\n  const email = localStorage.getItem(\"Email\");\r\n\r\n  const loadEmployeeData = () => {\r\n    axios\r\n      .get(`${BASE_URL}/api/particularEmployee/${id}`, {\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") || \"\"\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setNotification(response.data.Notification);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"taskNotificationReceived\", () => {\r\n        loadEmployeeData();\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    // Check if all notifications are selected and update the \"Select All\" checkbox accordingly\r\n    setSelectAll(\r\n      notification && selectedNotification.length === notification.length\r\n    );\r\n  }, [selectedNotification, notification]);\r\n\r\n  const addSelectedNotification = (val) => {\r\n    const isChecked = selectedNotification.some(\r\n      (noti) => noti.taskId === val.taskId\r\n    );\r\n\r\n    if (isChecked) {\r\n      setSelectedNotification((prevNotification) =>\r\n        prevNotification.filter((noti) => noti.taskId !== val.taskId)\r\n      );\r\n    } else {\r\n      setSelectedNotification([...selectedNotification, val]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    setSelectAll(!selectAll);\r\n    setSelectedNotification(selectAll ? [] : [...notification]);\r\n  };\r\n  const clearAllHandler = () => {\r\n    if (notification.length > 0) {\r\n      console.log(\"clearALL\");\r\n      axios\r\n        .post(\r\n          `${BASE_URL}/api/selectedNotificationDelete`,\r\n          { email },\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          setNotification(response.data.result.Notification);\r\n          socket.emit(\"notificationPageUpdate\", true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const multiNotificationDeleteHandler = () => {\r\n    if (selectedNotification.length > 0) {\r\n      const taskIDArray = selectedNotification.map((val) => val.taskId);\r\n      const data = {\r\n        employeeMail: email,\r\n        tasks: taskIDArray\r\n      };\r\n      if (selectAll) {\r\n        clearAllHandler();\r\n      } else {\r\n        axios\r\n          .post(`${BASE_URL}/api/multiSelectedNotificationDelete`, data, {\r\n            headers: {\r\n              authorization: localStorage.getItem(\"token\") || \"\"\r\n            }\r\n          })\r\n          .then((response) => {\r\n            setNotification(response.data.result.Notification);\r\n            setSelectedNotification([]);\r\n            console.log(\"emittted\");\r\n            socket.emit(\"notificationPageUpdate\", true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const notificationDeleteHandler = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .post(\r\n        `${BASE_URL}/api/notificationDeleteHandler/${id}`,\r\n        { email },\r\n        {\r\n          headers: {\r\n            authorization: localStorage.getItem(\"token\") || \"\"\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setNotification(response.data.result.Notification);\r\n        setSelectedNotification([]);\r\n        console.log(\"emittted\");\r\n        socket.emit(\"notificationPageUpdate\", true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(notification);\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <form className=\"d-flex col-8 flex-column gap-3\">\r\n          <div>\r\n            <div className=\"p-2\">\r\n              {\" \"}\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"\"\r\n                id=\"\"\r\n                onChange={toggleSelectAll}\r\n                checked={selectAll}\r\n              />{\" \"}\r\n              <span>Select All</span>\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Select</th>\r\n                  <th scope=\"col\">task Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {notification &&\r\n                  notification.map((val, index) => (\r\n                    <tr key={index}>\r\n                      <th scope=\"row\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name=\"\"\r\n                          id=\"\"\r\n                          onChange={() => addSelectedNotification(val)}\r\n                          checked={selectedNotification.some(\r\n                            (noti) => noti.taskId === val.taskId\r\n                          )}\r\n                        />\r\n                      </th>\r\n                      <td>{val.taskName}</td>\r\n                      <td>{val.senderMail}</td>\r\n                      {val.status === \"unseen\" ? (\r\n                        <td>Unread</td>\r\n                      ) : (\r\n                        <td>read</td>\r\n                      )}\r\n                      <td>\r\n                        <ImBin\r\n                          onClick={() => notificationDeleteHandler(val.taskId)}\r\n                          className=\"bin\"\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <button\r\n        className=\"Notification_delete\"\r\n        onClick={multiNotificationDeleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","// MainContent.jsx\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes, Switch } from \"react-router-dom\";\nimport Role from \"../../Pages/Department/Role.jsx\";\nimport Position from \"../../Pages/Department/Position.jsx\";\nimport Department from \"../../Pages/Department/Department.jsx\";\nimport Country from \"../../Pages/Location/Country.jsx\";\nimport State from \"../../Pages/Location/State.jsx\";\nimport City from \"../../Pages/Location/City.jsx\";\nimport Company from \"../../Pages/Company/Company.jsx\";\n// import Employee from \"../../Pages/AddEmployee/Employee.jsx\";\nimport Salary from \"../../Pages/Salary/Salary.jsx\";\nimport LeaveApplicationHR from \"../Manager/LeaveApplicationHR.jsx\";\nimport NotFound404 from \"../../Pages/PageNot/NotFound404.jsx\";\nimport Dashboard from \"../Manager/Dashboard/ManagerDash.jsx\";\nimport ViewAttendance from \"../HrManager/attendance/ViewAttendance.jsx\";\n// task management\nimport ManagerNewTask from \"./ManagerTaskManagement/ManagerNewTask.jsx\";\nimport ManagerCencelledTask from \"./ManagerTaskManagement/ManagerCencelledTask.jsx\";\nimport ManagerCompletedTask from \"./ManagerTaskManagement/ManagerCompletedTask.jsx\";\nimport ManagerRejectedTask from \"./ManagerTaskManagement/ManagerRejectedTask.jsx\";\nimport ManagerActiveTask from \"./ManagerTaskManagement/ManagerActiveTask.jsx\";\n// import Attendance from \"../HrManager/attendance/Attendance.jsx\";\nimport Attendance from \"./attendance/Attendance.jsx\";\nimport InnerDashContainer from \"../InnerDashContainer.jsx\";\nimport LeaveCalendar from \"../../Pages/LeaveCalendar/LeaveCalendar.jsx\";\nimport TodaysAttendance from \"../../Pages/DailyAttendance/TodaysAttendance.jsx\";\nimport Employee from \"../../Pages/AddEmployee/Employee.jsx\";\nimport LeaveApplication from \"../../Pages/ApplyLeave/LeaveApplication.jsx\";\nimport LeaveApplicationHRAccept from \"../HrManager/LeaveStatus/LeaveApplicationHRAccept.jsx\";\nimport LeaveApplicationHRReject from \"../HrManager/LeaveStatus/LeaveApplicationHRReject.jsx\";\nimport Notification from \"./Notification/Notification.jsx\";\nconst MainContent = () => {\n  return (\n    <InnerDashContainer>\n      <div id=\"main-area\">\n        <div id=\"sidebar-top-content\" />\n        <Switch>\n          <Route path=\"/manager/employee\" component={Employee} />\n          <Route path=\"/manager/salary\" exact component={Salary} />\n          <Route path=\"/manager/company\" exact component={Company} />\n          <Route path=\"/manager/role\" component={Role} />\n          <Route path=\"/manager/position\" exact component={Position} />\n          <Route path=\"/manager/department\" exact component={Department} />\n          <Route path=\"/manager/country\" exact component={Country} />\n          <Route path=\"/manager/state\" exact component={State} />\n          <Route path=\"/manager/city\" exact component={City} />\n\n          {/* leave route */}\n          <Route\n            path=\"/manager/leaveApplication\"\n            exact\n            component={LeaveApplicationHR}\n          />\n\n          <Route path=\"/manager/hrLeave\" exact component={LeaveApplication} />\n          <Route\n            path=\"/manager/leaveAccepted\"\n            exact\n            component={LeaveApplicationHRAccept}\n          />\n          <Route\n            path=\"/manager/leaveRejected\"\n            exact\n            component={LeaveApplicationHRReject}\n          />\n          {/* leave route */}\n\n          <Route path=\"/manager/city\" exact component={City} />\n          <Route path=\"/manager/dashboard\" exact component={Dashboard} />\n          {/* <Route path=\"/manager/task\" exact component={TaskAssign} /> */}\n          <Route path=\"/manager/newTask\" exact component={ManagerNewTask} />\n          <Route\n            path=\"/manager/activeTask\"\n            exact\n            component={ManagerActiveTask}\n          />\n          <Route\n            path=\"/manager/taskcancle\"\n            exact\n            component={ManagerCencelledTask}\n          />\n          <Route\n            path=\"/manager/taskcomplete\"\n            exact\n            component={ManagerCompletedTask}\n          />\n          <Route\n            path=\"/manager/rejectTask\"\n            exact\n            component={ManagerRejectedTask}\n          />\n          <Route path=\"/manager/attenDance\" exact component={Attendance} />\n          <Route\n            path=\"/manager/viewAttenDance\"\n            exact\n            component={ViewAttendance}\n          />\n          <Route path=\"/manager/holiday\" exact component={LeaveCalendar} />\n          <Route\n            path=\"/manager/todaysAttendance\"\n            exact\n            component={TodaysAttendance}\n          />\n          <Route path=\"/manager/notification\" exact component={Notification} />\n          <Route\n            path=\"/manager/createLeave\"\n            exact\n            component={LeaveApplication}\n          />\n          {/* attendance */}\n          <Route render={() => <NotFound404 />} />\n        </Switch>\n      </div>\n    </InnerDashContainer>\n  );\n};\n\nexport default MainContent;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./DashboardHR.css\";\n\nimport Sidebar from \"./Sidebar.jsx\";\nimport MainContent from \"./Router.jsx\";\nimport NavBar from \"../../Pages/Navbar/NavBar.jsx\";\nimport DashContainer from \"../DashContainer.jsx\";\n\nconst DashboardHR = (props) => {\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = () => {\n    console.log(\"switch\");\n\n    if (checked) {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-none\");\n    } else {\n      document.getElementById(\"sidebar\").setAttribute(\"class\", \"display-block\");\n    }\n\n    setChecked(!checked);\n  };\n\n  return (\n    <DashContainer>\n      <Router>\n        <div id=\"outer-main-div\">\n          <div id=\"outer-nav\">\n            <NavBar\n              loginInfo={props.data}\n              checked={checked}\n              handleChange={handleChange}\n              onLogout={props.onLogout}\n            />\n          </div>\n          <div className=\"d-flex\">\n            <Sidebar />\n            <div className=\"p-0 w-100\">\n              <MainContent />\n            </div>\n          </div>\n        </div>\n      </Router>\n    </DashContainer>\n  );\n};\n\nexport default DashboardHR;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./forgot.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../../img/logo.png\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport BASE_URL from \"../config/config\";\r\n\r\nconst ForgetPass = () => {\r\n  const history = useHistory();\r\n  const [stage, setStage] = useState(1);\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    otp: \"\",\r\n    pass: \"\",\r\n    confirm_pass: \"\"\r\n  });\r\n  const [formError, setFormError] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormError({\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    });\r\n  }, [stage]);\r\n\r\n  const [passMatch, setPassMatch] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [countDown, setCountDown] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // timer\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (countDown > 0) {\r\n        if (countDown === 1 && stage === 2) {\r\n          // alert(\"time out\");\r\n          // setStage(1);\r\n          clearInterval(timer);\r\n          setMessage(\"\");\r\n          return;\r\n        }\r\n        setCountDown(countDown - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [countDown]);\r\n\r\n  // verfy the email id\r\n  const verfyEmail = async () => {\r\n    await axios\r\n      .post(`${BASE_URL}/api/verfy_email`, data)\r\n      .then((res) => {\r\n        localStorage.setItem(\"id\", res.data.user._id);\r\n        SendOtp();\r\n        setStage(2);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.message === \"Enter valid email id\") {\r\n          alert(err.response.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    verfyEmail();\r\n  };\r\n\r\n  // send the otp\r\n  const SendOtp = async () => {\r\n    const id = localStorage.getItem(\"id\");\r\n    await axios\r\n      .post(`${BASE_URL}/api/send_otp/${id}`, data)\r\n      .then((res) => {\r\n        let day = new Date();\r\n        let secounds = day.getSeconds();\r\n        setCountDown(res.data.time - secounds + 1);\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  // verfy the otp\r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/api/verfy_otp`, data);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      if (error.response.data.message === \"your requist is faild\") {\r\n        alert(\"invalid otp\");\r\n        // setStage(1);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setStage(3);\r\n  };\r\n\r\n  // change  the password\r\n  const validateFormInput = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (data.pass === \"\") {\r\n      setFormError({\r\n        password: \"Password should not be empty\"\r\n      });\r\n    } else {\r\n      const id = localStorage.getItem(\"id\");\r\n      await axios\r\n        .post(`${BASE_URL}/api/forgot_pass/${id}`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          localStorage.removeItem(\"id\");\r\n          history.push(\"/login#/login\");\r\n          alert(\"Your Password is Updated\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    setStage(3);\r\n  };\r\n\r\n  let success = () => {\r\n    if (\r\n      passMatch.password &&\r\n      passMatch.confirmPassword === passMatch.password\r\n    ) {\r\n      alert(\"successfully changed\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-container\">\r\n        <div className=\"main\">\r\n          <div className=\"stage-indicator\">\r\n            <div className=\"logo\">\r\n              <img src={logo} alt=\"\" />\r\n            </div>\r\n            <div className=\"progress-container\">\r\n              <div className={`progress-bar step-${stage}`} />\r\n            </div>\r\n            <span className=\"stage-text\">Stage {stage} of 3</span>\r\n          </div>\r\n\r\n          {stage === 1 && (\r\n            <form onSubmit={handleEmailSubmit} className=\"login-form\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, email: e.target.value }))\r\n                }\r\n                className=\"login-input\"\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"login-button\">\r\n                Next\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          {stage === 2 && countDown > 0 ? (\r\n            <>\r\n              <form onSubmit={handleOtpSubmit} className=\"login-form mb-3\">\r\n                <p className=\"count-Down\">Time Left: {countDown} sec</p>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter OTP\"\r\n                  value={data.otp}\r\n                  onChange={(e) =>\r\n                    setData((prev) => ({ ...prev, otp: e.target.value }))\r\n                  }\r\n                  className=\"login-input\"\r\n                  required\r\n                />\r\n                <button type=\"submit\" className=\"login-button\">\r\n                  Next\r\n                </button>\r\n              </form>\r\n              <div className=\"box\">\r\n                <button\r\n                  className={`bg-none mt-2 fw-semibold mx-auto text-primary`}\r\n                  onClick={SendOtp}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    fontSize: \"14px\"\r\n                  }}\r\n                >\r\n                  Resend Otp\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>{message}</p>\r\n          )}\r\n\r\n          {stage === 3 && (\r\n            <form onSubmit={validateFormInput} className=\"login-form mb-3\">\r\n              <p className=\"label\">Password</p>\r\n              <input\r\n                value={data.pass}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, pass: e.target.value }))\r\n                }\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"login-input\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n              <p className=\"error-message\">{formError.password}</p>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                className=\"login-button\"\r\n                value=\"Submit\"\r\n                onClick={success}\r\n              />\r\n            </form>\r\n          )}\r\n          <div className=\"box text-center\">\r\n            <Link\r\n              to=\"login#/login\"\r\n              className=\"fw-semibold\"\r\n              style={{ fontSize: \"14px\" }}\r\n            >\r\n              Do You Login Hear\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPass;\r\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\nimport history from \"./history.js\";\nimport toast from \"react-hot-toast\";\n\nimport Login from \"./Pages/Login/Login.jsx\";\nimport DashboardAdmin from \"./Component/Admin/DashboardAdmin.jsx\";\nimport DashboardHR from \"./Component/HrManager/DashboardHR.jsx\";\nimport DashboardEmployee from \"./Component/Employee/DashboardEmployee.jsx\";\nimport ManagerDashboard from \"./Component/Manager/ManagerDashboard.jsx\";\nimport Moment from \"moment\";\nimport ForgetPass from \"./Pages/ForgotPass/ForgetPass.jsx\";\nimport BASE_URL from \"./Pages/config/config.js\";\n\nconst App = () => {\n  const [userData, setUserData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [pass, setPass] = useState(true);\n  const [isLogin, setIsLogin] = useState(false);\n  const [firstTimeAlert, setFirstTimeAlert] = useState(true);\n  const [employees, setEmployees] = useState(null);\n  useEffect(() => {\n    setUserData({\n      _id: localStorage.getItem(\"_id\") || \"\",\n      Account: localStorage.getItem(\"Account\") || \"\",\n      Name: localStorage.getItem(\"Name\") || \"\",\n      Email: localStorage.getItem(\"Email\") || \"\"\n    });\n\n    setIsLogin(localStorage.getItem(\"isLogin\") === \"true\");\n\n    // temporary: for the user to see user id and pass of all accounts to explore all features of the app\n    if (firstTimeAlert && !isLogin) {\n      setFirstTimeAlert(false);\n    }\n  }, [firstTimeAlert, isLogin]);\n  const loadEmployeeData = (email, account) => {\n    console.log(email, account, localStorage.getItem(\"token\"));\n    axios\n      .get(`${BASE_URL}/api/employee`, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then((response) => {\n        // Ensure that response.data is an array\n        let related = response.data.filter((val) => {\n          return val.Account === account;\n        });\n        console.log(related);\n        setEmployees(related);\n        handleLogin(related, email);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setPass(true);\n    setLoading(true);\n    login(event.target[0].value, event.target[1].value);\n    event.target.reset();\n  };\n  const handleLogou = async () => {\n    let email = localStorage.getItem(\"Email\");\n    console.log(employees, email);\n    if (employees) {\n      let data = employees.filter((val) => {\n        return val.Email === email;\n      });\n      console.log(data);\n      let attencenceID = data[0].attendanceObjID;\n      let selectedEmployee = data[0]._id;\n      try {\n        if (!email) {\n          alert(\"Please select an employee\");\n          return;\n        }\n\n        const currentTime = Moment().format(\"HH:mm:ss\");\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n          employeeId: selectedEmployee,\n          year: new Date().getFullYear(),\n          month: new Date().getMonth() + 1,\n          date: new Date().getDate(),\n          logoutTime: [currentTime],\n          logoutTimeMs: [currentTimeMs],\n          status: \"logout\"\n        });\n        toast.success(\"Logout time recorded successfully\");\n      } catch (error) {\n        console.error(\"Error recording logout time:\", error);\n        toast.error(\"Error recording logout time\");\n      }\n    }\n  };\n  const handleLogout = () => {\n    console.log(\"logout\");\n    handleLogou();\n    localStorage.clear();\n    setUserData({});\n    setIsLogin(false);\n  };\n  const fetchUsers = async (id, email) => {\n    console.log(id, email);\n    try {\n      const response = await axios.get(`${BASE_URL}/api/employee/` + id, {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      });\n      console.log(response.data);\n      setEmployees(response.data);\n      handleLogin(response.data, email);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n    }\n  };\n\n  const handleLogin = async (data1, email) => {\n    console.log(data1);\n    if (data1 && email) {\n      let data = data1.filter((val) => {\n        return val.Email === email;\n      });\n      console.log(data[0].attendanceObjID, data[0]._id);\n      let attencenceID = data[0].attendanceObjID;\n      let selectedEmployee = data[0]._id;\n\n      try {\n        if (!(data1 && email)) {\n          alert(\"Please select a user\");\n          return;\n        }\n\n        const currentTime = Moment().format(\"HH:mm:ss\");\n        const currentTimeMs = Math.round(new Date().getTime() / 1000 / 60);\n\n        await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n          employeeId: selectedEmployee,\n          year: new Date().getFullYear(),\n          month: new Date().getMonth() + 1,\n          date: new Date().getDate(),\n          loginTime: [currentTime],\n          loginTimeMs: [currentTimeMs],\n          status: \"login\"\n        });\n        toast.success(\"Login time recorded successfully\");\n      } catch (error) {\n        console.error(\"Error recording login time:\", error);\n        toast.error(\"Error recording login time\");\n      }\n    }\n  };\n  const login = (id, pass) => {\n    const bodyLogin = {\n      email: id,\n      password: pass\n    };\n\n    axios\n      .post(`${BASE_URL}/api/login`, bodyLogin)\n      .then((res) => {\n        const decodedData = jwt.decode(res.data);\n\n        localStorage.setItem(\"token\", res.data);\n\n        if (decodedData.Account === 1) {\n          setPass(true);\n          setLoading(false);\n          setIsLogin(true);\n\n          localStorage.setItem(\"isLogin\", true);\n          localStorage.setItem(\"Account\", 1);\n          localStorage.setItem(\"_id\", decodedData._id);\n          localStorage.setItem(\n            \"Name\",\n            `${decodedData.FirstName} ${decodedData.LastName}`\n          );\n          localStorage.setItem(\"Email\", bodyLogin.email);\n          loadEmployeeData(bodyLogin.email, decodedData.Account);\n          history.push(\"#/admin/dashboard\");\n        } else if (decodedData.Account === 2) {\n          setPass(true);\n          setLoading(false);\n          setIsLogin(true);\n\n          localStorage.setItem(\"isLogin\", true);\n          localStorage.setItem(\"Account\", 2);\n          localStorage.setItem(\"_id\", decodedData._id);\n          localStorage.setItem(\n            \"Name\",\n            `${decodedData.FirstName} ${decodedData.LastName}`\n          );\n          localStorage.setItem(\"Email\", bodyLogin.email);\n          // console.log(decodedData._id);\n          loadEmployeeData(bodyLogin.email, decodedData.Account);\n          // fetchUsers(decodedData._id, bodyLogin.email);\n          history.push(\"#/hr/dashboard\");\n        } else if (decodedData.Account === 4) {\n          setPass(true);\n          setLoading(false);\n          setIsLogin(true);\n\n          localStorage.setItem(\"isLogin\", true);\n          localStorage.setItem(\"Account\", 4);\n          localStorage.setItem(\"_id\", decodedData._id);\n          localStorage.setItem(\n            \"Name\",\n            `${decodedData.FirstName} ${decodedData.LastName}`\n          );\n          localStorage.setItem(\"Email\", bodyLogin.email);\n          // console.log(decodedData._id);\n          loadEmployeeData(bodyLogin.email, decodedData.Account);\n          // fetchUsers(decodedData._id, bodyLogin.email);\n          history.push(\"#/manager/dashboard\");\n        } else if (decodedData.Account === 3) {\n          setPass(true);\n          setLoading(false);\n          setIsLogin(true);\n\n          localStorage.setItem(\"isLogin\", true);\n          localStorage.setItem(\"Account\", 3);\n          localStorage.setItem(\"_id\", decodedData._id);\n          localStorage.setItem(\n            \"Name\",\n            `${decodedData.FirstName} ${decodedData.LastName}`\n          );\n          localStorage.setItem(\"Email\", bodyLogin.email);\n          // loadEmployeeData(bodyLogin.email, decodedData.Account);\n          fetchUsers(decodedData._id, bodyLogin.email);\n\n          // history.push(`#/employee/${decodedData._id}/dashboard`);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setPass(false);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/login\"\n        render={() =>\n          userData.Account == 1 ? (\n            <Redirect to=\"/admin/dashboard\" />\n          ) : userData.Account == 2 ? (\n            <Redirect to=\"/hr/dashboard\" />\n          ) : userData.Account == 3 ? (\n            <Redirect to=\"/employee/dashboard\" />\n          ) : userData.Account == 4 ? (\n            <Redirect to=\"/manager/dashboard\" />\n          ) : (\n            <Login onSubmit={handleSubmit} loading={loading} pass={pass} />\n          )\n        }\n      />\n      <Route\n        path=\"/admin\"\n        render={() =>\n          userData.Account == 1 ? (\n            <DashboardAdmin data={userData} onLogout={handleLogout} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        path=\"/hr\"\n        render={() =>\n          userData.Account == 2 ? (\n            <DashboardHR data={userData} onLogout={handleLogout} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        path=\"/employee/\"\n        render={() =>\n          userData.Account == 3 ? (\n            <DashboardEmployee data={userData} onLogout={handleLogout} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        path=\"/manager/\"\n        render={() =>\n          userData.Account == 4 ? (\n            <ManagerDashboard data={userData} onLogout={handleLogout} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route path=\"/forgetPassword\" exact component={ForgetPass} />\n      <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />\n      <Route render={() => <Redirect to=\"/login\" />} />\n    </Router>\n  );\n};\n\nexport default App;\n\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   HashRouter as Router,\n//   Route,\n//   Switch,\n//   Redirect,\n//   Routes\n// } from \"react-router-dom\";\n// import axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n// import history from \"./history.js\";\n// import BASE_URL from \"./Pages/config/config.js\";\n\n// import Login from \"./Pages/Login/Login.jsx\";\n// import DashboardAdmin from \"./Component/Admin/DashboardAdmin.jsx\";\n// import DashboardHR from \"./Component/HrManager/DashboardHR.jsx\";\n// import DashboardEmployee from \"./Component/Employee/DashboardEmployee.jsx\";\n// import ManagerDashboard from \"./Component/Manager/ManagerDashboard.jsx\";\n// import ForgetPass from \"./Pages/ForgotPass/ForgetPass.jsx\";\n// import Moment from \"moment\";\n\n// const App = () => {\n//   const [userData, setUserData] = useState({});\n//   const [loading, setLoading] = useState(false);\n//   const [pass, setPass] = useState(true);\n//   const [isLogin, setIsLogin] = useState(false);\n//   const [firstTimeAlert, setFirstTimeAlert] = useState(true);\n//   const [employees, setEmployees] = useState(null);\n//   useEffect(() => {\n//     setUserData({\n//       _id: localStorage.getItem(\"_id\") || \"\",\n//       Account: localStorage.getItem(\"Account\") || \"\",\n//       Name: localStorage.getItem(\"Name\") || \"\",\n//       Email: localStorage.getItem(\"Email\") || \"\"\n//     });\n\n//     setIsLogin(localStorage.getItem(\"isLogin\") === \"true\");\n\n//     // temporary: for the user to see user id and pass of all accounts to explore all features of the app\n//     if (firstTimeAlert && !isLogin) {\n//       setFirstTimeAlert(false);\n//     }\n//   }, [firstTimeAlert, isLogin]);\n//   const loadEmployeeData = (email, account) => {\n//     console.log(email, account, localStorage.getItem(\"token\"));\n//     axios\n//       .get(`${BASE_URL}/api/employee`, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       })\n//       .then((response) => {\n//         // Ensure that response.data is an array\n//         let related = response.data.filter((val) => {\n//           return val.Account === account;\n//         });\n//         console.log(related);\n//         setEmployees(related);\n//         handleLogin(related, email);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     setPass(true);\n//     setLoading(true);\n//     login(event.target[0].value, event.target[1].value);\n//     event.target.reset();\n//   };\n//   // const handleLogou = async () => {\n//   //   let email = localStorage.getItem(\"Email\");\n//   //   console.log(employees, email);\n//   //   if (employees) {\n//   //     let data = employees.filter((val) => {\n//   //       return val.Email === email;\n//   //     });\n//   //     console.log(data);\n//   //     let attencenceID = data[0].attendanceObjID;\n//   //     let selectedEmployee = data[0]._id;\n//   //     try {\n//   //       if (!email) {\n//   //         alert(\"Please select an employee\");\n//   //         return;\n//   //       }\n\n//   //       const currentTime = new Date().toLocaleTimeString();\n//   //       await axios.post(\n//   //         `${BASE_URL}/api/attendance/${attencenceID}`,\n//   //         {\n//   //           employeeId: selectedEmployee,\n//   //           year: new Date().getFullYear(),\n//   //           month: new Date().getMonth() + 1,\n//   //           date: new Date().getDate(),\n//   //           logoutTime: [currentTime],\n//   //           status: \"logout\"\n//   //         }\n//   //       );\n//   //       alert(\"Logout time recorded successfully\");\n//   //     } catch (error) {\n//   //       console.error(\"Error recording logout time:\", error);\n//   //       alert(\"Error recording logout time\");\n//   //     }\n//   //   }\n//   // };\n\n//   const handleLogou = async () => {\n//     let email = localStorage.getItem(\"Email\");\n//     console.log(employees, email);\n//     if (employees) {\n//       let data = employees.filter((val) => {\n//         return val.Email === email;\n//       });\n//       console.log(data);\n//       let attencenceID = data[0].attendanceObjID;\n//       let selectedEmployee = data[0]._id;\n//       try {\n//         if (!email) {\n//           alert(\"Please select an employee\");\n//           return;\n//         }\n\n//         // Create a new Date object\n//         const currentDate = new Date();\n\n//         // Get the current hour, minute, and second in 24-hour format\n//         const currentHour = currentDate.getHours();\n//         const currentMinute = currentDate.getMinutes();\n//         const currentSecond = currentDate.getSeconds();\n\n//         // Format the current time in 24-hour format\n//         // const currentTime24Hrs = `${\n//         //   currentHour < 10 ? \"0\" : \"\"\n//         // }${currentHour}:${currentMinute < 10 ? \"0\" : \"\"}${currentMinute}:${\n//         //   currentSecond < 10 ? \"0\" : \"\"\n//         // }${currentSecond}`;\n//         const currentTime = Moment().filter(\"HH:mm:ss\");\n\n//         // Get the current time in milliseconds\n//         const currentTimeMs = currentDate.getTime();\n\n//         await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n//           employeeId: selectedEmployee,\n//           year: new Date().getFullYear(),\n//           month: new Date().getMonth() + 1,\n//           date: new Date().getDate(),\n//           logoutTime: [currentTime],\n//           logoutTimeMs: [currentTimeMs],\n//           status: \"Logout\"\n//         });\n//         alert(\"Logout time recorded successfully\");\n//       } catch (error) {\n//         console.error(\"Error recording logout time:\", error);\n//         alert(\"Error recording logout time\");\n//       }\n//     }\n//   };\n//   const handleLogout = () => {\n//     console.log(\"logout\");\n//     handleLogou();\n//     localStorage.clear();\n//     setUserData({});\n//     setIsLogin(false);\n//   };\n//   const fetchUsers = async (id, email) => {\n//     console.log(id, email);\n//     try {\n//       const response = await axios.get(`${BASE_URL}/api/employee/` + id, {\n//         headers: {\n//           authorization: localStorage.getItem(\"token\") || \"\"\n//         }\n//       });\n//       console.log(response.data);\n//       setEmployees(response.data);\n//       handleLogin(response.data, email);\n//     } catch (error) {\n//       console.error(\"Error fetching employees:\", error);\n//     }\n//   };\n\n//   // const handleLogin = async (data1, email) => {\n//   //   console.log(data1);\n//   //   if (data1 && email) {\n//   //     let data = data1.filter((val) => {\n//   //       return val.Email === email;\n//   //     });\n//   //     console.log(data[0].attendanceObjID, data[0]._id);\n//   //     let attencenceID = data[0].attendanceObjID;\n//   //     let selectedEmployee = data[0]._id;\n\n//   //     try {\n//   //       if (!(data1 && email)) {\n//   //         alert(\"Please select a user\");\n//   //         return;\n//   //       }\n\n//   //       const currentTime = new Date().toLocaleTimeString();\n\n//   //       await axios.post(\n//   //         `${BASE_URL}/api/attendance/${attencenceID}`,\n//   //         {\n//   //           employeeId: selectedEmployee,\n//   //           year: new Date().getFullYear(),\n//   //           month: new Date().getMonth() + 1,\n//   //           date: new Date().getDate(),\n//   //           loginTime: [currentTime],\n//   //           status: \"login\"\n//   //         }\n//   //       );\n//   //       alert(\"Login time recorded successfully\");\n//   //     } catch (error) {\n//   //       console.error(\"Error recording login time:\", error);\n//   //       alert(\"Error recording login time\");\n//   //     }\n//   //   }\n//   // };\n\n//   const handleLogin = async (data1, email) => {\n//     console.log(data1);\n//     if (data1 && email) {\n//       let data = data1.filter((val) => {\n//         return val.Email === email;\n//       });\n//       console.log(data[0].attendanceObjID, data[0]._id);\n//       let attencenceID = data[0].attendanceObjID;\n//       let selectedEmployee = data[0]._id;\n\n//       try {\n//         if (!(data1 && email)) {\n//           alert(\"Please select a user\");\n//           return;\n//         }\n\n//         const currentDate = new Date();\n\n//         // Get the current hour, minute, and second in 24-hour format\n//         const currentHour = currentDate.getHours();\n//         const currentMinute = currentDate.getMinutes();\n//         const currentSecond = currentDate.getSeconds();\n\n//         // Format the current time in 24-hour format\n//         // const currentTime24Hrs = `${\n//         //   currentHour < 10 ? \"0\" : \"\"\n//         // }${currentHour}:${currentMinute < 10 ? \"0\" : \"\"}${currentMinute}:${\n//         //   currentSecond < 10 ? \"0\" : \"\"\n//         // }${currentSecond}`;\n\n//         // Get the current time in milliseconds\n//         const currentTimeMs = currentDate.getTime();\n//         await axios.post(`${BASE_URL}/api/attendance/${attencenceID}`, {\n//           employeeId: selectedEmployee,\n//           year: new Date().getFullYear(),\n//           month: new Date().getMonth() + 1,\n//           date: new Date().getDate(),\n//           loginTime: [currentTimeMs],\n//           loginTimeMs: [currentTimeMs],\n//           status: \"login\"\n//         });\n//         alert(\"Login time recorded successfully\");\n//       } catch (error) {\n//         console.error(\"Error recording login time:\", error);\n//         alert(\"Error recording login time\");\n//       }\n//     }\n//   };\n//   const login = (id, pass) => {\n//     const bodyLogin = {\n//       email: id,\n//       password: pass\n//     };\n\n//     axios\n//       .post(`${BASE_URL}/api/login`, bodyLogin)\n//       .then((res) => {\n//         const decodedData = jwt.decode(res.data);\n\n//         localStorage.setItem(\"token\", res.data);\n\n//         if (decodedData.Account === 1) {\n//           setPass(true);\n//           setLoading(false);\n//           setIsLogin(true);\n\n//           localStorage.setItem(\"isLogin\", true);\n//           localStorage.setItem(\"Account\", 1);\n//           localStorage.setItem(\"_id\", decodedData._id);\n//           localStorage.setItem(\n//             \"Name\",\n//             `${decodedData.FirstName} ${decodedData.LastName}`\n//           );\n//           localStorage.setItem(\"Email\", bodyLogin.email);\n//           loadEmployeeData(bodyLogin.email, decodedData.Account);\n//           history.push(\"#/admin/dashboard\");\n//         } else if (decodedData.Account === 2) {\n//           setPass(true);\n//           setLoading(false);\n//           setIsLogin(true);\n\n//           localStorage.setItem(\"isLogin\", true);\n//           localStorage.setItem(\"Account\", 2);\n//           localStorage.setItem(\"_id\", decodedData._id);\n//           localStorage.setItem(\n//             \"Name\",\n//             `${decodedData.FirstName} ${decodedData.LastName}`\n//           );\n//           localStorage.setItem(\"Email\", bodyLogin.email);\n//           // console.log(decodedData._id);\n//           loadEmployeeData(bodyLogin.email, decodedData.Account);\n//           // fetchUsers(decodedData._id, bodyLogin.email);\n//           history.push(\"#/hr/dashboard\");\n//         } else if (decodedData.Account === 4) {\n//           setPass(true);\n//           setLoading(false);\n//           setIsLogin(true);\n\n//           localStorage.setItem(\"isLogin\", true);\n//           localStorage.setItem(\"Account\", 4);\n//           localStorage.setItem(\"_id\", decodedData._id);\n//           localStorage.setItem(\n//             \"Name\",\n//             `${decodedData.FirstName} ${decodedData.LastName}`\n//           );\n//           localStorage.setItem(\"Email\", bodyLogin.email);\n//           // console.log(decodedData._id);\n//           loadEmployeeData(bodyLogin.email, decodedData.Account);\n//           // fetchUsers(decodedData._id, bodyLogin.email);\n//           history.push(\"#/manager/dashboard\");\n//         } else if (decodedData.Account === 3) {\n//           setPass(true);\n//           setLoading(false);\n//           setIsLogin(true);\n\n//           localStorage.setItem(\"isLogin\", true);\n//           localStorage.setItem(\"Account\", 3);\n//           localStorage.setItem(\"_id\", decodedData._id);\n//           localStorage.setItem(\n//             \"Name\",\n//             `${decodedData.FirstName} ${decodedData.LastName}`\n//           );\n//           localStorage.setItem(\"Email\", bodyLogin.email);\n//           // loadEmployeeData(bodyLogin.email, decodedData.Account);\n//           fetchUsers(decodedData._id, bodyLogin.email);\n\n//           // history.push(`#/employee/${decodedData._id}/dashboard`);\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//         setPass(false);\n//         setLoading(false);\n//       });\n//   };\n\n//   return (\n//     <Router>\n//       <Route\n//         exact\n//         path=\"/login\"\n//         render={() =>\n//           userData.Account == 1 ? (\n//             <Redirect to=\"/admin/dashboard\" />\n//           ) : userData.Account == 2 ? (\n//             <Redirect to=\"/hr/dashboard\" />\n//           ) : userData.Account == 3 ? (\n//             <Redirect to=\"/employee/dashboard\" />\n//           ) : userData.Account == 4 ? (\n//             <Redirect to=\"/manager/dashboard\" />\n//           ) : (\n//             <Login onSubmit={handleSubmit} loading={loading} pass={pass} />\n//           )\n//         }\n//       />\n//       <Route\n//         path=\"/admin\"\n//         render={() =>\n//           userData.Account == 1 ? (\n//             <DashboardAdmin data={userData} onLogout={handleLogout} />\n//           ) : (\n//             <Redirect to=\"/login\" />\n//           )\n//         }\n//       />\n//       <Route\n//         path=\"/hr\"\n//         render={() =>\n//           userData.Account == 2 ? (\n//             <DashboardHR data={userData} onLogout={handleLogout} />\n//           ) : (\n//             <Redirect to=\"/login\" />\n//           )\n//         }\n//       />\n//       <Route\n//         path=\"/employee/\"\n//         render={() =>\n//           userData.Account == 3 ? (\n//             <DashboardEmployee data={userData} onLogout={handleLogout} />\n//           ) : (\n//             <Redirect to=\"/login\" />\n//           )\n//         }\n//       />\n//       <Route\n//         path=\"/manager/\"\n//         render={() =>\n//           userData.Account == 4 ? (\n//             <ManagerDashboard data={userData} onLogout={handleLogout} />\n//           ) : (\n//             <Redirect to=\"/login\" />\n//           )\n//         }\n//       />\n//       <Route path=\"/forgetPassword\" exact component={ForgetPass} />\n//       <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />\n//       <Route render={() => <Redirect to=\"/login\" />} />\n//     </Router>\n//   );\n// };\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useMemo } from \"react\";\r\nimport { AttendanceContext } from \"./AttendanceContext\";\r\nimport { io } from \"socket.io-client\";\r\nimport BASE_URL from \"../../Pages/config/config\";\r\n\r\nconst AttendanceContextProvider = ({ children }) => {\r\n  const socket = useMemo(() => {\r\n    return io(`${BASE_URL}`);\r\n  }, []);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  const [attencenceID, setAttencenceID] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n\r\n  return (\r\n    <AttendanceContext.Provider\r\n      value={{\r\n        socket,\r\n        emailInput,\r\n        setEmailInput,\r\n        employees,\r\n        setEmployees,\r\n        selectedEmployee,\r\n        setSelectedEmployee,\r\n        attencenceID,\r\n        setAttencenceID,\r\n        message,\r\n        setMessage\r\n      }}\r\n    >\r\n      {children}\r\n    </AttendanceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AttendanceContextProvider;\r\n","// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\n// import { ToastContainer } from 'react-toastify';\nimport { Toaster } from \"react-hot-toast\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AttendanceContextProvider from \"./Context/AttendanceContext/AttendanceContextProvider\";\nimport { SidebarProvider } from \"./Context/AttendanceContext/smallSidebarcontext\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <SidebarProvider>\n      <AttendanceContextProvider>\n        <App />\n      </AttendanceContextProvider>\n    </SidebarProvider>\n    <Toaster\n      position=\"top-center\"\n      reverseOrder={false}\n      gutter={8}\n      containerClassName=\"\"\n      containerStyle={{}}\n      toastOptions={{\n        // Define default options\n        className: \"\",\n        duration: 5000,\n        style: {\n          background: \"#363636\",\n          color: \"#fff\"\n        },\n\n        // Default options for specific types\n        success: {\n          duration: 3000,\n          theme: {\n            primary: \"green\",\n            secondary: \"black\"\n          }\n        }\n      }}\n    />{\" \"}\n  </React.StrictMode>\n\n  // <React.StrictMode>\n  //   <AttendanceContextProvider>\n  //     <App />\n  //   </AttendanceContextProvider>\n  //   <Toaster\n  //     position=\"top-center\"\n  //     reverseOrder={false}\n  //     gutter={8}\n  //     containerClassName=\"\"\n  //     containerStyle={{}}\n  //     toastOptions={{\n  //       // Define default options\n  //       className: \"\",\n  //       duration: 5000,\n  //       style: {\n  //         background: \"#363636\",\n  //         color: \"#fff\"\n  //       },\n\n  //       // Default options for specific types\n  //       success: {\n  //         duration: 3000,\n  //         theme: {\n  //           primary: \"green\",\n  //           secondary: \"black\"\n  //         }\n  //       }\n  //     }}\n  //   />{\" \"}\n  // </React.StrictMode>\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}